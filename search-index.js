var searchIndex = JSON.parse('{\
"node_bench":{"doc":"","i":[[0,"common","node_bench","",null,null],[4,"SizeType","node_bench::common","",null,null],[13,"Empty","","",0,null],[13,"Small","","",0,null],[13,"Medium","","",0,null],[13,"Large","","",0,null],[13,"Full","","",0,null],[13,"Custom","","",0,null],[11,"transactions","","",0,[[],["option",4]]],[0,"construct","node_bench","Block construction benchmark.",null,null],[3,"ConstructionBenchmarkDescription","node_bench::construct","",null,null],[12,"profile","","",1,null],[12,"key_types","","",1,null],[12,"block_type","","",1,null],[12,"size","","",1,null],[12,"database_type","","",1,null],[3,"ConstructionBenchmark","","",null,null],[12,"profile","","",2,null],[12,"database","","",2,null],[12,"transactions","","",2,null],[3,"PoolTransaction","","",null,null],[12,"data","","",3,null],[12,"hash","","",3,null],[3,"Transactions","","",null,null],[12,"0","","",4,null],[0,"core","node_bench","",null,null],[3,"Path","node_bench::core","",null,null],[12,"0","","",5,null],[11,"new","","",5,[[]]],[11,"push","","",5,[[]]],[11,"full","","",5,[[],["string",3]]],[11,"has","","",5,[[]]],[8,"BenchmarkDescription","","",null,null],[10,"path","","",6,[[],["path",3]]],[10,"setup","","",6,[[["box",3]],[["benchmark",8],["box",3]]]],[10,"name","","",6,[[],["cow",4]]],[8,"Benchmark","","",null,null],[10,"run","","",7,[[["mode",4]],["duration",3]]],[3,"BenchmarkOutput","","",null,null],[12,"name","","",8,null],[12,"raw_average","","",8,null],[12,"average","","",8,null],[3,"NsFormatter","","",null,null],[12,"0","","",9,null],[4,"Mode","","",null,null],[13,"Regular","","",10,null],[13,"Profile","","",10,null],[5,"run_benchmark","","",null,[[["mode",4],["benchmarkdescription",8],["box",3]],["benchmarkoutput",3]]],[0,"generator","node_bench","",null,null],[5,"generate_trie","node_bench::generator","Generate trie from given <code>key_values</code>.",null,[[["keyvaluedb",8],["arc",3]],["hash",6]]],[0,"import","node_bench","Block import benchmark.",null,null],[3,"ImportBenchmarkDescription","node_bench::import","",null,null],[12,"profile","","",11,null],[12,"key_types","","",11,null],[12,"block_type","","",11,null],[12,"size","","",11,null],[12,"database_type","","",11,null],[3,"ImportBenchmark","","",null,null],[12,"profile","","",12,null],[12,"database","","",12,null],[12,"block","","",12,null],[12,"block_type","","",12,null],[0,"simple_trie","node_bench","",null,null],[6,"Hasher","node_bench::simple_trie","",null,null],[3,"SimpleTrie","","Immutable generated trie database with root.",null,null],[12,"db","","",13,null],[12,"overlay","","",13,null],[0,"state_sizes","node_bench","",null,null],[17,"KUSAMA_STATE_DISTRIBUTION","node_bench::state_sizes","Kusama value size distribution",null,null],[0,"tempdb","node_bench","",null,null],[4,"DatabaseType","node_bench::tempdb","",null,null],[13,"RocksDb","","",14,null],[13,"ParityDb","","",14,null],[3,"TempDatabase","","",null,null],[12,"0","","",15,null],[3,"ParityDbWrapper","","",null,null],[12,"0","","",16,null],[11,"new","","",15,[[]]],[11,"open","","",15,[[["databasetype",4]],[["keyvaluedb",8],["arc",3]]]],[0,"trie","node_bench","Trie benchmark (integrated).",null,null],[17,"SAMPLE_SIZE","node_bench::trie","",null,null],[17,"TEST_WRITE_SIZE","","",null,null],[6,"KeyValue","","",null,null],[6,"KeyValues","","",null,null],[4,"DatabaseSize","","",null,null],[13,"Empty","","",17,null],[13,"Smallest","","",17,null],[13,"Small","","",17,null],[13,"Medium","","",17,null],[13,"Large","","",17,null],[13,"Huge","","",17,null],[3,"KUSAMA_STATE_DISTRIBUTION","","",null,null],[12,"__private_field","","",18,null],[11,"keys","","Should be multiple of SAMPLE_SIZE!",17,[[]]],[5,"pretty_print","","",null,[[],["string",3]]],[3,"TrieReadBenchmarkDescription","","",null,null],[12,"database_size","","",19,null],[12,"database_type","","",19,null],[3,"TrieReadBenchmark","","",null,null],[12,"database","","",20,null],[12,"root","","",20,null],[12,"warmup_keys","","",20,null],[12,"query_keys","","",20,null],[12,"database_type","","",20,null],[3,"Storage","","",null,null],[12,"0","","",21,null],[3,"TrieWriteBenchmarkDescription","","",null,null],[12,"database_size","","",22,null],[12,"database_type","","",22,null],[3,"TrieWriteBenchmark","","",null,null],[12,"database","","",23,null],[12,"root","","",23,null],[12,"warmup_keys","","",23,null],[12,"database_type","","",23,null],[5,"random_vec","","",null,[[],["vec",3]]],[3,"SizePool","","",null,null],[12,"distribution","","",24,null],[12,"total","","",24,null],[11,"from_histogram","","",24,[[],["sizepool",3]]],[11,"value","","",24,[[],["vec",3]]],[11,"key","","",24,[[],["vec",3]]],[0,"txpool","node_bench","Transaction pool integrated benchmarks.",null,null],[3,"PoolBenchmarkDescription","node_bench::txpool","",null,null],[12,"database_type","","",25,null],[3,"PoolBenchmark","","",null,null],[12,"database","","",26,null],[3,"Opt","node_bench","",null,null],[12,"list","","Show list of all available benchmarks.",27,null],[12,"json","","Machine readable json output.",27,null],[12,"filter","","Filter benchmarks.",27,null],[12,"transactions","","Number of transactions for block import with <code>custom</code> size.",27,null],[12,"mode","","Mode",27,null],[5,"main","","",null,[[]]],[11,"from","node_bench::common","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"__clone_box","","",0,[[["private",3]]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"to_subset","","",0,[[],["option",4]]],[11,"is_in_subset","","",0,[[]]],[11,"to_subset_unchecked","","",0,[[]]],[11,"from_subset","","",0,[[]]],[11,"from","node_bench::construct","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"to_subset","","",1,[[],["option",4]]],[11,"is_in_subset","","",1,[[]]],[11,"to_subset_unchecked","","",1,[[]]],[11,"from_subset","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"unique_saturated_into","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"to_subset","","",2,[[],["option",4]]],[11,"is_in_subset","","",2,[[]]],[11,"to_subset_unchecked","","",2,[[]]],[11,"from_subset","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"unique_saturated_into","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"to_subset","","",3,[[],["option",4]]],[11,"is_in_subset","","",3,[[]]],[11,"to_subset_unchecked","","",3,[[]]],[11,"from_subset","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"unique_saturated_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"__clone_box","","",4,[[["private",3]]]],[11,"from_ref","","",4,[[]]],[11,"into_ref","","",4,[[]]],[11,"from_mut","","",4,[[]]],[11,"into_mut","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"to_subset","","",4,[[],["option",4]]],[11,"is_in_subset","","",4,[[]]],[11,"to_subset_unchecked","","",4,[[]]],[11,"from_subset","","",4,[[]]],[11,"from","node_bench::core","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"unchecked_into","","",5,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[]]],[11,"unique_saturated_into","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from_ref","","",5,[[]]],[11,"into_ref","","",5,[[]]],[11,"from_mut","","",5,[[]]],[11,"into_mut","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"to_subset","","",5,[[],["option",4]]],[11,"is_in_subset","","",5,[[]]],[11,"to_subset_unchecked","","",5,[[]]],[11,"from_subset","","",5,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"unchecked_into","","",8,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[]]],[11,"unique_saturated_into","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"__clone_box","","",8,[[["private",3]]]],[11,"from_ref","","",8,[[]]],[11,"into_ref","","",8,[[]]],[11,"from_mut","","",8,[[]]],[11,"into_mut","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"to_subset","","",8,[[],["option",4]]],[11,"is_in_subset","","",8,[[]]],[11,"to_subset_unchecked","","",8,[[]]],[11,"from_subset","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"unchecked_into","","",9,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[]]],[11,"unique_saturated_into","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from_ref","","",9,[[]]],[11,"into_ref","","",9,[[]]],[11,"from_mut","","",9,[[]]],[11,"into_mut","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"to_subset","","",9,[[],["option",4]]],[11,"is_in_subset","","",9,[[]]],[11,"to_subset_unchecked","","",9,[[]]],[11,"from_subset","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"unchecked_into","","",10,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[]]],[11,"unique_saturated_into","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"__clone_box","","",10,[[["private",3]]]],[11,"from_ref","","",10,[[]]],[11,"into_ref","","",10,[[]]],[11,"from_mut","","",10,[[]]],[11,"into_mut","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"inlined_clone","","",10,[[]]],[11,"to_subset","","",10,[[],["option",4]]],[11,"is_in_subset","","",10,[[]]],[11,"to_subset_unchecked","","",10,[[]]],[11,"from_subset","","",10,[[]]],[11,"from","node_bench::import","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"unchecked_into","","",11,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[]]],[11,"unique_saturated_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from_ref","","",11,[[]]],[11,"into_ref","","",11,[[]]],[11,"from_mut","","",11,[[]]],[11,"into_mut","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"to_subset","","",11,[[],["option",4]]],[11,"is_in_subset","","",11,[[]]],[11,"to_subset_unchecked","","",11,[[]]],[11,"from_subset","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"unchecked_into","","",12,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[]]],[11,"unique_saturated_into","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from_ref","","",12,[[]]],[11,"into_ref","","",12,[[]]],[11,"from_mut","","",12,[[]]],[11,"into_mut","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"to_subset","","",12,[[],["option",4]]],[11,"is_in_subset","","",12,[[]]],[11,"to_subset_unchecked","","",12,[[]]],[11,"from_subset","","",12,[[]]],[11,"from","node_bench::simple_trie","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"unchecked_into","","",13,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[]]],[11,"unique_saturated_into","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from_ref","","",13,[[]]],[11,"into_ref","","",13,[[]]],[11,"from_mut","","",13,[[]]],[11,"into_mut","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"to_subset","","",13,[[],["option",4]]],[11,"is_in_subset","","",13,[[]]],[11,"to_subset_unchecked","","",13,[[]]],[11,"from_subset","","",13,[[]]],[11,"from","node_bench::tempdb","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"unchecked_into","","",14,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[]]],[11,"unique_saturated_into","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"__clone_box","","",14,[[["private",3]]]],[11,"from_ref","","",14,[[]]],[11,"into_ref","","",14,[[]]],[11,"from_mut","","",14,[[]]],[11,"into_mut","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"to_subset","","",14,[[],["option",4]]],[11,"is_in_subset","","",14,[[]]],[11,"to_subset_unchecked","","",14,[[]]],[11,"from_subset","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"unchecked_into","","",15,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[]]],[11,"unique_saturated_into","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"__clone_box","","",15,[[["private",3]]]],[11,"from_ref","","",15,[[]]],[11,"into_ref","","",15,[[]]],[11,"from_mut","","",15,[[]]],[11,"into_mut","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"to_subset","","",15,[[],["option",4]]],[11,"is_in_subset","","",15,[[]]],[11,"to_subset_unchecked","","",15,[[]]],[11,"from_subset","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"unchecked_into","","",16,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[]]],[11,"unique_saturated_into","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from_ref","","",16,[[]]],[11,"into_ref","","",16,[[]]],[11,"from_mut","","",16,[[]]],[11,"into_mut","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"to_subset","","",16,[[],["option",4]]],[11,"is_in_subset","","",16,[[]]],[11,"to_subset_unchecked","","",16,[[]]],[11,"from_subset","","",16,[[]]],[11,"from","node_bench::trie","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"unchecked_into","","",17,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[]]],[11,"unique_saturated_into","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"__clone_box","","",17,[[["private",3]]]],[11,"from_ref","","",17,[[]]],[11,"into_ref","","",17,[[]]],[11,"from_mut","","",17,[[]]],[11,"into_mut","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"to_subset","","",17,[[],["option",4]]],[11,"is_in_subset","","",17,[[]]],[11,"to_subset_unchecked","","",17,[[]]],[11,"from_subset","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"unchecked_into","","",18,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[]]],[11,"unique_saturated_into","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from_ref","","",18,[[]]],[11,"into_ref","","",18,[[]]],[11,"from_mut","","",18,[[]]],[11,"into_mut","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"to_subset","","",18,[[],["option",4]]],[11,"is_in_subset","","",18,[[]]],[11,"to_subset_unchecked","","",18,[[]]],[11,"from_subset","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"unchecked_into","","",19,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[]]],[11,"unique_saturated_into","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from_ref","","",19,[[]]],[11,"into_ref","","",19,[[]]],[11,"from_mut","","",19,[[]]],[11,"into_mut","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"to_subset","","",19,[[],["option",4]]],[11,"is_in_subset","","",19,[[]]],[11,"to_subset_unchecked","","",19,[[]]],[11,"from_subset","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"unchecked_into","","",20,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[]]],[11,"unique_saturated_into","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from_ref","","",20,[[]]],[11,"into_ref","","",20,[[]]],[11,"from_mut","","",20,[[]]],[11,"into_mut","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"to_subset","","",20,[[],["option",4]]],[11,"is_in_subset","","",20,[[]]],[11,"to_subset_unchecked","","",20,[[]]],[11,"from_subset","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"unchecked_into","","",21,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[]]],[11,"unique_saturated_into","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from_ref","","",21,[[]]],[11,"into_ref","","",21,[[]]],[11,"from_mut","","",21,[[]]],[11,"into_mut","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"to_subset","","",21,[[],["option",4]]],[11,"is_in_subset","","",21,[[]]],[11,"to_subset_unchecked","","",21,[[]]],[11,"from_subset","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"unchecked_into","","",22,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[]]],[11,"unique_saturated_into","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from_ref","","",22,[[]]],[11,"into_ref","","",22,[[]]],[11,"from_mut","","",22,[[]]],[11,"into_mut","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"to_subset","","",22,[[],["option",4]]],[11,"is_in_subset","","",22,[[]]],[11,"to_subset_unchecked","","",22,[[]]],[11,"from_subset","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"unchecked_into","","",23,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[]]],[11,"unique_saturated_into","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from_ref","","",23,[[]]],[11,"into_ref","","",23,[[]]],[11,"from_mut","","",23,[[]]],[11,"into_mut","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"to_subset","","",23,[[],["option",4]]],[11,"is_in_subset","","",23,[[]]],[11,"to_subset_unchecked","","",23,[[]]],[11,"from_subset","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"unchecked_into","","",24,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[]]],[11,"unique_saturated_into","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from_ref","","",24,[[]]],[11,"into_ref","","",24,[[]]],[11,"from_mut","","",24,[[]]],[11,"into_mut","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"to_subset","","",24,[[],["option",4]]],[11,"is_in_subset","","",24,[[]]],[11,"to_subset_unchecked","","",24,[[]]],[11,"from_subset","","",24,[[]]],[11,"from","node_bench::txpool","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"unchecked_into","","",25,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",25,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",25,[[]]],[11,"unique_saturated_into","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from_ref","","",25,[[]]],[11,"into_ref","","",25,[[]]],[11,"from_mut","","",25,[[]]],[11,"into_mut","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"to_subset","","",25,[[],["option",4]]],[11,"is_in_subset","","",25,[[]]],[11,"to_subset_unchecked","","",25,[[]]],[11,"from_subset","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"unchecked_into","","",26,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",26,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",26,[[]]],[11,"unique_saturated_into","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from_ref","","",26,[[]]],[11,"into_ref","","",26,[[]]],[11,"from_mut","","",26,[[]]],[11,"into_mut","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"to_subset","","",26,[[],["option",4]]],[11,"is_in_subset","","",26,[[]]],[11,"to_subset_unchecked","","",26,[[]]],[11,"from_subset","","",26,[[]]],[11,"from","node_bench","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"unchecked_into","","",27,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",27,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",27,[[]]],[11,"unique_saturated_into","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from_ref","","",27,[[]]],[11,"into_ref","","",27,[[]]],[11,"from_mut","","",27,[[]]],[11,"into_mut","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"to_subset","","",27,[[],["option",4]]],[11,"is_in_subset","","",27,[[]]],[11,"to_subset_unchecked","","",27,[[]]],[11,"from_subset","","",27,[[]]],[11,"path","node_bench::construct","",1,[[],["path",3]]],[11,"setup","","",1,[[["box",3]],[["box",3],["benchmark",8]]]],[11,"name","","",1,[[],["cow",4]]],[11,"path","node_bench::import","",11,[[],["path",3]]],[11,"setup","","",11,[[["box",3]],[["box",3],["benchmark",8]]]],[11,"name","","",11,[[],["cow",4]]],[11,"path","node_bench::trie","",19,[[],["path",3]]],[11,"setup","","",19,[[["box",3]],[["box",3],["benchmark",8]]]],[11,"name","","",19,[[],["cow",4]]],[11,"path","","",22,[[],["path",3]]],[11,"setup","","",22,[[["box",3]],[["box",3],["benchmark",8]]]],[11,"name","","",22,[[],["cow",4]]],[11,"path","node_bench::txpool","",25,[[],["path",3]]],[11,"setup","","",25,[[["box",3]],[["box",3],["benchmark",8]]]],[11,"name","","",25,[[],["cow",4]]],[11,"run","node_bench::construct","",2,[[["mode",4]],["duration",3]]],[11,"run","node_bench::import","",12,[[["mode",4]],["duration",3]]],[11,"run","node_bench::trie","",20,[[["mode",4]],["duration",3]]],[11,"run","","",23,[[["mode",4]],["duration",3]]],[11,"run","node_bench::txpool","",26,[[["mode",4]],["duration",3]]],[11,"from","node_bench::construct","",3,[[["opaqueextrinsic",3]]]],[11,"clone","node_bench::common","",0,[[],["sizetype",4]]],[11,"clone","node_bench::construct","",3,[[],["pooltransaction",3]]],[11,"clone","","",4,[[],["transactions",3]]],[11,"clone","node_bench::core","",8,[[],["benchmarkoutput",3]]],[11,"clone","","",10,[[],["mode",4]]],[11,"clone","node_bench::tempdb","",14,[[],["databasetype",4]]],[11,"clone","","",15,[[]]],[11,"clone","node_bench::trie","",17,[[],["databasesize",4]]],[11,"eq","node_bench::core","",10,[[["mode",4]]]],[11,"deref","node_bench::trie","",18,[[],["sizepool",3]]],[11,"fmt","node_bench::common","",0,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::construct","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::core","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::tempdb","",14,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::trie","",17,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench","",27,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::common","",0,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::core","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::tempdb","",14,[[["formatter",3]],["result",6]]],[11,"fmt","node_bench::trie","",17,[[["formatter",3]],["result",6]]],[11,"from_str","node_bench::core","",10,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"initialize","node_bench::trie","",18,[[]]],[11,"get","node_bench::simple_trie","",13,[[["prefix",6],["hash",6]],[["option",4],["dbvalue",6]]]],[11,"contains","","",13,[[["prefix",6],["hash",6]]]],[11,"insert","","",13,[[["prefix",6]],["hash",6]]],[11,"emplace","","",13,[[["prefix",6],["hash",6],["dbvalue",6]]]],[11,"remove","","",13,[[["prefix",6],["hash",6]]]],[11,"as_hash_db","","",13,[[],["hashdb",8]]],[11,"as_hash_db_mut","","",13,[[],["hashdb",8]]],[11,"size_of","node_bench::tempdb","",16,[[["mallocsizeofops",3]]]],[11,"constant_size","","",16,[[],["option",4]]],[11,"get","node_bench::trie","",21,[[["prefix",6],["hash",6]],[["result",4],["string",3],["option",4]]]],[11,"get","node_bench::tempdb","Get a value by key.",16,[[],[["result",6],["option",4]]]],[11,"get_by_prefix","","Get a value by partial key. Only works for flushed data.",16,[[],[["option",4],["box",3]]]],[11,"write","","Write a transaction of changes to the buffer.",16,[[["dbtransaction",3]],["result",6]]],[11,"iter","","Iterate over flushed data for a given column.",16,[[],[["iterator",8],["box",3]]]],[11,"iter_with_prefix","","Iterate over flushed data for a given column, starting …",16,[[],[["iterator",8],["box",3]]]],[11,"restore","","Attempt to replace this database with a new one located …",16,[[],["result",6]]],[11,"data","node_bench::construct","",3,[[]]],[11,"hash","","",3,[[]]],[11,"priority","","",3,[[]]],[11,"longevity","","",3,[[]]],[11,"requires","","",3,[[]]],[11,"provides","","",3,[[]]],[11,"is_propagable","","",3,[[]]],[11,"submit_at","","Returns a future that imports a bunch of unverified …",4,[[["transactionfor",6],["blockid",4],["transactionsource",4],["vec",3]],[["poolfuture",6],["vec",3]]]],[11,"submit_one","","Returns a future that imports one unverified transaction …",4,[[["transactionsource",4],["transactionfor",6],["blockid",4]],[["txhash",6],["poolfuture",6]]]],[11,"submit_and_watch","","",4,[[["transactionsource",4],["transactionfor",6],["blockid",4]],[["box",3],["poolfuture",6]]]],[11,"ready_at","","",4,[[["numberfor",6]],[["pin",3],["box",3]]]],[11,"ready","","",4,[[],[["box",3],["iterator",8]]]],[11,"remove_invalid","","",4,[[],[["arc",3],["vec",3]]]],[11,"status","","",4,[[],["poolstatus",3]]],[11,"import_notification_stream","","",4,[[],[["txhash",6],["importnotificationstream",6]]]],[11,"on_broadcasted","","",4,[[["hashmap",3],["txhash",6],["vec",3]]]],[11,"hash_of","","",4,[[["transactionfor",6]],["txhash",6]]],[11,"ready_transaction","","",4,[[["txhash",6]],[["option",4],["arc",3]]]],[11,"clap","node_bench","",27,[[],["app",3]]],[11,"from_clap","","",27,[[["argmatches",3]]]],[11,"augment_clap","","",27,[[["app",3]],["app",3]]],[11,"is_subcommand","","",27,[[]]]],"p":[[4,"SizeType"],[3,"ConstructionBenchmarkDescription"],[3,"ConstructionBenchmark"],[3,"PoolTransaction"],[3,"Transactions"],[3,"Path"],[8,"BenchmarkDescription"],[8,"Benchmark"],[3,"BenchmarkOutput"],[3,"NsFormatter"],[4,"Mode"],[3,"ImportBenchmarkDescription"],[3,"ImportBenchmark"],[3,"SimpleTrie"],[4,"DatabaseType"],[3,"TempDatabase"],[3,"ParityDbWrapper"],[4,"DatabaseSize"],[3,"KUSAMA_STATE_DISTRIBUTION"],[3,"TrieReadBenchmarkDescription"],[3,"TrieReadBenchmark"],[3,"Storage"],[3,"TrieWriteBenchmarkDescription"],[3,"TrieWriteBenchmark"],[3,"SizePool"],[3,"PoolBenchmarkDescription"],[3,"PoolBenchmark"],[3,"Opt"]]},\
"node_cli":{"doc":"Console line interface.","i":[[4,"Error","node_cli","Error type for the CLI.",null,null],[13,"Io","","",0,null],[13,"Cli","","",0,null],[13,"Service","","",0,null],[13,"Client","","",0,null],[13,"Codec","","",0,null],[13,"Input","","",0,null],[13,"InvalidListenMultiaddress","","",0,null],[13,"InvalidUri","","",0,null],[13,"SignatureInvalidLength","","",0,null],[12,"read","node_cli::Error","Amount of signature bytes read.",1,null],[12,"expected","","Expected number of signature bytes.",1,null],[13,"KeyTypeInvalid","node_cli","",0,null],[13,"SignatureInvalid","","",0,null],[13,"KeyStoreOperation","","",0,null],[13,"KeyStorage","","",0,null],[13,"HexDataConversion","","",0,null],[13,"Application","","Application specific error chain sequence forwarder.",0,null],[13,"GlobalLoggerError","","",0,null],[6,"Result","","Result type alias for the CLI.",null,null],[0,"chain_spec","","Chain specification and utils.",null,null],[4,"RobonomicsFamily","node_cli::chain_spec","Robonomics runtime family chains.",null,null],[13,"Development","","Development chain (used for local tests only).",2,null],[13,"Parachain","","Robonomics Network parachain …",2,null],[8,"RobonomicsChain","","Robonomics family chains idetify.",null,null],[10,"family","","",3,[[],["robonomicsfamily",4]]],[3,"Extensions","","Node <code>ChainSpec</code> extensions.",null,null],[12,"fork_blocks","","Block numbers with known hashes.",4,null],[12,"bad_blocks","","Known bad block hashes.",4,null],[6,"ChainSpec","","Specialized <code>ChainSpec</code>.",null,null],[5,"get_account_id_from_seed","","Helper function to generate an account ID from seed",null,[[],["accountid",6]]],[5,"development_config","","Development config (single validator Alice)",null,[[],["chainspec",6]]],[0,"service","node_cli","Service and ServiceFactory implementation. Specialized …",null,null],[0,"robonomics","node_cli::service","Robonomics chain services.",null,null],[3,"Executor","node_cli::service::robonomics","A unit struct which implements <code>NativeExecutionDispatch</code> …",null,null],[5,"new_full","","Create a new Robonomics service for a full node.",null,[[["configuration",3]],[["result",6],["taskmanager",3]]]],[5,"new_light","","",null,[[["configuration",3]],["result",6]]],[8,"RuntimeApiCollection","node_cli::service","A set of APIs that robonomics-like runtimes must …",null,null],[5,"new_partial","","",null,[[["configuration",3]],[["partialcomponents",3],["result",4],["serviceerror",4]]]],[5,"new_full_base","","Creates a full service from the configuration.",null,[[["configuration",3]],[["result",4],["serviceerror",4]]]],[5,"new_light_base","","",null,[[["configuration",3]],[["result",4],["serviceerror",4]]]],[0,"parachain","node_cli","Robonomics Node as a parachain collator.",null,null],[5,"generate_genesis_block","node_cli::parachain","Generate the genesis block from a given ChainSpec.",null,[[["box",3]],[["string",3],["result",4]]]],[3,"RuntimeApi","","",null,null],[0,"chain_spec","","Chain specification and utils.",null,null],[3,"Extensions","node_cli::parachain::chain_spec","Node <code>ChainSpec</code> extensions.",null,null],[12,"relay_chain","","The relay chain of the Parachain.",5,null],[12,"para_id","","The id of the Parachain.",5,null],[11,"try_get","","Try to get the extension from the given <code>ChainSpec</code>.",5,[[["box",3]],["option",4]]],[6,"ChainSpec","","Specialized <code>ChainSpec</code>.",null,null],[5,"get_chain_spec","","",null,[[["paraid",3]],["chainspec",6]]],[5,"earth_parachain_config","","Earth parachain confing.",null,[[],["chainspec",6]]],[5,"mars_parachain_config","","Mars parachain confing.",null,[[],["chainspec",6]]],[5,"rococo_parachain_config","","Rococo parachain confing.",null,[[],["chainspec",6]]],[0,"cli","node_cli::parachain","",null,null],[3,"ExportGenesisStateCommand","node_cli::parachain::cli","Command for exporting the genesis state of the parachain",null,null],[12,"output","","Output file name or stdout if unspecified.",6,null],[12,"raw","","Write output in binary. Default is to write in hex.",6,null],[12,"parachain_id","","Id of the parachain this state is for.",6,null],[12,"chain","","The name of the chain for that the genesis state should …",6,null],[3,"ExportGenesisWasmCommand","","Command for exporting the genesis wasm file.",null,null],[12,"output","","Output file name or stdout if unspecified.",7,null],[12,"raw","","Write output in binary. Default is to write in hex.",7,null],[12,"chain","","The name of the chain for that the genesis wasm file …",7,null],[0,"collator","node_cli::parachain","Polkadot collator service implementation.",null,null],[5,"start_node","node_cli::parachain::collator","Start a normal parachain node.",null,[[["collatorpair",6],["configuration",3],["id",3]]]],[0,"command","node_cli::parachain","",null,null],[5,"run","node_cli::parachain::command","Run a collator node with the given parachain <code>Configuration</code>",null,[[["vec",3],["configuration",3],["option",4]]]],[3,"RelayChainCli","","",null,null],[12,"base","","The actual relay chain cli object.",8,null],[12,"chain_id","","Optional chain id that should be passed to the relay …",8,null],[12,"base_path","","The base path that should be used by the relay chain.",8,null],[11,"new","","Create a new instance of <code>Self</code>.",8,[[["option",4],["pathbuf",3],["string",3],["option",4]]]],[3,"Executor","node_cli::parachain","A unit struct which implements <code>NativeExecutionDispatch</code> …",null,null],[5,"new_partial","","",null,[[["configuration",3]],[["result",4],["error",4],["partialcomponents",3]]]],[5,"load_spec","","",null,[[["paraid",3]],[["box",3],["string",3],["result",4]]]],[5,"extract_genesis_wasm","","",null,[[["box",3]],[["vec",3],["result",6]]]],[0,"cli","node_cli","",null,null],[3,"Cli","node_cli::cli","An overarching CLI command definition.",null,null],[12,"subcommand","","Possible subcommand with parameters.",9,null],[12,"run","","",9,null],[12,"relaychain_args","","Polkadot relaychain arguments.",9,null],[3,"RunCmd","","",null,null],[12,"base","","",10,null],[12,"parachain_id","","Id of the parachain this collator collates for.",10,null],[4,"Subcommand","","Possible subcommands of the main binary.",null,null],[13,"Key","","Key management cli utilities",11,null],[13,"Verify","","Verify a signature for a message, provided on STDIN, with …",11,null],[13,"Vanity","","Generate a seed that provides a vanity address.",11,null],[13,"Sign","","Sign a message, with a given (secret) key.",11,null],[13,"BuildSpec","","Build a chain specification.",11,null],[13,"PurgeChain","","Remove the whole chain.",11,null],[13,"Io","","Robonomics Framework I/O operations.",11,null],[13,"ExportGenesisState","","Export the genesis state of the parachain.",11,null],[13,"ExportGenesisWasm","","Export the genesis wasm of the parachain.",11,null],[0,"command","node_cli","",null,null],[5,"run","node_cli::command","Parse command line arguments into service configuration.",null,[[],["result",6]]],[11,"from","node_cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"to_subset","","",0,[[],["option",4]]],[11,"is_in_subset","","",0,[[]]],[11,"to_subset_unchecked","","",0,[[]]],[11,"from_subset","","",0,[[]]],[11,"from","node_cli::chain_spec","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"unique_saturated_into","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"to_subset","","",2,[[],["option",4]]],[11,"is_in_subset","","",2,[[]]],[11,"to_subset_unchecked","","",2,[[]]],[11,"from_subset","","",2,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"unique_saturated_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"__clone_box","","",4,[[["private",3]]]],[11,"from_ref","","",4,[[]]],[11,"into_ref","","",4,[[]]],[11,"from_mut","","",4,[[]]],[11,"into_mut","","",4,[[]]],[11,"get_any","","",4,[[["typeid",3]],["any",8]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"to_subset","","",4,[[],["option",4]]],[11,"is_in_subset","","",4,[[]]],[11,"to_subset_unchecked","","",4,[[]]],[11,"from_subset","","",4,[[]]],[11,"from","node_cli::service::robonomics","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"unchecked_into","","",12,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[]]],[11,"unique_saturated_into","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from_ref","","",12,[[]]],[11,"into_ref","","",12,[[]]],[11,"from_mut","","",12,[[]]],[11,"into_mut","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"to_subset","","",12,[[],["option",4]]],[11,"is_in_subset","","",12,[[]]],[11,"to_subset_unchecked","","",12,[[]]],[11,"from_subset","","",12,[[]]],[11,"from","node_cli::parachain","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"unchecked_into","","",13,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[]]],[11,"unique_saturated_into","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from_ref","","",13,[[]]],[11,"into_ref","","",13,[[]]],[11,"from_mut","","",13,[[]]],[11,"into_mut","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"to_subset","","",13,[[],["option",4]]],[11,"is_in_subset","","",13,[[]]],[11,"to_subset_unchecked","","",13,[[]]],[11,"from_subset","","",13,[[]]],[11,"from","node_cli::parachain::chain_spec","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"unchecked_into","","",5,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[]]],[11,"unique_saturated_into","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"__clone_box","","",5,[[["private",3]]]],[11,"from_ref","","",5,[[]]],[11,"into_ref","","",5,[[]]],[11,"from_mut","","",5,[[]]],[11,"into_mut","","",5,[[]]],[11,"get_any","","",5,[[["typeid",3]],["any",8]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"to_subset","","",5,[[],["option",4]]],[11,"is_in_subset","","",5,[[]]],[11,"to_subset_unchecked","","",5,[[]]],[11,"from_subset","","",5,[[]]],[11,"from","node_cli::parachain::cli","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"unchecked_into","","",6,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[]]],[11,"unique_saturated_into","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from_ref","","",6,[[]]],[11,"into_ref","","",6,[[]]],[11,"from_mut","","",6,[[]]],[11,"into_mut","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"to_subset","","",6,[[],["option",4]]],[11,"is_in_subset","","",6,[[]]],[11,"to_subset_unchecked","","",6,[[]]],[11,"from_subset","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"unchecked_into","","",7,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[]]],[11,"unique_saturated_into","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from_ref","","",7,[[]]],[11,"into_ref","","",7,[[]]],[11,"from_mut","","",7,[[]]],[11,"into_mut","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"to_subset","","",7,[[],["option",4]]],[11,"is_in_subset","","",7,[[]]],[11,"to_subset_unchecked","","",7,[[]]],[11,"from_subset","","",7,[[]]],[11,"from","node_cli::parachain::command","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"unchecked_into","","",8,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[]]],[11,"unique_saturated_into","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from_ref","","",8,[[]]],[11,"into_ref","","",8,[[]]],[11,"from_mut","","",8,[[]]],[11,"into_mut","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"to_subset","","",8,[[],["option",4]]],[11,"is_in_subset","","",8,[[]]],[11,"to_subset_unchecked","","",8,[[]]],[11,"from_subset","","",8,[[]]],[11,"from","node_cli::parachain","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"unchecked_into","","",14,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[]]],[11,"unique_saturated_into","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from_ref","","",14,[[]]],[11,"into_ref","","",14,[[]]],[11,"from_mut","","",14,[[]]],[11,"into_mut","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"to_subset","","",14,[[],["option",4]]],[11,"is_in_subset","","",14,[[]]],[11,"to_subset_unchecked","","",14,[[]]],[11,"from_subset","","",14,[[]]],[11,"from","node_cli::cli","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"unchecked_into","","",9,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[]]],[11,"unique_saturated_into","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from_ref","","",9,[[]]],[11,"into_ref","","",9,[[]]],[11,"from_mut","","",9,[[]]],[11,"into_mut","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"to_subset","","",9,[[],["option",4]]],[11,"is_in_subset","","",9,[[]]],[11,"to_subset_unchecked","","",9,[[]]],[11,"from_subset","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"unchecked_into","","",10,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[]]],[11,"unique_saturated_into","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from_ref","","",10,[[]]],[11,"into_ref","","",10,[[]]],[11,"from_mut","","",10,[[]]],[11,"into_mut","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"to_subset","","",10,[[],["option",4]]],[11,"is_in_subset","","",10,[[]]],[11,"to_subset_unchecked","","",10,[[]]],[11,"from_subset","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"unchecked_into","","",11,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[]]],[11,"unique_saturated_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from_ref","","",11,[[]]],[11,"into_ref","","",11,[[]]],[11,"from_mut","","",11,[[]]],[11,"into_mut","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"to_subset","","",11,[[],["option",4]]],[11,"is_in_subset","","",11,[[]]],[11,"to_subset_unchecked","","",11,[[]]],[11,"from_subset","","",11,[[]]],[11,"construct_runtime_api","node_cli::parachain","",13,[[],["apiref",3]]],[11,"source","node_cli","",0,[[],[["option",4],["error",8]]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["error",8],["box",3],["global",3]],["error",4]]],[11,"from","","",0,[[["fromhexerror",4]],["error",4]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["string",3]],["error",4]]],[11,"from","","",0,[[["publicerror",4]],["error",4]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","node_cli::chain_spec","",4,[[],["extensions",3]]],[11,"clone","node_cli::parachain::chain_spec","",5,[[],["extensions",3]]],[11,"default","node_cli::chain_spec","",4,[[],["extensions",3]]],[11,"default","node_cli::parachain::chain_spec","",5,[[],["extensions",3]]],[11,"deref","node_cli::cli","",10,[[]]],[11,"fmt","node_cli::parachain::cli","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","node_cli::parachain::command","",8,[[["formatter",3]],["result",6]]],[11,"fmt","node_cli::cli","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"serialize","node_cli::chain_spec","",4,[[],["result",4]]],[11,"serialize","node_cli::parachain::chain_spec","",5,[[],["result",4]]],[11,"deserialize","node_cli::chain_spec","",4,[[],["result",4]]],[11,"deserialize","node_cli::parachain::chain_spec","",5,[[],["result",4]]],[11,"get","node_cli::chain_spec","",4,[[],["option",4]]],[11,"get_any","","",4,[[["typeid",3]],["any",8]]],[11,"get","node_cli::parachain::chain_spec","",5,[[],["option",4]]],[11,"get_any","","",5,[[["typeid",3]],["any",8]]],[11,"dispatch","node_cli::service::robonomics","",12,[[["externalities",8]],[["result",6],["vec",3]]]],[11,"native_version","","",12,[[],["nativeversion",3]]],[11,"dispatch","node_cli::parachain","",14,[[["externalities",8]],[["result",6],["vec",3]]]],[11,"native_version","","",14,[[],["nativeversion",3]]],[11,"clap","node_cli::parachain::cli","",6,[[],["app",3]]],[11,"from_clap","","",6,[[["argmatches",3]]]],[11,"clap","","",7,[[],["app",3]]],[11,"from_clap","","",7,[[["argmatches",3]]]],[11,"clap","node_cli::cli","",9,[[],["app",3]]],[11,"from_clap","","",9,[[["argmatches",3]]]],[11,"clap","","",10,[[],["app",3]]],[11,"from_clap","","",10,[[["argmatches",3]]]],[11,"clap","","",11,[[],["app",3]]],[11,"from_clap","","",11,[[["argmatches",3]]]],[11,"augment_clap","node_cli::parachain::cli","",6,[[["app",3]],["app",3]]],[11,"is_subcommand","","",6,[[]]],[11,"augment_clap","","",7,[[["app",3]],["app",3]]],[11,"is_subcommand","","",7,[[]]],[11,"augment_clap","node_cli::cli","",9,[[["app",3]],["app",3]]],[11,"is_subcommand","","",9,[[]]],[11,"augment_clap","","",10,[[["app",3]],["app",3]]],[11,"is_subcommand","","",10,[[]]],[11,"augment_clap","","",11,[[["app",3]],["app",3]]],[11,"from_subcommand","","",11,[[],["option",4]]],[11,"is_subcommand","","",11,[[]]],[11,"shared_params","node_cli::parachain::command","",8,[[],["sharedparams",3]]],[11,"import_params","","",8,[[],[["option",4],["importparams",3]]]],[11,"network_params","","",8,[[],[["networkparams",3],["option",4]]]],[11,"keystore_params","","",8,[[],[["keystoreparams",3],["option",4]]]],[11,"base_path","","",8,[[],[["result",6],["option",4]]]],[11,"rpc_http","","",8,[[],[["result",6],["option",4]]]],[11,"rpc_ipc","","",8,[[],[["result",6],["option",4]]]],[11,"rpc_ws","","",8,[[],[["result",6],["option",4]]]],[11,"prometheus_config","","",8,[[],[["result",6],["option",4]]]],[11,"init","","",8,[[],[["telemetryworker",3],["result",6]]]],[11,"chain_id","","",8,[[],[["result",6],["string",3]]]],[11,"role","","",8,[[],[["result",6],["role",4]]]],[11,"transaction_pool","","",8,[[],[["result",6],["transactionpooloptions",3]]]],[11,"state_cache_child_ratio","","",8,[[],[["result",6],["option",4]]]],[11,"rpc_methods","","",8,[[],[["result",6],["rpcmethods",4]]]],[11,"rpc_ws_max_connections","","",8,[[],[["result",6],["option",4]]]],[11,"rpc_cors","","",8,[[],[["option",4],["result",6]]]],[11,"telemetry_external_transport","","",8,[[],[["result",6],["option",4]]]],[11,"default_heap_pages","","",8,[[],[["result",6],["option",4]]]],[11,"force_authoring","","",8,[[],["result",6]]],[11,"disable_grandpa","","",8,[[],["result",6]]],[11,"max_runtime_instances","","",8,[[],[["result",6],["option",4]]]],[11,"announce_block","","",8,[[],["result",6]]],[11,"impl_name","","",8,[[],["string",3]]],[11,"impl_version","","",8,[[],["string",3]]],[11,"description","","",8,[[],["string",3]]],[11,"author","","",8,[[],["string",3]]],[11,"support_url","","",8,[[],["string",3]]],[11,"copyright_start_year","","",8,[[]]],[11,"load_spec","","",8,[[],[["box",3],["result",4],["string",3]]]],[11,"native_runtime_version","","",8,[[["box",3]],["runtimeversion",3]]],[11,"impl_name","node_cli::cli","",9,[[],["string",3]]],[11,"impl_version","","",9,[[],["string",3]]],[11,"description","","",9,[[],["string",3]]],[11,"author","","",9,[[],["string",3]]],[11,"support_url","","",9,[[],["string",3]]],[11,"copyright_start_year","","",9,[[]]],[11,"executable_name","","",9,[[],["string",3]]],[11,"load_spec","","",9,[[],[["box",3],["result",4],["string",3]]]],[11,"native_runtime_version","","",9,[[["box",3]],["runtimeversion",3]]],[11,"p2p_listen_port","node_cli::parachain::command","",8,[[]]],[11,"rpc_ws_listen_port","","",8,[[]]],[11,"rpc_http_listen_port","","",8,[[]]],[11,"prometheus_listen_port","","",8,[[]]]],"p":[[4,"Error"],[13,"SignatureInvalidLength"],[4,"RobonomicsFamily"],[8,"RobonomicsChain"],[3,"Extensions"],[3,"Extensions"],[3,"ExportGenesisStateCommand"],[3,"ExportGenesisWasmCommand"],[3,"RelayChainCli"],[3,"Cli"],[3,"RunCmd"],[4,"Subcommand"],[3,"Executor"],[3,"RuntimeApi"],[3,"Executor"]]},\
"node_primitives":{"doc":"Low-level types used throughout the Robonomics code.","i":[[6,"BlockNumber","node_primitives","An index to a block.",null,null],[6,"Signature","","Alias to 512-bit hash when used in the context of a …",null,null],[6,"AccountId","","Some way of identifying an account on the chain. We …",null,null],[6,"AccountIndex","","The type for looking up accounts. We don\'t expect more …",null,null],[6,"Balance","","Balance of an account.",null,null],[6,"Amount","","The amount type, should be signed version of balance.",null,null],[6,"Moment","","Type used for expressing timestamp.",null,null],[6,"Index","","Index of a transaction in the chain.",null,null],[6,"Hash","","A hash of some data used by the chain.",null,null],[6,"Timestamp","","A timestamp: milliseconds since the unix epoch. <code>u64</code> is …",null,null],[6,"DigestItem","","Digest item type.",null,null],[6,"Header","","Header type.",null,null],[6,"Block","","Block type.",null,null],[6,"BlockId","","Block ID.",null,null],[4,"TokenSymbol","","Supported tokey symbols.",null,null],[13,"ACA","","Acala native token.",0,null],[13,"AUSD","","Acala stable coin.",0,null],[13,"DOT","","Polkadot native token.",0,null],[13,"XBTC","","Wrapped BTC.",0,null],[13,"LDOT","","Liquid DOT token.",0,null],[13,"RENBTC","","BTC wrapped by RenVM.",0,null],[13,"SDN","","Shiden native token.",0,null],[13,"PLM","","Plasm native token.",0,null],[13,"XRT","","Robonomics native token.",0,null],[4,"CurrencyId","","Currency identifier.",null,null],[13,"Token","","Native token.",1,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_keyed_vec","","",0,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",0,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",0,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",0,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"__clone_box","","",0,[[["private",3]]]],[11,"equivalent","","",0,[[]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"blake2_128","","",0,[[]]],[11,"blake2_256","","",0,[[]]],[11,"blake2_128_concat","","",0,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",0,[[]]],[11,"twox_256","","",0,[[]]],[11,"twox_64_concat","","",0,[[],[["vec",3],["global",3]]]],[11,"identity","","",0,[[],[["vec",3],["global",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_keyed_vec","","",1,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",1,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",1,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",1,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"equivalent","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"blake2_128","","",1,[[]]],[11,"blake2_256","","",1,[[]]],[11,"blake2_128_concat","","",1,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",1,[[]]],[11,"twox_256","","",1,[[]]],[11,"twox_64_concat","","",1,[[],[["vec",3],["global",3]]]],[11,"identity","","",1,[[],[["vec",3],["global",3]]]],[11,"clone","","",0,[[],["tokensymbol",4]]],[11,"clone","","",1,[[],["currencyid",4]]],[11,"cmp","","",0,[[["tokensymbol",4]],["ordering",4]]],[11,"cmp","","",1,[[["currencyid",4]],["ordering",4]]],[11,"eq","","",0,[[["tokensymbol",4]]]],[11,"eq","","",1,[[["currencyid",4]]]],[11,"ne","","",1,[[["currencyid",4]]]],[11,"partial_cmp","","",0,[[["tokensymbol",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["currencyid",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["currencyid",4]]]],[11,"le","","",1,[[["currencyid",4]]]],[11,"gt","","",1,[[["currencyid",4]]]],[11,"ge","","",1,[[["currencyid",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_from","","",1,[[["vec",3]],[["currencyid",4],["result",4]]]],[11,"encode_to","","",0,[[]]],[11,"encode_to","","",1,[[]]],[11,"decode","","",0,[[],[["result",4],["error",3]]]],[11,"decode","","",1,[[],[["result",4],["error",3]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]]],"p":[[4,"TokenSymbol"],[4,"CurrencyId"]]},\
"node_rpc":{"doc":"A collection of node-specific RPC methods.","i":[[4,"DenyUnsafe","node_rpc","Signifies whether a potentially unsafe RPC should be …",null,null],[13,"Yes","","Denies only potentially unsafe RPCs.",0,null],[13,"No","","Allows calling every RPCs.",0,null],[3,"LightDeps","","Light client extra dependencies.",null,null],[12,"client","","The client instance to use.",1,null],[12,"pool","","Transaction pool instance.",1,null],[12,"remote_blockchain","","Remote access to the blockchain (async).",1,null],[12,"fetcher","","Fetcher instance.",1,null],[3,"BabeDeps","","Extra dependencies for BABE.",null,null],[12,"babe_config","","BABE protocol config.",2,null],[12,"shared_epoch_changes","","BABE pending epoch changes.",2,null],[12,"keystore","","The keystore that manages the keys of the node.",2,null],[3,"GrandpaDeps","","Extra dependencies for GRANDPA",null,null],[12,"shared_voter_state","","Voting round info.",3,null],[12,"shared_authority_set","","Authority set info.",3,null],[12,"justification_stream","","Receives notifications about justification events from …",3,null],[12,"subscription_executor","","Executor to drive the subscription manager in the Grandpa …",3,null],[12,"finality_provider","","Finality proof provider.",3,null],[3,"FullDeps","","Full client dependencies.",null,null],[12,"client","","The client instance to use.",4,null],[12,"pool","","Transaction pool instance.",4,null],[12,"select_chain","","The SelectChain Strategy",4,null],[12,"chain_spec","","A copy of the chain spec.",4,null],[12,"deny_unsafe","","Whether to deny unsafe calls",4,null],[12,"babe","","BABE specific dependencies.",4,null],[12,"grandpa","","GRANDPA specific dependencies.",4,null],[6,"IoHandler","","A IO handler that uses all Full RPC extensions.",null,null],[5,"create_full","","Instantiate all Full RPC extensions.",null,[[["fulldeps",3]],[["iohandler",3],["metadata",3]]]],[5,"create_light","","Instantiate all Light RPC extensions.",null,[[["lightdeps",3]],["iohandler",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"__clone_box","","",0,[[["private",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"unique_saturated_into","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"unique_saturated_into","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"unique_saturated_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from_ref","","",4,[[]]],[11,"into_ref","","",4,[[]]],[11,"from_mut","","",4,[[]]],[11,"into_mut","","",4,[[]]],[11,"clone","","",0,[[],["denyunsafe",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"check_if_safe","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …",0,[[],[["unsaferpcerror",3],["result",4]]]]],"p":[[4,"DenyUnsafe"],[3,"LightDeps"],[3,"BabeDeps"],[3,"GrandpaDeps"],[3,"FullDeps"]]},\
"node_runtime":{"doc":"The Robonomics runtime. This can be compiled with …","i":[[0,"constants","node_runtime","A set of constant values used in substrate runtime.",null,null],[0,"currency","node_runtime::constants","Money matters.",null,null],[17,"COASE","node_runtime::constants::currency","",null,null],[17,"GLUSHKOV","","",null,null],[17,"XRT","","",null,null],[5,"deposit","","",null,[[],["balance",6]]],[0,"time","node_runtime::constants","Time.",null,null],[17,"MILLISECS_PER_BLOCK","node_runtime::constants::time","Since BABE is probabilistic this is the average expected …",null,null],[17,"SECS_PER_BLOCK","","",null,null],[17,"SLOT_DURATION","","",null,null],[17,"PRIMARY_PROBABILITY","","",null,null],[17,"EPOCH_DURATION_IN_BLOCKS","","",null,null],[17,"EPOCH_DURATION_IN_SLOTS","","",null,null],[17,"MINUTES","","",null,null],[17,"HOURS","","",null,null],[17,"DAYS","","",null,null],[0,"fee","node_runtime::constants","Fee-related.",null,null],[3,"Perbill","node_runtime::constants::fee","A fixed point representation of a number in the range [0, …",null,null],[17,"TARGET_BLOCK_FULLNESS","","The block saturation level. Fees will be updates based on …",null,null],[0,"api","node_runtime","",null,null],[5,"dispatch","node_runtime::api","",null,[[],[["option",4],["vec",3]]]],[17,"WASM_BINARY","node_runtime","",null,null],[17,"WASM_BINARY_BLOATY","","",null,null],[5,"wasm_binary_unwrap","","Wasm binary unwrapped. If built with …",null,[[]]],[17,"VERSION","","This runtime version.",null,null],[5,"native_version","","The version infromation used to identify this runtime …",null,[[],["nativeversion",3]]],[3,"BlockHashCount","","",null,null],[11,"get","","Returns the value of this parameter type.",0,[[],["blocknumber",6]]],[3,"Version","","",null,null],[11,"get","","Returns the value of this parameter type.",1,[[],["runtimeversion",3]]],[3,"RuntimeBlockLength","","",null,null],[11,"get","","Returns the value of this parameter type.",2,[[],["blocklength",3]]],[3,"RuntimeBlockWeights","","",null,null],[11,"get","","Returns the value of this parameter type.",3,[[],["blockweights",3]]],[3,"SS58Prefix","","",null,null],[11,"get","","Returns the value of this parameter type.",4,[[]]],[3,"MinimumPeriod","","",null,null],[11,"get","","Returns the value of this parameter type.",5,[[],["moment",6]]],[3,"ExistentialDeposit","","",null,null],[11,"get","","Returns the value of this parameter type.",6,[[],["balance",6]]],[3,"MaxLocks","","",null,null],[11,"get","","Returns the value of this parameter type.",7,[[]]],[3,"TransactionByteFee","","",null,null],[11,"get","","Returns the value of this parameter type.",8,[[],["balance",6]]],[3,"TargetBlockFullness","","",null,null],[11,"get","","Returns the value of this parameter type.",9,[[],["perquintill",3]]],[3,"AdjustmentVariable","","",null,null],[11,"get","","Returns the value of this parameter type.",10,[[],["multiplier",6]]],[3,"MinimumMultiplier","","",null,null],[11,"get","","Returns the value of this parameter type.",11,[[],["multiplier",6]]],[3,"SessionKeys","","",null,null],[12,"babe","","",12,null],[12,"grandpa","","",12,null],[11,"generate","","Generate a set of keys with optionally using the given …",12,[[["option",4],["vec",3]],["vec",3]]],[11,"into_raw_public_keys","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.",12,[[],["vec",3]]],[11,"decode_into_raw_public_keys","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …",12,[[],[["option",4],["vec",3]]]],[3,"EpochDuration","","",null,null],[11,"get","","Returns the value of this parameter type.",13,[[]]],[3,"ExpectedBlockTime","","",null,null],[11,"get","","Returns the value of this parameter type.",14,[[],["moment",6]]],[3,"TotalBandwidth","","",null,null],[11,"get","","Returns the value of this parameter type.",15,[[]]],[3,"WeightLimit","","",null,null],[11,"get","","Returns the value of this parameter type.",16,[[],["weight",6]]],[3,"PointsLimit","","",null,null],[11,"get","","Returns the value of this parameter type.",17,[[]]],[3,"Runtime","","",null,null],[4,"Event","","",null,null],[13,"frame_system","","",18,null],[13,"pallet_balances","","",18,null],[13,"pallet_grandpa","","",18,null],[13,"pallet_robonomics_datalog","","",18,null],[13,"pallet_robonomics_launch","","",18,null],[13,"pallet_robonomics_rws","","",18,null],[13,"pallet_robonomics_digital_twin","","",18,null],[13,"pallet_sudo","","",18,null],[11,"outer_event_metadata","","",19,[[],["outereventmetadata",3]]],[11,"__module_events_frame_system","","",19,[[]]],[11,"__module_events_pallet_balances","","",19,[[]]],[11,"__module_events_pallet_grandpa","","",19,[[]]],[11,"__module_events_pallet_robonomics_datalog","","",19,[[]]],[11,"__module_events_pallet_robonomics_launch","","",19,[[]]],[11,"__module_events_pallet_robonomics_rws","","",19,[[]]],[11,"__module_events_pallet_robonomics_digital_twin","","",19,[[]]],[11,"__module_events_pallet_sudo","","",19,[[]]],[3,"Origin","","",null,null],[4,"OriginCaller","","",null,null],[13,"system","","",20,null],[13,"Void","","",20,null],[11,"none","","Create with system none origin and …",21,[[]]],[11,"root","","Create with system root origin and no filter.",21,[[]]],[11,"signed","","Create with system signed origin and …",21,[[]]],[6,"System","","",null,null],[6,"Timestamp","","",null,null],[6,"Balances","","",null,null],[6,"TransactionPayment","","",null,null],[6,"RandomnessCollectiveFlip","","",null,null],[6,"Babe","","",null,null],[6,"Grandpa","","",null,null],[6,"Datalog","","",null,null],[6,"Launch","","",null,null],[6,"RWS","","",null,null],[6,"DigitalTwin","","",null,null],[6,"Sudo","","",null,null],[6,"AllModules","","All pallets included in the runtime as a nested tuple of …",null,null],[6,"AllModulesWithSystem","","All pallets included in the runtime as a nested tuple of …",null,null],[3,"PalletInfo","","Provides an implementation of <code>PalletInfo</code> to provide …",null,null],[4,"Call","","",null,null],[13,"System","","",22,null],[13,"Timestamp","","",22,null],[13,"Balances","","",22,null],[13,"RandomnessCollectiveFlip","","",22,null],[13,"Babe","","",22,null],[13,"Grandpa","","",22,null],[13,"Datalog","","",22,null],[13,"Launch","","",22,null],[13,"RWS","","",22,null],[13,"DigitalTwin","","",22,null],[13,"Sudo","","",22,null],[11,"metadata","","",19,[[],["runtimemetadataprefixed",3]]],[6,"SystemConfig","","",null,null],[6,"BalancesConfig","","",null,null],[6,"BabeConfig","","",null,null],[6,"GrandpaConfig","","",null,null],[6,"SudoConfig","","",null,null],[3,"GenesisConfig","","",null,null],[12,"frame_system","","",23,null],[12,"pallet_balances","","",23,null],[12,"pallet_babe","","",23,null],[12,"pallet_grandpa","","",23,null],[12,"pallet_sudo","","",23,null],[6,"Context","","The type used as a helper for interpreting the sender of …",null,null],[6,"Address","","The address format for describing accounts.",null,null],[6,"Header","","Block header type as expected by this runtime.",null,null],[6,"Block","","Block type as expected by this runtime.",null,null],[6,"BlockId","","BlockId type as expected by this runtime.",null,null],[6,"SignedExtra","","The SignedExtension to the basic transaction logic.",null,null],[6,"UncheckedExtrinsic","","Unchecked extrinsic type as expected by this runtime.",null,null],[6,"SignedPayload","","The payload being signed in transactions.",null,null],[6,"CheckedExtrinsic","","Extrinsic type that has already been checked.",null,null],[6,"Executive","","Executive: handles dispatch to the various modules.",null,null],[3,"RuntimeApi","","",null,null],[3,"RuntimeApiImpl","","Implements all runtime apis for the client side.",null,null],[11,"from","node_runtime::constants::fee","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"is_clear","","",24,[[]]],[11,"clear","","",24,[[]]],[11,"to_keyed_vec","","",24,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",24,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",24,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",24,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",24,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[]]],[11,"unique_saturated_into","","",24,[[]]],[11,"unique_saturated_from","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"__clone_box","","",24,[[["private",3]]]],[11,"equivalent","","",24,[[]]],[11,"blake2_128","","",24,[[]]],[11,"blake2_256","","",24,[[]]],[11,"blake2_128_concat","","",24,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",24,[[]]],[11,"twox_256","","",24,[[]]],[11,"twox_64_concat","","",24,[[],[["global",3],["vec",3]]]],[11,"identity","","",24,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",24,[[]]],[11,"into_ref","","",24,[[]]],[11,"from_mut","","",24,[[]]],[11,"into_mut","","",24,[[]]],[11,"inlined_clone","","",24,[[]]],[11,"to_subset","","",24,[[],["option",4]]],[11,"is_in_subset","","",24,[[]]],[11,"to_subset_unchecked","","",24,[[]]],[11,"from_subset","","",24,[[]]],[11,"from","node_runtime","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"to_subset","","",0,[[],["option",4]]],[11,"is_in_subset","","",0,[[]]],[11,"to_subset_unchecked","","",0,[[]]],[11,"from_subset","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"to_subset","","",1,[[],["option",4]]],[11,"is_in_subset","","",1,[[]]],[11,"to_subset_unchecked","","",1,[[]]],[11,"from_subset","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"unique_saturated_into","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"to_subset","","",2,[[],["option",4]]],[11,"is_in_subset","","",2,[[]]],[11,"to_subset_unchecked","","",2,[[]]],[11,"from_subset","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"unique_saturated_into","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"to_subset","","",3,[[],["option",4]]],[11,"is_in_subset","","",3,[[]]],[11,"to_subset_unchecked","","",3,[[]]],[11,"from_subset","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"unique_saturated_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from_ref","","",4,[[]]],[11,"into_ref","","",4,[[]]],[11,"from_mut","","",4,[[]]],[11,"into_mut","","",4,[[]]],[11,"to_subset","","",4,[[],["option",4]]],[11,"is_in_subset","","",4,[[]]],[11,"to_subset_unchecked","","",4,[[]]],[11,"from_subset","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"unchecked_into","","",5,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[]]],[11,"unique_saturated_into","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from_ref","","",5,[[]]],[11,"into_ref","","",5,[[]]],[11,"from_mut","","",5,[[]]],[11,"into_mut","","",5,[[]]],[11,"to_subset","","",5,[[],["option",4]]],[11,"is_in_subset","","",5,[[]]],[11,"to_subset_unchecked","","",5,[[]]],[11,"from_subset","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"unchecked_into","","",6,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[]]],[11,"unique_saturated_into","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from_ref","","",6,[[]]],[11,"into_ref","","",6,[[]]],[11,"from_mut","","",6,[[]]],[11,"into_mut","","",6,[[]]],[11,"to_subset","","",6,[[],["option",4]]],[11,"is_in_subset","","",6,[[]]],[11,"to_subset_unchecked","","",6,[[]]],[11,"from_subset","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"unchecked_into","","",7,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[]]],[11,"unique_saturated_into","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from_ref","","",7,[[]]],[11,"into_ref","","",7,[[]]],[11,"from_mut","","",7,[[]]],[11,"into_mut","","",7,[[]]],[11,"to_subset","","",7,[[],["option",4]]],[11,"is_in_subset","","",7,[[]]],[11,"to_subset_unchecked","","",7,[[]]],[11,"from_subset","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"unchecked_into","","",8,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[]]],[11,"unique_saturated_into","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from_ref","","",8,[[]]],[11,"into_ref","","",8,[[]]],[11,"from_mut","","",8,[[]]],[11,"into_mut","","",8,[[]]],[11,"to_subset","","",8,[[],["option",4]]],[11,"is_in_subset","","",8,[[]]],[11,"to_subset_unchecked","","",8,[[]]],[11,"from_subset","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"unchecked_into","","",9,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[]]],[11,"unique_saturated_into","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from_ref","","",9,[[]]],[11,"into_ref","","",9,[[]]],[11,"from_mut","","",9,[[]]],[11,"into_mut","","",9,[[]]],[11,"to_subset","","",9,[[],["option",4]]],[11,"is_in_subset","","",9,[[]]],[11,"to_subset_unchecked","","",9,[[]]],[11,"from_subset","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"unchecked_into","","",10,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[]]],[11,"unique_saturated_into","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from_ref","","",10,[[]]],[11,"into_ref","","",10,[[]]],[11,"from_mut","","",10,[[]]],[11,"into_mut","","",10,[[]]],[11,"to_subset","","",10,[[],["option",4]]],[11,"is_in_subset","","",10,[[]]],[11,"to_subset_unchecked","","",10,[[]]],[11,"from_subset","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"unchecked_into","","",11,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[]]],[11,"unique_saturated_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from_ref","","",11,[[]]],[11,"into_ref","","",11,[[]]],[11,"from_mut","","",11,[[]]],[11,"into_mut","","",11,[[]]],[11,"to_subset","","",11,[[],["option",4]]],[11,"is_in_subset","","",11,[[]]],[11,"to_subset_unchecked","","",11,[[]]],[11,"from_subset","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"is_clear","","",12,[[]]],[11,"clear","","",12,[[]]],[11,"to_keyed_vec","","",12,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",12,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",12,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",12,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",12,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[]]],[11,"unique_saturated_into","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"__clone_box","","",12,[[["private",3]]]],[11,"equivalent","","",12,[[]]],[11,"blake2_128","","",12,[[]]],[11,"blake2_256","","",12,[[]]],[11,"blake2_128_concat","","",12,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",12,[[]]],[11,"twox_256","","",12,[[]]],[11,"twox_64_concat","","",12,[[],[["global",3],["vec",3]]]],[11,"identity","","",12,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",12,[[]]],[11,"into_ref","","",12,[[]]],[11,"from_mut","","",12,[[]]],[11,"into_mut","","",12,[[]]],[11,"to_subset","","",12,[[],["option",4]]],[11,"is_in_subset","","",12,[[]]],[11,"to_subset_unchecked","","",12,[[]]],[11,"from_subset","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"unchecked_into","","",13,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[]]],[11,"unique_saturated_into","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from_ref","","",13,[[]]],[11,"into_ref","","",13,[[]]],[11,"from_mut","","",13,[[]]],[11,"into_mut","","",13,[[]]],[11,"to_subset","","",13,[[],["option",4]]],[11,"is_in_subset","","",13,[[]]],[11,"to_subset_unchecked","","",13,[[]]],[11,"from_subset","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"unchecked_into","","",14,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[]]],[11,"unique_saturated_into","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from_ref","","",14,[[]]],[11,"into_ref","","",14,[[]]],[11,"from_mut","","",14,[[]]],[11,"into_mut","","",14,[[]]],[11,"to_subset","","",14,[[],["option",4]]],[11,"is_in_subset","","",14,[[]]],[11,"to_subset_unchecked","","",14,[[]]],[11,"from_subset","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"unchecked_into","","",15,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[]]],[11,"unique_saturated_into","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from_ref","","",15,[[]]],[11,"into_ref","","",15,[[]]],[11,"from_mut","","",15,[[]]],[11,"into_mut","","",15,[[]]],[11,"to_subset","","",15,[[],["option",4]]],[11,"is_in_subset","","",15,[[]]],[11,"to_subset_unchecked","","",15,[[]]],[11,"from_subset","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"unchecked_into","","",16,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[]]],[11,"unique_saturated_into","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from_ref","","",16,[[]]],[11,"into_ref","","",16,[[]]],[11,"from_mut","","",16,[[]]],[11,"into_mut","","",16,[[]]],[11,"to_subset","","",16,[[],["option",4]]],[11,"is_in_subset","","",16,[[]]],[11,"to_subset_unchecked","","",16,[[]]],[11,"from_subset","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"unchecked_into","","",17,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[]]],[11,"unique_saturated_into","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from_ref","","",17,[[]]],[11,"into_ref","","",17,[[]]],[11,"from_mut","","",17,[[]]],[11,"into_mut","","",17,[[]]],[11,"to_subset","","",17,[[],["option",4]]],[11,"is_in_subset","","",17,[[]]],[11,"to_subset_unchecked","","",17,[[]]],[11,"from_subset","","",17,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"unchecked_into","","",19,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[]]],[11,"unique_saturated_into","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"__clone_box","","",19,[[["private",3]]]],[11,"equivalent","","",19,[[]]],[11,"from_ref","","",19,[[]]],[11,"into_ref","","",19,[[]]],[11,"from_mut","","",19,[[]]],[11,"into_mut","","",19,[[]]],[11,"inlined_clone","","",19,[[]]],[11,"to_subset","","",19,[[],["option",4]]],[11,"is_in_subset","","",19,[[]]],[11,"to_subset_unchecked","","",19,[[]]],[11,"from_subset","","",19,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_keyed_vec","","",18,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",18,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",18,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",18,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",18,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[]]],[11,"unique_saturated_into","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"__clone_box","","",18,[[["private",3]]]],[11,"equivalent","","",18,[[]]],[11,"blake2_128","","",18,[[]]],[11,"blake2_256","","",18,[[]]],[11,"blake2_128_concat","","",18,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",18,[[]]],[11,"twox_256","","",18,[[]]],[11,"twox_64_concat","","",18,[[],[["global",3],["vec",3]]]],[11,"identity","","",18,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",18,[[]]],[11,"into_ref","","",18,[[]]],[11,"from_mut","","",18,[[]]],[11,"into_mut","","",18,[[]]],[11,"to_subset","","",18,[[],["option",4]]],[11,"is_in_subset","","",18,[[]]],[11,"to_subset_unchecked","","",18,[[]]],[11,"from_subset","","",18,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"unchecked_into","","",21,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[]]],[11,"unique_saturated_into","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"__clone_box","","",21,[[["private",3]]]],[11,"from_ref","","",21,[[]]],[11,"into_ref","","",21,[[]]],[11,"from_mut","","",21,[[]]],[11,"into_mut","","",21,[[]]],[11,"to_subset","","",21,[[],["option",4]]],[11,"is_in_subset","","",21,[[]]],[11,"to_subset_unchecked","","",21,[[]]],[11,"from_subset","","",21,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_keyed_vec","","",20,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",20,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",20,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",20,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",20,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[]]],[11,"unique_saturated_into","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"__clone_box","","",20,[[["private",3]]]],[11,"equivalent","","",20,[[]]],[11,"blake2_128","","",20,[[]]],[11,"blake2_256","","",20,[[]]],[11,"blake2_128_concat","","",20,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",20,[[]]],[11,"twox_256","","",20,[[]]],[11,"twox_64_concat","","",20,[[],[["global",3],["vec",3]]]],[11,"identity","","",20,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",20,[[]]],[11,"into_ref","","",20,[[]]],[11,"from_mut","","",20,[[]]],[11,"into_mut","","",20,[[]]],[11,"to_subset","","",20,[[],["option",4]]],[11,"is_in_subset","","",20,[[]]],[11,"to_subset_unchecked","","",20,[[]]],[11,"from_subset","","",20,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"unchecked_into","","",25,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",25,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",25,[[]]],[11,"unique_saturated_into","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from_ref","","",25,[[]]],[11,"into_ref","","",25,[[]]],[11,"from_mut","","",25,[[]]],[11,"into_mut","","",25,[[]]],[11,"to_subset","","",25,[[],["option",4]]],[11,"is_in_subset","","",25,[[]]],[11,"to_subset_unchecked","","",25,[[]]],[11,"from_subset","","",25,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_keyed_vec","","",22,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",22,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",22,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",22,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",22,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[]]],[11,"unique_saturated_into","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"__clone_box","","",22,[[["private",3]]]],[11,"equivalent","","",22,[[]]],[11,"blake2_128","","",22,[[]]],[11,"blake2_256","","",22,[[]]],[11,"blake2_128_concat","","",22,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",22,[[]]],[11,"twox_256","","",22,[[]]],[11,"twox_64_concat","","",22,[[],[["global",3],["vec",3]]]],[11,"identity","","",22,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",22,[[]]],[11,"into_ref","","",22,[[]]],[11,"from_mut","","",22,[[]]],[11,"into_mut","","",22,[[]]],[11,"to_subset","","",22,[[],["option",4]]],[11,"is_in_subset","","",22,[[]]],[11,"to_subset_unchecked","","",22,[[]]],[11,"from_subset","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"unchecked_into","","",23,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[]]],[11,"unique_saturated_into","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from_ref","","",23,[[]]],[11,"into_ref","","",23,[[]]],[11,"from_mut","","",23,[[]]],[11,"into_mut","","",23,[[]]],[11,"to_subset","","",23,[[],["option",4]]],[11,"is_in_subset","","",23,[[]]],[11,"to_subset_unchecked","","",23,[[]]],[11,"from_subset","","",23,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"unchecked_into","","",26,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",26,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",26,[[]]],[11,"unique_saturated_into","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from_ref","","",26,[[]]],[11,"into_ref","","",26,[[]]],[11,"from_mut","","",26,[[]]],[11,"into_mut","","",26,[[]]],[11,"to_subset","","",26,[[],["option",4]]],[11,"is_in_subset","","",26,[[]]],[11,"to_subset_unchecked","","",26,[[]]],[11,"from_subset","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"unchecked_into","","",27,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",27,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",27,[[]]],[11,"unique_saturated_into","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from_ref","","",27,[[]]],[11,"into_ref","","",27,[[]]],[11,"from_mut","","",27,[[]]],[11,"into_mut","","",27,[[]]],[11,"to_subset","","",27,[[],["option",4]]],[11,"is_in_subset","","",27,[[]]],[11,"to_subset_unchecked","","",27,[[]]],[11,"from_subset","","",27,[[]]],[11,"decode","node_runtime::constants::fee","",24,[[],[["result",4],["error",3],["perbill",3]]]],[11,"mul","","",24,[[]]],[11,"clone","","",24,[[],["perbill",3]]],[11,"from","","",24,[[["compact",3],["perbill",3]],["perbill",3]]],[11,"div","","",24,[[["perbill",3]]]],[11,"partial_cmp","","",24,[[["perbill",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["perbill",3]]]],[11,"le","","",24,[[["perbill",3]]]],[11,"gt","","",24,[[["perbill",3]]]],[11,"ge","","",24,[[["perbill",3]]]],[11,"cmp","","",24,[[["perbill",3]],["ordering",4]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",24,[[],[["result",4],["perbill",3]]]],[11,"encode_to","","",24,[[]]],[11,"encode","","",24,[[],[["global",3],["vec",3]]]],[11,"using_encoded","","",24,[[]]],[11,"default","","",24,[[],["perbill",3]]],[11,"saturating_add","","Saturating addition. Compute <code>self + rhs</code>, saturating at …",24,[[["perbill",3]],["perbill",3]]],[11,"saturating_sub","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …",24,[[["perbill",3]],["perbill",3]]],[11,"saturating_mul","","Saturating multiply. Compute <code>self * rhs</code>, saturating at …",24,[[["perbill",3]],["perbill",3]]],[11,"saturating_pow","","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …",24,[[],["perbill",3]]],[11,"min_value","","",24,[[],["perbill",3]]],[11,"max_value","","",24,[[],["perbill",3]]],[11,"deconstruct","","Consume self and return the number of parts per thing.",24,[[]]],[11,"from_parts","","Build this type from a number of parts per thing.",24,[[],["perbill",3]]],[11,"from_fraction","","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>",24,[[],["perbill",3]]],[11,"from_rational_approximation","","",24,[[],["perbill",3]]],[11,"encode_as","","",24,[[]]],[11,"decode_from","","",24,[[],[["result",4],["error",3],["perbill",3]]]],[11,"serialize","","",24,[[],["result",4]]],[11,"eq","","",24,[[["perbill",3]]]],[11,"ne","","",24,[[["perbill",3]]]],[11,"from","node_runtime","",18,[[["event",4],["runtime",3]]]],[11,"from","","",18,[[["event",4],["runtime",3]]]],[11,"from","","",18,[[["event",4]]]],[11,"from","","",18,[[["runtime",3],["event",4]]]],[11,"from","","",18,[[["runtime",3],["event",4]]]],[11,"from","","",18,[[["runtime",3],["event",4]]]],[11,"from","","",18,[[["runtime",3],["event",4]]]],[11,"from","","",18,[[["runtime",3],["event",6]]]],[11,"from","","",20,[[["runtime",3],["origin",6]]]],[11,"from","","Convert to runtime origin:",21,[[["runtime",3],["origin",6]]]],[11,"from","","",21,[[["origincaller",4]]]],[11,"from","","Convert to runtime origin with caller being system signed …",21,[[["option",4]]]],[11,"from","","",22,[[["callablecallfor",6],["system",6],["runtime",3]]]],[11,"from","","",22,[[["timestamp",6],["runtime",3],["callablecallfor",6]]]],[11,"from","","",22,[[["runtime",3],["balances",6],["callablecallfor",6]]]],[11,"from","","",22,[[["runtime",3],["callablecallfor",6],["randomnesscollectiveflip",6]]]],[11,"from","","",22,[[["callablecallfor",6],["babe",6],["runtime",3]]]],[11,"from","","",22,[[["runtime",3],["callablecallfor",6],["grandpa",6]]]],[11,"from","","",22,[[["datalog",6],["runtime",3],["callablecallfor",6]]]],[11,"from","","",22,[[["runtime",3],["callablecallfor",6],["launch",6]]]],[11,"from","","",22,[[["runtime",3],["callablecallfor",6],["rws",6]]]],[11,"from","","",22,[[["runtime",3],["callablecallfor",6],["digitaltwin",6]]]],[11,"from","","",22,[[["callablecallfor",6],["sudo",6],["runtime",3]]]],[11,"into","","NOTE: converting to pallet origin loses the origin filter …",21,[[],[["origin",6],["result",4]]]],[11,"clone","","",12,[[],["sessionkeys",3]]],[11,"clone","","",19,[[],["runtime",3]]],[11,"clone","","",18,[[],["event",4]]],[11,"clone","","",21,[[],["origin",3]]],[11,"clone","","",20,[[],["origincaller",4]]],[11,"clone","","",22,[[],["call",4]]],[11,"default","","",12,[[],["sessionkeys",3]]],[11,"default","","",23,[[],["genesisconfig",3]]],[11,"eq","","",12,[[["sessionkeys",3]]]],[11,"ne","","",12,[[["sessionkeys",3]]]],[11,"eq","","",19,[[["runtime",3]]]],[11,"eq","","",18,[[["event",4]]]],[11,"ne","","",18,[[["event",4]]]],[11,"eq","","",20,[[["origincaller",4]]]],[11,"ne","","",20,[[["origincaller",4]]]],[11,"eq","","",22,[[["call",4]]]],[11,"ne","","",22,[[["call",4]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"try_into","","",18,[[],[["result",4],["event",4]]]],[11,"try_into","","",18,[[],[["event",4],["result",4]]]],[11,"try_into","","",18,[[],[["event",4],["result",4]]]],[11,"try_into","","",18,[[],[["result",4],["event",4]]]],[11,"try_into","","",18,[[],[["result",4],["event",4]]]],[11,"try_into","","",18,[[],[["result",4],["event",4]]]],[11,"try_into","","",18,[[],[["result",4],["event",4]]]],[11,"try_into","","",18,[[],[["event",6],["result",4]]]],[11,"decode","","",12,[[],[["error",3],["result",4]]]],[11,"decode","","",18,[[],[["error",3],["result",4]]]],[11,"decode","","",20,[[],[["error",3],["result",4]]]],[11,"decode","","",22,[[],[["error",3],["result",4]]]],[11,"encode_to","","",12,[[]]],[11,"encode_to","","",18,[[]]],[11,"encode_to","","",20,[[]]],[11,"encode_to","","",22,[[]]],[11,"dispatch","","",22,[[["origin",3]],["dispatchresultwithpostinfo",6]]],[11,"pre_dispatch","","",19,[[],[["transactionvalidityerror",4],["result",4]]]],[11,"validate_unsigned","","",19,[[["transactionsource",4]],["transactionvalidity",6]]],[11,"key_ids","","",12,[[]]],[11,"get_raw","","",12,[[["keytypeid",3]]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"assimilate_storage","","",23,[[["storage",3]],[["result",4],["string",3]]]],[11,"get_dispatch_info","","",22,[[],["dispatchinfo",3]]],[11,"get_call_metadata","","",22,[[],["callmetadata",3]]],[11,"get_module_names","","",22,[[]]],[11,"get_call_names","","",22,[[]]],[11,"dispatch_bypass_filter","","",22,[[["origin",3]],["dispatchresultwithpostinfo",6]]],[11,"get","","",0,[[]]],[11,"get","","",1,[[]]],[11,"get","","",2,[[]]],[11,"get","","",3,[[]]],[11,"get","","",4,[[]]],[11,"get","","",5,[[]]],[11,"get","","",6,[[]]],[11,"get","","",7,[[]]],[11,"get","","",8,[[]]],[11,"get","","",9,[[]]],[11,"get","","",10,[[]]],[11,"get","","",11,[[]]],[11,"get","","",13,[[]]],[11,"get","","",14,[[]]],[11,"get","","",15,[[]]],[11,"get","","",16,[[]]],[11,"get","","",17,[[]]],[11,"index","","",25,[[],["option",4]]],[11,"name","","",25,[[],["option",4]]],[11,"add_filter","","",21,[[]]],[11,"reset_filter","","",21,[[]]],[11,"set_caller_from","","",21,[[]]],[11,"filter_call","","",21,[[]]],[11,"caller","","",21,[[]]],[11,"none","","Create with system none origin and …",21,[[]]],[11,"root","","Create with system root origin and no filter.",21,[[]]],[11,"signed","","Create with system signed origin and …",21,[[]]],[11,"is_sub_type","","",22,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",22,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",22,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",22,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",22,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",22,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",22,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",22,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",22,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",22,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",22,[[],[["callablecallfor",6],["option",4]]]],[11,"create_transaction","","",19,[[["accountid",6],["call",4],["index",6]],["option",4]]],[11,"construct_runtime_api","","",26,[[],["apiref",3]]],[11,"execute_in_transaction","","",27,[[["fnonce",8]]]],[11,"has_api","","",27,[[["blockid",4]],[["result",4],["apierror",4]]]],[11,"has_api_with","","",27,[[["blockid",4],["fn",8]],[["result",4],["apierror",4]]]],[11,"record_proof","","",27,[[]]],[11,"extract_proof","","",27,[[],[["option",4],["storageproof",3]]]],[11,"into_storage_changes","","",27,[[["option",4],["changestriestate",3]],[["storagechanges",6],["string",3],["result",4]]]],[11,"version","","",19,[[],["runtimeversion",3]]],[11,"execute_block","","",19,[[["block",6]]]],[11,"initialize_block","","",19,[[]]],[11,"metadata","","",19,[[],["opaquemetadata",3]]],[11,"Core_version_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["nativeorencoded",4],["result",4],["apierror",4]]]],[11,"Core_execute_block_runtime_api_impl","","",27,[[["executioncontext",4],["option",4],["blockid",4],["vec",3]],[["apierror",4],["result",4],["nativeorencoded",4]]]],[11,"Core_initialize_block_runtime_api_impl","","",27,[[["option",4],["executioncontext",4],["blockid",4],["vec",3]],[["apierror",4],["result",4],["nativeorencoded",4]]]],[11,"Metadata_metadata_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["apierror",4],["result",4],["nativeorencoded",4]]]],[11,"grandpa_authorities","","",19,[[],["grandpaauthoritylist",6]]],[11,"submit_report_equivocation_unsigned_extrinsic","","",19,[[["numberfor",6],["equivocationproof",3],["opaquekeyownershipproof",3]],["option",4]]],[11,"generate_key_ownership_proof","","",19,[[["grandpaid",6],["setid",6]],[["option",4],["opaquekeyownershipproof",3]]]],[11,"GrandpaApi_grandpa_authorities_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["result",4],["apierror",4],["nativeorencoded",4]]]],[11,"GrandpaApi_submit_report_equivocation_unsigned_extrinsic_runtime_api_impl","","",27,[[["option",4],["executioncontext",4],["blockid",4],["vec",3]],[["nativeorencoded",4],["apierror",4],["result",4]]]],[11,"GrandpaApi_generate_key_ownership_proof_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["vec",3],["option",4]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"generate_session_keys","","",19,[[["option",4],["vec",3]],["vec",3]]],[11,"decode_session_keys","","",19,[[["vec",3]],[["option",4],["vec",3]]]],[11,"SessionKeys_generate_session_keys_runtime_api_impl","","",27,[[["option",4],["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"SessionKeys_decode_session_keys_runtime_api_impl","","",27,[[["option",4],["executioncontext",4],["blockid",4],["vec",3]],[["apierror",4],["result",4],["nativeorencoded",4]]]],[11,"query_info","","",19,[[],[["balance",6],["runtimedispatchinfo",3]]]],[11,"query_fee_details","","",19,[[],[["feedetails",3],["balance",6]]]],[11,"TransactionPaymentApi_query_info_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["vec",3],["option",4]],[["nativeorencoded",4],["apierror",4],["result",4]]]],[11,"TransactionPaymentApi_query_fee_details_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["vec",3],["option",4]],[["nativeorencoded",4],["result",4],["apierror",4]]]],[11,"configuration","","",19,[[],["babegenesisconfiguration",3]]],[11,"current_epoch_start","","",19,[[],["slot",3]]],[11,"current_epoch","","",19,[[],["epoch",3]]],[11,"next_epoch","","",19,[[],["epoch",3]]],[11,"generate_key_ownership_proof","","",19,[[["slot",3],["authorityid",6]],[["opaquekeyownershipproof",3],["option",4]]]],[11,"submit_report_equivocation_unsigned_extrinsic","","",19,[[["opaquekeyownershipproof",3],["equivocationproof",6]],["option",4]]],[11,"BabeApi_configuration_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"BabeApi_current_epoch_start_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"BabeApi_current_epoch_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"BabeApi_next_epoch_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"BabeApi_generate_key_ownership_proof_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["vec",3],["option",4]],[["nativeorencoded",4],["result",4],["apierror",4]]]],[11,"BabeApi_submit_report_equivocation_unsigned_extrinsic_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["vec",3],["option",4]],[["nativeorencoded",4],["apierror",4],["result",4]]]],[11,"apply_extrinsic","","",19,[[],["applyextrinsicresult",6]]],[11,"finalize_block","","",19,[[]]],[11,"inherent_extrinsics","","",19,[[["inherentdata",3]],["vec",3]]],[11,"check_inherents","","",19,[[["inherentdata",3],["block",6]],["checkinherentsresult",3]]],[11,"random_seed","","",19,[[]]],[11,"BlockBuilder_apply_extrinsic_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["vec",3],["option",4]],[["result",4],["apierror",4],["nativeorencoded",4]]]],[11,"BlockBuilder_finalize_block_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["nativeorencoded",4],["apierror",4],["result",4]]]],[11,"BlockBuilder_inherent_extrinsics_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["inherentdata",3],["option",4],["vec",3]],[["nativeorencoded",4],["apierror",4],["result",4]]]],[11,"BlockBuilder_check_inherents_runtime_api_impl","","",27,[[["executioncontext",4],["option",4],["blockid",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"BlockBuilder_random_seed_runtime_api_impl","","",27,[[["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["result",4],["apierror",4],["nativeorencoded",4]]]],[11,"validate_transaction","","",19,[[["transactionsource",4]],["transactionvalidity",6]]],[11,"TaggedTransactionQueue_validate_transaction_runtime_api_impl","","",27,[[["executioncontext",4],["option",4],["blockid",4],["vec",3]],[["apierror",4],["nativeorencoded",4],["result",4]]]],[11,"offchain_worker","","",19,[[]]],[11,"OffchainWorkerApi_offchain_worker_runtime_api_impl","","",27,[[["option",4],["executioncontext",4],["blockid",4],["vec",3]],[["apierror",4],["result",4],["nativeorencoded",4]]]],[11,"account_nonce","","",19,[[["accountid",6]],["index",6]]],[11,"AccountNonceApi_account_nonce_runtime_api_impl","","",27,[[["accountid",6],["executioncontext",4],["blockid",4],["option",4],["vec",3]],[["apierror",4],["nativeorencoded",4],["result",4]]]],[11,"from_perthousand","node_runtime::constants::fee","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.",24,[[],["perbill",3]]],[11,"from_parts","","From an explicitly defined number of parts per maximum of …",24,[[],["perbill",3]]],[11,"from_percent","","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.",24,[[],["perbill",3]]],[11,"one","","See [<code>PerThing::one</code>]",24,[[],["perbill",3]]],[11,"is_one","","See [<code>PerThing::is_one</code>].",24,[[]]],[11,"zero","","See [<code>PerThing::zero</code>].",24,[[],["perbill",3]]],[11,"is_zero","","See [<code>PerThing::is_zero</code>].",24,[[]]],[11,"deconstruct","","See [<code>PerThing::deconstruct</code>].",24,[[]]],[11,"square","","See [<code>PerThing::square</code>].",24,[[],["perbill",3]]],[11,"from_fraction","","See [<code>PerThing::from_fraction</code>].",24,[[],["perbill",3]]],[11,"from_rational_approximation","","See [<code>PerThing::from_rational_approximation</code>].",24,[[],["perbill",3]]],[11,"mul_floor","","See [<code>PerThing::mul_floor</code>].",24,[[]]],[11,"mul_ceil","","See [<code>PerThing::mul_ceil</code>].",24,[[]]],[11,"saturating_reciprocal_mul","","See [<code>PerThing::saturating_reciprocal_mul</code>].",24,[[]]],[11,"saturating_reciprocal_mul_floor","","See [<code>PerThing::saturating_reciprocal_mul_floor</code>].",24,[[]]],[11,"saturating_reciprocal_mul_ceil","","See [<code>PerThing::saturating_reciprocal_mul_ceil</code>].",24,[[]]]],"p":[[3,"BlockHashCount"],[3,"Version"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"SS58Prefix"],[3,"MinimumPeriod"],[3,"ExistentialDeposit"],[3,"MaxLocks"],[3,"TransactionByteFee"],[3,"TargetBlockFullness"],[3,"AdjustmentVariable"],[3,"MinimumMultiplier"],[3,"SessionKeys"],[3,"EpochDuration"],[3,"ExpectedBlockTime"],[3,"TotalBandwidth"],[3,"WeightLimit"],[3,"PointsLimit"],[4,"Event"],[3,"Runtime"],[4,"OriginCaller"],[3,"Origin"],[4,"Call"],[3,"GenesisConfig"],[3,"Perbill"],[3,"PalletInfo"],[3,"RuntimeApi"],[3,"RuntimeApiImpl"]]},\
"node_testing":{"doc":"A set of testing utilities for Substrate Node.","i":[[0,"bench","node_testing","Benchmarking module.",null,null],[3,"BenchKeyring","node_testing::bench","Keyring full of accounts for benching.",null,null],[5,"drop_system_cache","","Drop system cache.",null,[[]]],[3,"BenchDb","","Pre-initialized benchmarking database.",null,null],[4,"BlockType","","Type of block for generation",null,null],[13,"RandomTransfersKeepAlive","","Bunch of random transfers.",0,null],[13,"RandomTransfersReaping","","Bunch of random transfers that drain all of the source …",0,null],[13,"Noop","","Bunch of \\\"no-op\\\" calls.",0,null],[13,"DatalogRecord","","Bunch of datalog_record.",0,null],[11,"to_content","","Create block content description with specified number of …",0,[[["option",4]],["blockcontent",3]]],[3,"BlockContent","","Content of the generated block.",null,null],[4,"DatabaseType","","Type of backend database.",null,null],[13,"RocksDb","","RocksDb backend.",1,null],[13,"ParityDb","","Parity DB backend.",1,null],[3,"TaskExecutor","","Benchmarking task executor.",null,null],[3,"BlockContentIterator","","Iterator for block content.",null,null],[11,"with_key_types","","New immutable benchmarking database.",2,[[["keytypes",4],["databasetype",4]]]],[11,"new","","New immutable benchmarking database.",2,[[["databasetype",4]]]],[11,"generate_inherents","","Generate list of required inherents.",2,[[["client",6]],[["vec",3],["opaqueextrinsic",3]]]],[11,"block_content","","Iterate over some block content with transaction signed …",2,[[["blockcontent",3],["client",6]],["blockcontentiterator",3]]],[11,"client","","Get cliet for this database operations.",2,[[],["client",6]]],[11,"generate_block","","Generate new block using this database.",2,[[["blockcontent",3]],["block",6]]],[11,"path","","Database path.",2,[[],["path",3]]],[11,"create_context","","Clone this database and create context for …",2,[[["profile",4]],["benchcontext",3]]],[4,"KeyTypes","","Key types to be used in benching keyring",null,null],[13,"Sr25519","","sr25519 signing keys",3,null],[13,"Ed25519","","ed25519 signing keys",3,null],[11,"new","","New keyring.",4,[[["keytypes",4]]]],[11,"collect_account_ids","","Generated account id-s from keyring keypairs.",4,[[],[["accountid",6],["vec",3]]]],[11,"at","","Get account id at position <code>index</code>",4,[[],["accountid",6]]],[11,"sign","","Sign transaction with keypair from this keyring.",4,[[["checkedextrinsic",6]],["uncheckedextrinsic",6]]],[11,"generate_genesis","","Generate genesis with accounts from this keyring endowed …",4,[[],["genesisconfig",3]]],[4,"Profile","","Profile for exetion strategies.",null,null],[13,"Native","","As native as possible.",5,null],[13,"Wasm","","As wasm as possible.",5,null],[3,"BenchContext","","Benchmarking/test context holding instantiated client and …",null,null],[12,"client","","Node client.",6,null],[12,"backend","","Node backend.",6,null],[12,"spawn_handle","","Spawn handle.",6,null],[11,"import_block","","Import some block.",6,[[["block",6]]]],[11,"path","","Database path for the current context.",6,[[],["path",3]]],[0,"client","node_testing","Utilities to build a <code>TestClient</code> for <code>node-runtime</code>.",null,null],[0,"client_ext","node_testing::client","Client extension for tests.",null,null],[8,"ClientExt","node_testing::client::client_ext","Extension trait for a test client.",null,null],[10,"finalize_block","","Finalize a block.",7,[[["vec",3],["option",4],["blockid",4]],[["error",4],["result",4]]]],[10,"genesis_hash","","Returns hash of the genesis block.",7,[[]]],[8,"ClientBlockImportExt","","Extension trait for a test client around block importing.",null,null],[10,"import","","Import block to the chain. No finality.",8,[[["blockorigin",4]],[["result",4],["error",4]]]],[10,"import_as_best","","Import a block and make it our best block if possible.",8,[[["blockorigin",4]],[["result",4],["error",4]]]],[10,"import_as_final","","Import a block and finalize it.",8,[[["blockorigin",4]],[["result",4],["error",4]]]],[10,"import_justified","","Import block with justification, finalizes block.",8,[[["global",3],["vec",3],["blockorigin",4]],[["result",4],["error",4]]]],[6,"LightBackend","node_testing::client","Test client light database backend.",null,null],[8,"GenesisInit","","A genesis storage initialization trait.",null,null],[10,"genesis_storage","","Construct genesis storage.",9,[[],["storage",3]]],[3,"TestClientBuilder","","A builder for creating a test client instance.",null,null],[3,"RpcTransactionOutput","","The output of an RPC transaction.",null,null],[12,"result","","The output string of the transaction if any.",10,null],[12,"session","","The session object.",10,null],[12,"receiver","","An async receiver if data will be returned via a callback.",10,null],[3,"RpcTransactionError","","An error for when the RPC call fails.",null,null],[12,"code","","A Number that indicates the error type that occurred.",11,null],[12,"message","","A String providing a short description of the error.",11,null],[12,"data","","A Primitive or Structured value that contains additional …",11,null],[8,"RpcHandlersExt","","An extension trait for <code>RpcHandlers</code>.",null,null],[10,"send_transaction","","Send a transaction through the RpcHandlers.",12,[[["opaqueextrinsic",3]],[["pin",3],["box",3]]]],[8,"BlockchainEventsExt","","An extension trait for <code>BlockchainEvents</code>.",null,null],[10,"wait_for_blocks","","Wait for <code>count</code> blocks to be imported in the node and then …",13,[[],[["box",3],["pin",3]]]],[3,"ExecutionStrategies","","Execution strategies settings.",null,null],[12,"syncing","","Execution strategy used when syncing.",14,null],[12,"importing","","Execution strategy used when importing blocks.",14,null],[12,"block_construction","","Execution strategy used when constructing blocks.",14,null],[12,"offchain_worker","","Execution strategy used for offchain workers.",14,null],[12,"other","","Execution strategy used in other cases.",14,null],[3,"ExecutionExtensions","","A producer of execution extensions for offchain calls.",null,null],[6,"ForkBlocks","","Expected hashes of blocks at given heights.",null,null],[6,"BadBlocks","","Known bad block hashes.",null,null],[3,"Backend","","Disk backend.",null,null],[0,"light","node_testing::client::sc_client_db","RocksDB-based light client blockchain storage.",null,null],[3,"LightStorage","node_testing::client::sc_client_db::light","Light blockchain storage. Stores most recent headers + …",null,null],[0,"offchain","node_testing::client::sc_client_db","RocksDB-based offchain workers local storage.",null,null],[3,"LocalStorage","node_testing::client::sc_client_db::offchain","Offchain local storage",null,null],[0,"bench","node_testing::client::sc_client_db","State backend that\'s useful for benchmarking",null,null],[3,"KeyTracker","node_testing::client::sc_client_db::bench","Track whether a specific key has already been read or …",null,null],[3,"ReadWriteTracker","","A simple object that counts the reads and writes at the …",null,null],[3,"BenchmarkingState","","State that manages the backend database reference. Allows …",null,null],[6,"DbState","node_testing::client::sc_client_db","DB-backed patricia trie state, transaction type is an …",null,null],[6,"DbHash","","Hash type that this backend uses for the database.",null,null],[3,"RefTrackingState","","A reference tracking state.",null,null],[3,"DatabaseSettings","","Database settings.",null,null],[12,"state_cache_size","","State cache size.",15,null],[12,"state_cache_child_ratio","","Ratio of cache size dedicated to child tries.",15,null],[12,"state_pruning","","State pruning mode.",15,null],[12,"source","","Where to find the database.",15,null],[12,"keep_blocks","","Block pruning mode.",15,null],[12,"transaction_storage","","Block body/Transaction storage scheme.",15,null],[4,"KeepBlocks","","Block pruning settings.",null,null],[13,"All","","Keep full block history.",16,null],[13,"Some","","Keep N recent finalized blocks.",16,null],[4,"TransactionStorageMode","","Block body storage scheme.",null,null],[13,"BlockBody","","Store block body as an encoded list of full transactions …",17,null],[13,"StorageChain","","Store a list of hashes in the BODY column and each …",17,null],[4,"DatabaseSettingsSrc","","Where to find the database..",null,null],[13,"RocksDb","","Load a RocksDB database from a given path. Recommended …",18,null],[12,"path","node_testing::client::sc_client_db::DatabaseSettingsSrc","Path to the database.",19,null],[12,"cache_size","","Cache size in MiB.",19,null],[13,"ParityDb","node_testing::client::sc_client_db","Load a ParityDb database from a given path.",18,null],[12,"path","node_testing::client::sc_client_db::DatabaseSettingsSrc","Path to the database.",20,null],[13,"Custom","node_testing::client::sc_client_db","Use a custom already-open database.",18,null],[3,"BlockchainDb","","Block database",null,null],[3,"BlockImportOperation","","Database transaction",null,null],[3,"Backend","","Disk backend.",null,null],[8,"Database","","",null,null],[11,"commit","","Commit the <code>transaction</code> to the database atomically. Any …",21,[[["transaction",3]],[["databaseerror",3],["result",4]]]],[11,"commit_ref","","Commit the <code>transaction</code> to the database atomically. Any …",21,[[["iterator",8]],[["databaseerror",3],["result",4]]]],[10,"get","","Retrieve the value previously stored against <code>key</code> or <code>None</code> …",21,[[],[["vec",3],["option",4]]]],[11,"contains","","Check if the value exists in the database without …",21,[[]]],[11,"with_get","","Call <code>f</code> with the value previously stored against <code>key</code>.",21,[[["fnmut",8]]]],[11,"set","","Set the value of <code>key</code> in <code>col</code> to <code>value</code>, replacing anything …",21,[[],[["databaseerror",3],["result",4]]]],[11,"remove","","Remove the value of <code>key</code> in <code>col</code>.",21,[[],[["databaseerror",3],["result",4]]]],[10,"lookup","","Retrieve the first preimage previously <code>store</code>d for <code>hash</code> or …",21,[[],[["vec",3],["option",4]]]],[11,"with_lookup","","Call <code>f</code> with the preimage stored for <code>hash</code> and return the …",21,[[["fnmut",8]]]],[11,"store","","Store the <code>preimage</code> of <code>hash</code> into the database, so that it …",21,[[],[["databaseerror",3],["result",4]]]],[11,"release","","Release the preimage of <code>hash</code> from the database. An equal …",21,[[],[["databaseerror",3],["result",4]]]],[4,"PruningMode","","Pruning mode.",null,null],[13,"Constrained","","Maintain a pruning window.",22,null],[13,"ArchiveAll","","No pruning. Canonicalization is a no-op.",22,null],[13,"ArchiveCanonical","","Canonicalization discards non-canonical nodes. All the …",22,null],[3,"BenchmarkingState","","State that manages the backend database reference. Allows …",null,null],[0,"block_validation","node_testing::client::sp_consensus","Block announcement validation.",null,null],[8,"Chain","node_testing::client::sp_consensus::block_validation","A type which provides access to chain information.",null,null],[10,"block_status","","Retrieve the status of the block denoted by the given […",23,[[["blockid",4]],[["box",3],["result",4],["blockstatus",4]]]],[4,"Validation","","Result of <code>BlockAnnounceValidator::validate</code>.",null,null],[13,"Success","","Valid block announcement.",24,null],[12,"is_new_best","node_testing::client::sp_consensus::block_validation::Validation","Is this the new best block of the node?",25,null],[13,"Failure","node_testing::client::sp_consensus::block_validation","Invalid block announcement.",24,null],[12,"disconnect","node_testing::client::sp_consensus::block_validation::Validation","Should we disconnect from this peer?",26,null],[8,"BlockAnnounceValidator","node_testing::client::sp_consensus::block_validation","Type which checks incoming block announcements.",null,null],[10,"validate","","Validate the announced header and its associated data.",27,[[],[["box",3],["pin",3]]]],[3,"DefaultBlockAnnounceValidator","","Default implementation of <code>BlockAnnounceValidator</code>.",null,null],[0,"offline_tracker","node_testing::client::sp_consensus","Tracks offline validators.",null,null],[3,"OfflineTracker","node_testing::client::sp_consensus::offline_tracker","Tracks offline validators and can issue a report for …",null,null],[0,"error","node_testing::client::sp_consensus","Error types in Consensus",null,null],[6,"Result","node_testing::client::sp_consensus::error","Result type alias.",null,null],[4,"Error","","Error type.",null,null],[13,"StateUnavailable","","Missing state at block with given descriptor.",28,null],[13,"IoTerminated","","I/O terminated unexpectedly",28,null],[13,"NoIntermediate","","Intermediate missing.",28,null],[13,"InvalidIntermediate","","Intermediate is of wrong type.",28,null],[13,"FaultyTimer","","Unable to schedule wake-up.",28,null],[13,"InherentData","","Error while working with inherent data.",28,null],[13,"CannotPropose","","Unable to propose a block.",28,null],[13,"InvalidSignature","","Error checking signature",28,null],[13,"InvalidAuthoritiesSet","","Invalid authorities set received from the runtime.",28,null],[13,"InvalidAuthority","","Account is not an authority.",28,null],[13,"IncompatibleAuthoringRuntime","","Authoring interface does not match the runtime.",28,null],[12,"native","node_testing::client::sp_consensus::error::Error","",29,null],[12,"on_chain","","",29,null],[13,"RuntimeVersionMissing","node_testing::client::sp_consensus::error","Authoring interface does not match the runtime.",28,null],[13,"NativeRuntimeMissing","","Authoring interface does not match the runtime.",28,null],[13,"InvalidJustification","","Justification requirements not met.",28,null],[13,"Other","","Some other error.",28,null],[13,"ClientImport","","Error from the client while importing",28,null],[13,"ChainLookup","","Error from the client while importing",28,null],[13,"CannotSign","","Signing failed",28,null],[0,"block_import","node_testing::client::sp_consensus","Block import helpers.",null,null],[4,"ImportResult","node_testing::client::sp_consensus::block_import","Block import result.",null,null],[13,"Imported","","Block imported.",30,null],[13,"AlreadyInChain","","Already in the blockchain.",30,null],[13,"KnownBad","","Block or parent is known to be bad.",30,null],[13,"UnknownParent","","Block parent is not in the chain.",30,null],[13,"MissingState","","Parent state is missing.",30,null],[3,"ImportedAux","","Auxiliary data associated with an imported block result.",null,null],[12,"header_only","","Only the header has been imported. Block body …",31,null],[12,"clear_justification_requests","","Clear all pending justification requests.",31,null],[12,"needs_justification","","Request a justification for the given block.",31,null],[12,"bad_justification","","Received a bad justification.",31,null],[12,"is_new_best","","Whether the block that was imported is the new best block.",31,null],[4,"BlockOrigin","","Block data origin.",null,null],[13,"Genesis","","Genesis block built into the client.",32,null],[13,"NetworkInitialSync","","Block is part of the initial sync with the network.",32,null],[13,"NetworkBroadcast","","Block was broadcasted on the network.",32,null],[13,"ConsensusBroadcast","","Block that was received from the network and validated in …",32,null],[13,"Own","","Block that was collated by this node.",32,null],[13,"File","","Block was imported from a file.",32,null],[4,"ForkChoiceStrategy","","Fork choice strategy.",null,null],[13,"LongestChain","","Longest chain fork choice.",33,null],[13,"Custom","","Custom fork choice rule, where true indicates the new …",33,null],[3,"BlockCheckParams","","Data required to check validity of a Block.",null,null],[12,"hash","","Hash of the block that we verify.",34,null],[12,"number","","Block number of the block that we verify.",34,null],[12,"parent_hash","","Parent hash of the block that we verify.",34,null],[12,"allow_missing_state","","Allow importing the block skipping state verification if …",34,null],[12,"import_existing","","Re-validate existing block.",34,null],[3,"BlockImportParams","","Data required to import a Block.",null,null],[12,"origin","","Origin of the Block",35,null],[12,"header","","The header, without consensus post-digests applied. This …",35,null],[12,"justification","","Justification provided for this block from the outside.",35,null],[12,"post_digests","","Digest items that have been added after the runtime for …",35,null],[12,"body","","The body of the block.",35,null],[12,"storage_changes","","The changes to the storage to create the state for the …",35,null],[12,"finalized","","Is this block finalized already? <code>true</code> implies instant …",35,null],[12,"intermediates","","Intermediate values that are interpreted by block …",35,null],[12,"auxiliary","","Auxiliary consensus data produced by the block. Contains …",35,null],[12,"fork_choice","","Fork choice strategy of this import. This should only be …",35,null],[12,"allow_missing_state","","Allow importing the block skipping state verification if …",35,null],[12,"import_existing","","Re-validate existing block.",35,null],[12,"post_hash","","Cached full header hash (with post-digests applied).",35,null],[8,"BlockImport","","Block import trait.",null,null],[16,"Error","","The error type.",36,null],[16,"Transaction","","The transaction type used by the backend.",36,null],[10,"check_block","","Check block preconditions.",36,[[["blockcheckparams",3]],[["importresult",4],["result",4]]]],[10,"import_block","","Import a block.",36,[[["blockimportparams",3],["hashmap",3],["vec",3],["randomstate",3]],[["importresult",4],["result",4]]]],[8,"JustificationImport","","Justification import trait",null,null],[16,"Error","","",37,null],[11,"on_start","","Called by the import queue when it is started. Returns a …",37,[[],[["global",3],["vec",3]]]],[10,"import_justification","","Import a Block justification and finalize the given block.",37,[[["global",3],["vec",3]],["result",4]]],[0,"import_queue","node_testing::client::sp_consensus","Import Queue primitive: something which can verify and …",null,null],[6,"DefaultImportQueue","node_testing::client::sp_consensus::import_queue","A commonly-used Import Queue type.",null,null],[0,"buffered_link","","Provides the <code>buffered_link</code> utility.",null,null],[5,"buffered_link","node_testing::client::sp_consensus::import_queue::buffered_link","Wraps around an unbounded channel from the <code>futures</code> crate. …",null,[[]]],[3,"BufferedLinkSender","","See [<code>buffered_link</code>].",null,null],[3,"BufferedLinkReceiver","","See [<code>buffered_link</code>].",null,null],[6,"BoxBlockImport","node_testing::client::sp_consensus::import_queue","Shared block import struct used by the queue.",null,null],[6,"BoxJustificationImport","","Shared justification import struct used by the queue.",null,null],[6,"Origin","","Maps to the Origin used by the network.",null,null],[3,"IncomingBlock","","Block data used by the queue.",null,null],[12,"hash","","Block header hash.",38,null],[12,"header","","Block header if requested.",38,null],[12,"body","","Block body if requested.",38,null],[12,"justification","","Justification if requested.",38,null],[12,"origin","","The peer, we received this from",38,null],[12,"allow_missing_state","","Allow importing the block skipping state verification if …",38,null],[12,"import_existing","","Re-validate existing block.",38,null],[6,"CacheKeyId","","Type of keys in the blockchain cache that consensus …",null,null],[8,"Verifier","","Verify a justification of a block",null,null],[10,"verify","","Verify the given data and return the BlockImportParams …",39,[[["option",4],["blockorigin",4],["vec",3],["vec",3],["option",4]],[["result",4],["string",3]]]],[8,"ImportQueue","","Blocks import queue API.",null,null],[10,"import_blocks","","Import bunch of blocks.",40,[[["vec",3],["blockorigin",4],["global",3],["incomingblock",3]]]],[10,"import_justification","","Import a block justification.",40,[[["global",3],["vec",3],["peerid",3]]]],[10,"poll_actions","","Polls for actions to perform on the network.",40,[[["link",8],["context",3]]]],[8,"Link","","Hooks that the verification queue can use to influence …",null,null],[11,"blocks_processed","","Batch of blocks imported, with or without error.",41,[[["global",3],["vec",3]]]],[11,"justification_imported","","Justification import result.",41,[[["peerid",3]]]],[11,"request_justification","","Request a justification for the given block.",41,[[]]],[4,"BlockImportResult","","Block import successful result.",null,null],[13,"ImportedKnown","","Imported known block.",42,null],[13,"ImportedUnknown","","Imported unknown block.",42,null],[4,"BlockImportError","","Block import error.",null,null],[13,"IncompleteHeader","","Block missed header, can\'t be imported",43,null],[13,"VerificationFailed","","Block verification failed, can\'t be imported",43,null],[13,"BadBlock","","Block is known to be Bad",43,null],[13,"MissingState","","Parent state is missing.",43,null],[13,"UnknownParent","","Block has an unknown parent",43,null],[13,"Cancelled","","Block import has been cancelled. This can happen if the …",43,null],[13,"Other","","Other error.",43,null],[5,"import_single_block","","Single block import function.",null,[[["blockorigin",4],["incomingblock",3],["blockimport",8]],[["blockimporterror",4],["result",4],["blockimportresult",4]]]],[3,"BasicQueue","","Interface to a basic block import queue that is importing …",null,null],[0,"evaluation","node_testing::client::sp_consensus","Block evaluation and evaluation errors.",null,null],[6,"Result","node_testing::client::sp_consensus::evaluation","Result type alias.",null,null],[4,"Error","","Error type.",null,null],[13,"BadProposalFormat","","Proposal provided not a block.",44,null],[13,"WrongParentHash","","Proposal had wrong parent hash.",44,null],[12,"expected","node_testing::client::sp_consensus::evaluation::Error","",45,null],[12,"got","","",45,null],[13,"WrongNumber","node_testing::client::sp_consensus::evaluation","Proposal had wrong number.",44,null],[12,"expected","node_testing::client::sp_consensus::evaluation::Error","",46,null],[12,"got","","",46,null],[13,"ProposalTooLarge","node_testing::client::sp_consensus::evaluation","Proposal exceeded the maximum size.",44,null],[12,"block_size","node_testing::client::sp_consensus::evaluation::Error","",47,null],[12,"max_block_size","","",47,null],[5,"evaluate_initial","node_testing::client::sp_consensus::evaluation","Attempt to evaluate a substrate block as a node block, …",null,[[],[["result",4],["error",4]]]],[4,"BlockStatus","node_testing::client::sp_consensus","Block status.",null,null],[13,"Queued","","Added to the import queue.",48,null],[13,"InChainWithState","","Already in the blockchain and the state is available.",48,null],[13,"InChainPruned","","In the blockchain, but the state is not available.",48,null],[13,"KnownBad","","Block or parent is known to be bad.",48,null],[13,"Unknown","","Not in the queue or the blockchain.",48,null],[8,"Environment","","Environment for a Consensus instance.",null,null],[16,"Proposer","","The proposer type this creates.",49,null],[16,"CreateProposer","","A future that resolves to the proposer.",49,null],[16,"Error","","Error which can occur upon creation.",49,null],[10,"init","","Initialize the proposal logic on top of a specific …",49,[[]]],[3,"Proposal","","A proposal that is created by a [<code>Proposer</code>].",null,null],[12,"block","","The block that was build.",50,null],[12,"proof","","Optional proof that was recorded while building the block.",50,null],[12,"storage_changes","","The storage changes while building this block.",50,null],[4,"RecordProof","","Used as parameter to [<code>Proposer</code>] to tell the requirement …",null,null],[13,"Yes","","<code>Yes</code>, record a proof.",51,null],[13,"No","","<code>No</code>, don\'t record any proof.",51,null],[8,"Proposer","","Logic for a proposer.",null,null],[16,"Error","","Error type which can occur when proposing or evaluating.",52,null],[16,"Transaction","","The transaction type used by the backend.",52,null],[16,"Proposal","","Future that resolves to a committed proposal with an …",52,null],[10,"propose","","Create a proposal.",52,[[["digest",3],["duration",3],["inherentdata",3],["recordproof",4]]]],[8,"SyncOracle","","An oracle for when major synchronization work is being …",null,null],[10,"is_major_syncing","","Whether the synchronization service is undergoing major …",53,[[]]],[10,"is_offline","","Whether the synchronization service is offline. Returns …",53,[[]]],[3,"NoNetwork","","A synchronization oracle for when there is no network.",null,null],[8,"CanAuthorWith","","Checks if the current active native block authoring …",null,null],[10,"can_author_with","","See trait docs for more information.",54,[[["blockid",4]],[["string",3],["result",4]]]],[3,"CanAuthorWithNativeVersion","","Checks if the node can author blocks by using …",null,null],[3,"AlwaysCanAuthor","","Returns always <code>true</code> for <code>can_author_with</code>. This is useful …",null,null],[3,"NeverCanAuthor","","Never can author.",null,null],[8,"SlotData","","A type from which a slot duration can be obtained.",null,null],[10,"slot_duration","","Gets the slot duration.",55,[[]]],[18,"SLOT_KEY","","The static slot key",55,null],[3,"InherentData","","Inherent data to include in a block.",null,null],[4,"Error","","Error type.",null,null],[13,"StateUnavailable","","Missing state at block with given descriptor.",28,null],[13,"IoTerminated","","I/O terminated unexpectedly",28,null],[13,"NoIntermediate","","Intermediate missing.",28,null],[13,"InvalidIntermediate","","Intermediate is of wrong type.",28,null],[13,"FaultyTimer","","Unable to schedule wake-up.",28,null],[13,"InherentData","","Error while working with inherent data.",28,null],[13,"CannotPropose","","Unable to propose a block.",28,null],[13,"InvalidSignature","","Error checking signature",28,null],[13,"InvalidAuthoritiesSet","","Invalid authorities set received from the runtime.",28,null],[13,"InvalidAuthority","","Account is not an authority.",28,null],[13,"IncompatibleAuthoringRuntime","","Authoring interface does not match the runtime.",28,null],[12,"native","node_testing::client::sp_consensus::Error","",29,null],[12,"on_chain","","",29,null],[13,"RuntimeVersionMissing","node_testing::client::sp_consensus","Authoring interface does not match the runtime.",28,null],[13,"NativeRuntimeMissing","","Authoring interface does not match the runtime.",28,null],[13,"InvalidJustification","","Justification requirements not met.",28,null],[13,"Other","","Some other error.",28,null],[13,"ClientImport","","Error from the client while importing",28,null],[13,"ChainLookup","","Error from the client while importing",28,null],[13,"CannotSign","","Signing failed",28,null],[8,"BlockImport","","Block import trait.",null,null],[16,"Error","","The error type.",36,null],[16,"Transaction","","The transaction type used by the backend.",36,null],[10,"check_block","","Check block preconditions.",36,[[["blockcheckparams",3]],[["importresult",4],["result",4]]]],[10,"import_block","","Import a block.",36,[[["blockimportparams",3],["hashmap",3],["vec",3],["randomstate",3]],[["importresult",4],["result",4]]]],[4,"BlockOrigin","","Block data origin.",null,null],[13,"Genesis","","Genesis block built into the client.",32,null],[13,"NetworkInitialSync","","Block is part of the initial sync with the network.",32,null],[13,"NetworkBroadcast","","Block was broadcasted on the network.",32,null],[13,"ConsensusBroadcast","","Block that was received from the network and validated in …",32,null],[13,"Own","","Block that was collated by this node.",32,null],[13,"File","","Block was imported from a file.",32,null],[4,"ForkChoiceStrategy","","Fork choice strategy.",null,null],[13,"LongestChain","","Longest chain fork choice.",33,null],[13,"Custom","","Custom fork choice rule, where true indicates the new …",33,null],[3,"ImportedAux","","Auxiliary data associated with an imported block result.",null,null],[12,"header_only","","Only the header has been imported. Block body …",31,null],[12,"clear_justification_requests","","Clear all pending justification requests.",31,null],[12,"needs_justification","","Request a justification for the given block.",31,null],[12,"bad_justification","","Received a bad justification.",31,null],[12,"is_new_best","","Whether the block that was imported is the new best block.",31,null],[3,"BlockImportParams","","Data required to import a Block.",null,null],[12,"origin","","Origin of the Block",35,null],[12,"header","","The header, without consensus post-digests applied. This …",35,null],[12,"justification","","Justification provided for this block from the outside.",35,null],[12,"post_digests","","Digest items that have been added after the runtime for …",35,null],[12,"body","","The body of the block.",35,null],[12,"storage_changes","","The changes to the storage to create the state for the …",35,null],[12,"finalized","","Is this block finalized already? <code>true</code> implies instant …",35,null],[12,"intermediates","","Intermediate values that are interpreted by block …",35,null],[12,"auxiliary","","Auxiliary consensus data produced by the block. Contains …",35,null],[12,"fork_choice","","Fork choice strategy of this import. This should only be …",35,null],[12,"allow_missing_state","","Allow importing the block skipping state verification if …",35,null],[12,"import_existing","","Re-validate existing block.",35,null],[12,"post_hash","","Cached full header hash (with post-digests applied).",35,null],[3,"BlockCheckParams","","Data required to check validity of a Block.",null,null],[12,"hash","","Hash of the block that we verify.",34,null],[12,"number","","Block number of the block that we verify.",34,null],[12,"parent_hash","","Parent hash of the block that we verify.",34,null],[12,"allow_missing_state","","Allow importing the block skipping state verification if …",34,null],[12,"import_existing","","Re-validate existing block.",34,null],[4,"ImportResult","","Block import result.",null,null],[13,"Imported","","Block imported.",30,null],[13,"AlreadyInChain","","Already in the blockchain.",30,null],[13,"KnownBad","","Block or parent is known to be bad.",30,null],[13,"UnknownParent","","Block parent is not in the chain.",30,null],[13,"MissingState","","Parent state is missing.",30,null],[8,"JustificationImport","","Justification import trait",null,null],[16,"Error","","",37,null],[11,"on_start","","Called by the import queue when it is started. Returns a …",37,[[],[["global",3],["vec",3]]]],[10,"import_justification","","Import a Block justification and finalize the given block.",37,[[["global",3],["vec",3]],["result",4]]],[8,"SelectChain","","The SelectChain trait defines the strategy upon which the …",null,null],[10,"leaves","","Get all leaves of the chain: block hashes that have no …",56,[[],[["result",4],["error",4],["vec",3]]]],[10,"best_chain","","Among those <code>leaves</code> deterministically pick one chain as …",56,[[],[["error",4],["result",4]]]],[11,"finality_target","","Get the best descendent of <code>target_hash</code> that we should …",56,[[["option",4]],[["result",4],["option",4],["error",4]]]],[8,"StateBackend","","A state backend is used to read state data and can have …",null,null],[16,"Error","","An error type when fetching data is not possible.",57,null],[16,"Transaction","","Storage changes to be applied if committing",57,null],[16,"TrieBackendStorage","","Type of trie backend storage.",57,null],[10,"storage","","Get keyed storage or None if there is nothing associated.",57,[[],[["result",4],["option",4]]]],[11,"storage_hash","","Get keyed storage value hash or None if there is nothing …",57,[[],[["result",4],["option",4]]]],[10,"child_storage","","Get keyed child storage or None if there is nothing …",57,[[["childinfo",4]],[["result",4],["option",4]]]],[11,"child_storage_hash","","Get child keyed storage value hash or None if there is …",57,[[["childinfo",4]],[["result",4],["option",4]]]],[11,"exists_storage","","true if a key exists in storage.",57,[[],["result",4]]],[11,"exists_child_storage","","true if a key exists in child storage.",57,[[["childinfo",4]],["result",4]]],[10,"next_storage_key","","Return the next key in storage in lexicographic order or …",57,[[],[["result",4],["option",4]]]],[10,"next_child_storage_key","","Return the next key in child storage in lexicographic …",57,[[["childinfo",4]],[["result",4],["option",4]]]],[10,"apply_to_child_keys_while","","Retrieve all entries keys of child storage and call <code>f</code> for …",57,[[["childinfo",4]]]],[11,"for_keys_with_prefix","","Retrieve all entries keys which start with the given …",57,[[]]],[10,"for_key_values_with_prefix","","Retrieve all entries keys and values of which start with …",57,[[]]],[10,"for_child_keys_with_prefix","","Retrieve all child entries keys which start with the …",57,[[["childinfo",4]]]],[10,"storage_root","","Calculate the storage root, with given delta over what is …",57,[[]]],[10,"child_storage_root","","Calculate the child storage root, with given delta over …",57,[[["childinfo",4]]]],[10,"pairs","","Get all key/value pairs into a Vec.",57,[[],[["global",3],["vec",3]]]],[11,"keys","","Get all keys with given prefix",57,[[],[["global",3],["vec",3],["vec",3]]]],[11,"child_keys","","Get all keys of child storage with given prefix",57,[[["childinfo",4]],[["global",3],["vec",3],["vec",3]]]],[11,"as_trie_backend","","Try convert into trie backend.",57,[[],[["option",4],["triebackend",3]]]],[11,"full_storage_root","","Calculate the storage root, with given delta over what is …",57,[[]]],[10,"register_overlay_stats","","Register stats from overlay of state machine.",57,[[["statemachinestats",3]]]],[10,"usage_info","","Query backend usage statistics (i/o, memory)",57,[[],["usageinfo",3]]],[11,"wipe","","Wipe the state database.",57,[[],["result",4]]],[11,"commit","","Commit given transaction to storage.",57,[[["global",3],["vec",3],["vec",3]],["result",4]]],[11,"read_write_count","","Get the read/write count of the db",57,[[]]],[11,"reset_read_write_count","","Get the read/write count of the db",57,[[]]],[11,"get_whitelist","","Get the whitelist for tracking db reads/writes",57,[[],[["trackedstoragekey",3],["vec",3],["global",3]]]],[11,"set_whitelist","","Update the whitelist for tracking db reads/writes",57,[[["trackedstoragekey",3],["vec",3],["global",3]]]],[6,"DefaultImportQueue","","A commonly-used Import Queue type.",null,null],[3,"NativeExecutor","node_testing::client","A generic <code>CodeExecutor</code> implementation that uses a …",null,null],[4,"WasmExecutionMethod","","Specification of different methods of executing the …",null,null],[13,"Interpreted","","Uses the Wasmi interpreter.",58,null],[13,"Compiled","","Uses the Wasmtime compiled runtime.",58,null],[8,"RuntimeInfo","node_testing::client::sc_executor","Provides runtime information.",null,null],[10,"native_version","","Native runtime information.",59,[[],["nativeversion",3]]],[10,"runtime_version","","Extract <code>RuntimeVersion</code> of the given <code>runtime_code</code>.",59,[[["externalities",8],["runtimecode",3]],[["result",4],["error",4],["runtimeversion",3]]]],[14,"native_executor_instance","","Implements a <code>NativeExecutionDispatch</code> for provided …",null,null],[3,"Trap","node_testing::client::sc_executor::wasmi","Error type which can be thrown by wasm code or by host …",null,null],[4,"TrapKind","","Error type which can be thrown by wasm code or by host …",null,null],[13,"Unreachable","","Wasm code executed <code>unreachable</code> opcode.",60,null],[13,"MemoryAccessOutOfBounds","","Attempt to load or store at the address which lies …",60,null],[13,"TableAccessOutOfBounds","","Attempt to access table element at index which lies …",60,null],[13,"ElemUninitialized","","Attempt to access table element which is uninitialized …",60,null],[13,"DivisionByZero","","Attempt to divide by zero.",60,null],[13,"InvalidConversionToInt","","Attempt to make a conversion to an int failed.",60,null],[13,"StackOverflow","","Stack overflow.",60,null],[13,"UnexpectedSignature","","Attempt to invoke a function with mismatching signature.",60,null],[13,"Host","","Error specified by the host.",60,null],[4,"Error","","Internal interpreter error.",null,null],[13,"Validation","","Module validation error. Might occur only at load time.",61,null],[13,"Instantiation","","Error while instantiating a module. Might occur when …",61,null],[13,"Function","","Function-level error.",61,null],[13,"Table","","Table-level error.",61,null],[13,"Memory","","Memory-level error.",61,null],[13,"Global","","Global-level error.",61,null],[13,"Value","","Value-level error.",61,null],[13,"Trap","","Trap.",61,null],[13,"Host","","Custom embedder error.",61,null],[0,"nan_preserving_float","","",null,null],[3,"F32","node_testing::client::sc_executor::wasmi::nan_preserving_float","",null,null],[3,"F64","","",null,null],[0,"memory_units","node_testing::client::sc_executor::wasmi","WebAssembly-specific sizes and units.",null,null],[5,"size_of","node_testing::client::sc_executor::wasmi::memory_units","Returns the size of a type in <code>Bytes</code>.",null,[[],["bytes",3]]],[8,"ByteSize","","A trait defining the size, in bytes, of one unit of <code>Self</code>.",null,null],[10,"byte_size","","The size, in bytes, of a single unit of <code>Self</code>.",62,[[],["bytes",3]]],[3,"Bytes","","Memory size specified in bytes.",null,null],[12,"0","","",63,null],[8,"RoundUpTo","","A trait defining round up conversion between various …",null,null],[10,"round_up_to","","Returns minimum number of <code>T</code> to fit amount of space …",64,[[]]],[3,"Pages","","Memory size specified in WebAssembly memory pages.",null,null],[12,"0","","",65,null],[3,"Words","","Memory size specified in <code>wasm32</code> words.",null,null],[12,"0","","",66,null],[3,"Module","node_testing::client::sc_executor::wasmi","Deserialized module prepared for instantiation.",null,null],[3,"FuncInstance","","Runtime representation of a function.",null,null],[3,"FuncInvocation","","A resumable invocation handle. This struct is returned by …",null,null],[3,"FuncRef","","Reference to a function (See <code>FuncInstance</code> for details).",null,null],[4,"ResumableError","","A resumable invocation error.",null,null],[13,"Trap","","Trap happened.",67,null],[13,"NotResumable","","The invocation is not resumable.",67,null],[13,"AlreadyStarted","","The invocation has already been started.",67,null],[3,"GlobalInstance","","Runtime representation of a global variable (or <code>global</code> …",null,null],[3,"GlobalRef","","Reference to a global variable (See <code>GlobalInstance</code> for …",null,null],[8,"Externals","","Trait that allows to implement host functions.",null,null],[10,"invoke_index","","Perform invoke of a host function by specified <code>index</code>.",68,[[["runtimeargs",3]],[["result",4],["option",4],["trap",3]]]],[8,"HostError","","Trait that allows the host to return custom error.",null,null],[3,"NopExternals","","Implementation of <code>Externals</code> that just traps on …",null,null],[3,"RuntimeArgs","","Wrapper around slice of <code>RuntimeValue</code> for using it as an …",null,null],[8,"ImportResolver","","Resolver of a module\'s dependencies.",null,null],[10,"resolve_func","","Resolve a function.",69,[[["signature",3]],[["funcref",3],["error",4],["result",4]]]],[10,"resolve_global","","Resolve a global variable.",69,[[["globaldescriptor",3]],[["result",4],["globalref",3],["error",4]]]],[10,"resolve_memory","","Resolve a memory.",69,[[["memorydescriptor",3]],[["result",4],["memoryref",3],["error",4]]]],[10,"resolve_table","","Resolve a table.",69,[[["tabledescriptor",3]],[["result",4],["tableref",3],["error",4]]]],[3,"ImportsBuilder","","Convenience builder of <code>ImportResolver</code>.",null,null],[8,"ModuleImportResolver","","Version of <code>ImportResolver</code> specialized for a single module.",null,null],[11,"resolve_func","","Resolve a function.",70,[[["signature",3]],[["funcref",3],["error",4],["result",4]]]],[11,"resolve_global","","Resolve a global variable.",70,[[["globaldescriptor",3]],[["result",4],["globalref",3],["error",4]]]],[11,"resolve_memory","","Resolve a memory.",70,[[["memorydescriptor",3]],[["result",4],["memoryref",3],["error",4]]]],[11,"resolve_table","","Resolve a table.",70,[[["tabledescriptor",3]],[["result",4],["tableref",3],["error",4]]]],[3,"MemoryInstance","","Runtime representation of a linear memory (or <code>memory</code> for …",null,null],[3,"MemoryRef","","Reference to a memory (See <code>MemoryInstance</code> for details).",null,null],[17,"LINEAR_MEMORY_PAGE_SIZE","","Size of a page of linear memory - 64KiB.",null,null],[4,"ExternVal","","An external value is the runtime representation of an …",null,null],[13,"Func","","Function.",71,null],[13,"Table","","Table.",71,null],[13,"Memory","","Memory.",71,null],[13,"Global","","Global.",71,null],[3,"ModuleInstance","","A module instance is the runtime representation of a …",null,null],[3,"ModuleRef","","Reference to a <code>ModuleInstance</code>.",null,null],[3,"NotStartedModuleRef","","Mostly instantiated <code>ModuleRef</code>.",null,null],[3,"StackRecycler","","Used to recycle stacks instead of allocating them …",null,null],[17,"DEFAULT_CALL_STACK_LIMIT","","Maximum number of levels on the call stack.",null,null],[17,"DEFAULT_VALUE_STACK_LIMIT","","Maximum number of bytes on the value stack.",null,null],[3,"TableInstance","","Runtime representation of a table.",null,null],[3,"TableRef","","Reference to a table (See <code>TableInstance</code> for details).",null,null],[3,"GlobalDescriptor","","Description of a global variable.",null,null],[3,"MemoryDescriptor","","Description of a linear memory.",null,null],[3,"Signature","","Signature of a function.",null,null],[3,"TableDescriptor","","Description of a table.",null,null],[4,"ValueType","","Type of a value.",null,null],[13,"I32","","32-bit signed or unsigned integer.",72,null],[13,"I64","","64-bit signed or unsigned integer.",72,null],[13,"F32","","32-bit IEEE 754-2008 floating point number.",72,null],[13,"F64","","64-bit IEEE 754-2008 floating point number.",72,null],[4,"ValueError","","Error for <code>LittleEndianConvert</code>",null,null],[13,"InvalidLittleEndianBuffer","","The buffer is too short for the type being deserialized",73,null],[8,"FromRuntimeValue","","Trait for creating value from a <code>RuntimeValue</code>.",null,null],[10,"from_runtime_value","","Create a value of type <code>Self</code> from a given <code>RuntimeValue</code>.",74,[[["runtimevalue",4]],["option",4]]],[8,"LittleEndianConvert","","Convert from and to little endian.",null,null],[10,"into_little_endian","","Convert to little endian buffer.",75,[[]]],[10,"from_little_endian","","Convert from little endian buffer.",75,[[],[["error",4],["result",4]]]],[4,"RuntimeValue","","Runtime representation of a value.",null,null],[13,"I32","","Value of 32-bit signed or unsigned integer.",76,null],[13,"I64","","Value of 64-bit signed or unsigned integer.",76,null],[13,"F32","","Value of 32-bit IEEE 754-2008 floating point number.",76,null],[13,"F64","","Value of 64-bit IEEE 754-2008 floating point number.",76,null],[5,"with_externalities_safe","node_testing::client::sc_executor","Set up the externalities and safe calling environment to …",null,[[["externalities",8]],[["result",4],["error",4]]]],[3,"NativeExecutor","","A generic <code>CodeExecutor</code> implementation that uses a …",null,null],[3,"WasmExecutor","","An abstraction over Wasm code executor. Supports …",null,null],[8,"NativeExecutionDispatch","","Delegate for dispatching a CodeExecutor call.",null,null],[16,"ExtendHostFunctions","","Host functions for custom runtime interfaces that should …",77,null],[10,"dispatch","","Dispatch a method in the runtime.",77,[[["externalities",8]],[["result",4],["vec",3],["error",4]]]],[10,"native_version","","Provide native runtime version.",77,[[],["nativeversion",3]]],[3,"RuntimeVersion","","Runtime version. This should not be thought of as classic …",null,null],[12,"spec_name","","Identifies the different Substrate runtimes. There\'ll be …",78,null],[12,"impl_name","","Name of the implementation of the spec. This is of little …",78,null],[12,"authoring_version","","<code>authoring_version</code> is the version of the authorship …",78,null],[12,"spec_version","","Version of the runtime specification. A full-node will …",78,null],[12,"impl_version","","Version of the implementation of the specification. Nodes …",78,null],[12,"apis","","List of supported API \\\"features\\\" along with their …",78,null],[12,"transaction_version","","All existing dispatches are fully compatible when this …",78,null],[3,"NativeVersion","","",null,null],[12,"runtime_version","","Basic runtime version info.",79,null],[12,"can_author_with","","Authoring runtimes that this native runtime supports.",79,null],[8,"Codec","","Trait that allows zero-copy read/write of …",null,null],[8,"Externalities","","The Substrate externalities.",null,null],[10,"set_offchain_storage","","Write a key value pair to the offchain storage database.",80,[[["option",4]]]],[10,"storage","","Read runtime storage.",80,[[],[["vec",3],["option",4]]]],[10,"storage_hash","","Get storage value hash.",80,[[],[["vec",3],["option",4]]]],[10,"child_storage_hash","","Get child storage value hash.",80,[[["childinfo",4]],[["vec",3],["option",4]]]],[10,"child_storage","","Read child runtime storage.",80,[[["childinfo",4]],[["vec",3],["option",4]]]],[11,"set_storage","","Set storage entry <code>key</code> of current contract being called …",80,[[["global",3],["vec",3]]]],[11,"set_child_storage","","Set child storage entry <code>key</code> of current contract being …",80,[[["childinfo",4],["global",3],["vec",3]]]],[11,"clear_storage","","Clear a storage entry (<code>key</code>) of current contract being …",80,[[]]],[11,"clear_child_storage","","Clear a child storage entry (<code>key</code>) of current contract …",80,[[["childinfo",4]]]],[11,"exists_storage","","Whether a storage entry exists.",80,[[]]],[11,"exists_child_storage","","Whether a child storage entry exists.",80,[[["childinfo",4]]]],[10,"next_storage_key","","Returns the key immediately following the given key, if …",80,[[],[["vec",3],["option",4]]]],[10,"next_child_storage_key","","Returns the key immediately following the given key, if …",80,[[["childinfo",4]],[["vec",3],["option",4]]]],[10,"kill_child_storage","","Clear an entire child storage.",80,[[["childinfo",4],["option",4]]]],[10,"clear_prefix","","Clear storage entries which keys are start with the given …",80,[[]]],[10,"clear_child_prefix","","Clear child storage entries which keys are start with the …",80,[[["childinfo",4]]]],[10,"place_storage","","Set or clear a storage entry (<code>key</code>) of current contract …",80,[[["global",3],["vec",3],["option",4]]]],[10,"place_child_storage","","Set or clear a child storage entry.",80,[[["childinfo",4],["global",3],["vec",3],["option",4]]]],[10,"storage_root","","Get the trie root of the current storage map.",80,[[],[["global",3],["vec",3]]]],[10,"child_storage_root","","Get the trie root of a child storage map.",80,[[["childinfo",4]],[["global",3],["vec",3]]]],[10,"storage_append","","Append storage item.",80,[[["global",3],["vec",3]]]],[10,"storage_changes_root","","Get the changes trie root of the current storage overlay …",80,[[],[["result",4],["option",4]]]],[10,"storage_start_transaction","","Start a new nested transaction.",80,[[]]],[10,"storage_rollback_transaction","","Rollback the last transaction started by …",80,[[],["result",4]]],[10,"storage_commit_transaction","","Commit the last transaction started by …",80,[[],["result",4]]],[10,"wipe","","…",80,[[]]],[10,"commit","","…",80,[[]]],[10,"read_write_count","","…",80,[[]]],[10,"reset_read_write_count","","…",80,[[]]],[10,"get_whitelist","","…",80,[[],[["trackedstoragekey",3],["vec",3],["global",3]]]],[10,"set_whitelist","","…",80,[[["trackedstoragekey",3],["vec",3],["global",3]]]],[8,"CallInWasm","","Something that can call a method in a WASM blob.",null,null],[10,"call_in_wasm","","Call the given <code>method</code> in the given <code>wasm_blob</code> using …",81,[[["externalities",8],["vec",3],["option",4],["missinghostfunctions",4]],[["result",4],["vec",3],["string",3]]]],[6,"Result","node_testing::client::sc_executor::sp_wasm_interface","Result type used by traits in this crate.",null,null],[4,"ValueType","","Value types supported by Substrate on the boundary …",null,null],[13,"I32","","An <code>i32</code> value type.",82,null],[13,"I64","","An <code>i64</code> value type.",82,null],[13,"F32","","An <code>f32</code> value type.",82,null],[13,"F64","","An <code>f64</code> value type.",82,null],[4,"Value","","Values supported by Substrate on the boundary between …",null,null],[13,"I32","","A 32-bit integer.",83,null],[13,"I64","","A 64-bit integer.",83,null],[13,"F32","","A 32-bit floating-point number stored as raw bit pattern.",83,null],[13,"F64","","A 64-bit floating-point number stored as raw bit pattern.",83,null],[8,"PointerType","","Something that can be wrapped in a wasm <code>Pointer</code>.",null,null],[18,"SIZE","","The size of the type in wasm.",84,null],[3,"Pointer","","Type to represent a pointer in wasm at the host.",null,null],[6,"WordSize","","The word size used in wasm. Normally known as <code>usize</code> in …",null,null],[3,"Signature","","The Signature of a function",null,null],[12,"args","","The arguments of a function.",85,null],[12,"return_value","","The optional return value of a function.",85,null],[8,"MaybeRefUnwindSafe","","A trait that requires <code>RefUnwindSafe</code> when <code>feature = std</code>.",null,null],[8,"Function","","Something that provides a function implementation on the …",null,null],[10,"name","","Returns the name of this function.",86,[[]]],[10,"signature","","Returns the signature of this function.",86,[[],["signature",3]]],[10,"execute","","Execute this function with the given arguments.",86,[[["iterator",8],["functioncontext",8]],[["result",4],["option",4],["string",3]]]],[8,"FunctionContext","","Context used by <code>Function</code> to interact with the allocator …",null,null],[11,"read_memory","","Read memory from <code>address</code> into a vector.",87,[[["pointer",3]],[["result",4],["vec",3],["string",3]]]],[10,"read_memory_into","","Read memory into the given <code>dest</code> buffer from <code>address</code>.",87,[[["pointer",3]],[["string",3],["result",4]]]],[10,"write_memory","","Write the given data at <code>address</code> into the memory.",87,[[["pointer",3]],[["string",3],["result",4]]]],[10,"allocate_memory","","Allocate a memory instance of <code>size</code> bytes.",87,[[],[["result",4],["pointer",3],["string",3]]]],[10,"deallocate_memory","","Deallocate a given memory instance.",87,[[["pointer",3]],[["string",3],["result",4]]]],[10,"sandbox","","Provides access to the sandbox.",87,[[],["sandbox",8]]],[6,"MemoryId","","Sandbox memory identifier.",null,null],[8,"Sandbox","","Something that provides access to the sandbox.",null,null],[10,"memory_get","","Get sandbox memory from the <code>memory_id</code> instance at <code>offset</code> …",88,[[["pointer",3]],[["result",4],["string",3]]]],[10,"memory_set","","Set sandbox memory from the given value.",88,[[["pointer",3]],[["result",4],["string",3]]]],[10,"memory_teardown","","Delete a memory instance.",88,[[],[["string",3],["result",4]]]],[10,"memory_new","","Create a new memory instance with the given <code>initial</code> size …",88,[[],[["result",4],["string",3]]]],[10,"invoke","","Invoke an exported function by a name.",88,[[["pointer",3]],[["result",4],["string",3]]]],[10,"instance_teardown","","Delete a sandbox instance.",88,[[],[["string",3],["result",4]]]],[10,"instance_new","","Create a new sandbox instance.",88,[[],[["result",4],["string",3]]]],[10,"get_global_val","","Get the value from a global with the given <code>name</code>. The …",88,[[],[["result",4],["option",4],["string",3]]]],[8,"HostFunctions","","Something that provides implementations for host …",null,null],[10,"host_functions","","Returns the host functions <code>Self</code> provides.",89,[[],[["vec",3],["function",8],["global",3]]]],[8,"IntoValue","","Something that can be converted into a wasm compatible …",null,null],[18,"VALUE_TYPE","","The type of the value in wasm.",90,null],[10,"into_value","","Convert <code>self</code> into a wasm <code>Value</code>.",90,[[],["value",4]]],[8,"TryFromValue","","Something that can may be created from a wasm <code>Value</code>.",null,null],[10,"try_from_value","","Try to convert the given <code>Value</code> into <code>Self</code>.",91,[[["value",4]],["option",4]]],[8,"WritePrimitive","","Something that can write a primitive to wasm memory …",null,null],[10,"write_primitive","","Write the given value <code>t</code> to the given memory location <code>ptr</code>.",92,[[["pointer",3]],[["string",3],["result",4]]]],[8,"ReadPrimitive","","Something that can read a primitive from a wasm memory …",null,null],[10,"read_primitive","","Read a primitive from the given memory location <code>ptr</code>.",93,[[["pointer",3]],[["result",4],["string",3]]]],[4,"ReturnValue","","Typed value that can be returned from a function.",null,null],[13,"Unit","","For returning nothing.",94,null],[13,"Value","","For returning some concrete value.",94,null],[4,"WasmExecutionMethod","node_testing::client::sc_executor","Specification of different methods of executing the …",null,null],[13,"Interpreted","","Uses the Wasmi interpreter.",58,null],[13,"Compiled","","Uses the Wasmtime compiled runtime.",58,null],[0,"error","","Rust executor possible errors.",null,null],[6,"Result","node_testing::client::sc_executor::error","Result type alias.",null,null],[4,"Error","","Error type.",null,null],[13,"InvalidData","","",95,null],[13,"Trap","","",95,null],[13,"Wasmi","","",95,null],[13,"ApiError","","",95,null],[13,"MethodNotFound","","",95,null],[13,"InvalidCode","","",95,null],[13,"VersionInvalid","","",95,null],[13,"Externalities","","",95,null],[13,"InvalidIndex","","",95,null],[13,"InvalidReturn","","",95,null],[13,"Runtime","","",95,null],[13,"RuntimePanicked","","",95,null],[13,"InvalidMemoryReference","","",95,null],[13,"HeapBaseNotFoundOrInvalid","","",95,null],[13,"RuntimeHasStartFn","","",95,null],[13,"Other","","",95,null],[13,"Allocator","","",95,null],[13,"FunctionExecution","","",95,null],[13,"NoTable","","",95,null],[13,"NoTableEntryWithIndex","","",95,null],[13,"TableElementIsNotAFunction","","",95,null],[13,"FunctionRefIsNull","","",95,null],[13,"RuntimeConstruction","","",95,null],[13,"SharedMemUnsupported","","",95,null],[13,"ImportedGlobalsUnsupported","","",95,null],[13,"InitializerHasTooManyExpressions","","",95,null],[13,"InvalidInitializerExpression","","",95,null],[4,"WasmError","","Type for errors occurring during Wasm runtime …",null,null],[13,"CodeNotFound","","Code could not be read from the state.",96,null],[13,"ApplySnapshotFailed","","Failure to reinitialize runtime instance from snapshot.",96,null],[13,"ErasingFailed","","Failure to erase the wasm memory.",96,null],[13,"InvalidModule","","Wasm code failed validation.",96,null],[13,"CantDeserializeWasm","","Wasm code could not be deserialized.",96,null],[13,"InvalidMemory","","The module does not export a linear memory named <code>memory</code>.",96,null],[13,"InvalidHeapPages","","The number of heap pages requested is disallowed by the …",96,null],[13,"Instantiation","","Instantiation error.",96,null],[13,"Other","","Other error happenend.",96,null],[0,"sandbox","node_testing::client::sc_executor","This module implements sandboxing support in the runtime.",null,null],[3,"SupervisorFuncIndex","node_testing::client::sc_executor::sandbox","Index of a function inside the supervisor.",null,null],[8,"SandboxCapabilities","","This trait encapsulates sandboxing capabilities.",null,null],[16,"SupervisorFuncRef","","Represents a function reference into the supervisor …",97,null],[10,"invoke","","Invoke a function in the supervisor environment.",97,[[["pointer",3],["supervisorfuncindex",3]],[["result",4],["error",4]]]],[3,"GuestExternals","","Implementation of <code>Externals</code> that allows execution of …",null,null],[3,"SandboxInstance","","Sandboxed instance of a wasm module.",null,null],[4,"InstantiationError","","Error occurred during instantiation of a sandboxed module.",null,null],[13,"EnvironmentDefinitionCorrupted","","Something wrong with the environment definition. It …",98,null],[13,"ModuleDecoding","","Provided module isn\'t recognized as a valid webassembly …",98,null],[13,"Instantiation","","Module is a well-formed webassembly binary but could not …",98,null],[13,"StartTrapped","","Module is well-formed, instantiated and linked, but while …",98,null],[3,"GuestEnvironment","","An environment in which the guest module is instantiated.",null,null],[3,"UnregisteredInstance","","An unregistered sandboxed instance.",null,null],[5,"instantiate","","Instantiate a guest module and return it\'s index in the …",null,[[["guestenvironment",3]],[["result",4],["unregisteredinstance",3],["instantiationerror",4]]]],[3,"Store","","This struct keeps track of all sandboxed components.",null,null],[4,"AccountKeyring","node_testing::client","Set of test accounts.",null,null],[13,"Alice","","",99,null],[13,"Bob","","",99,null],[13,"Charlie","","",99,null],[13,"Dave","","",99,null],[13,"Eve","","",99,null],[13,"Ferdie","","",99,null],[13,"One","","",99,null],[13,"Two","","",99,null],[4,"Ed25519Keyring","","Set of test accounts.",null,null],[13,"Alice","","",100,null],[13,"Bob","","",100,null],[13,"Charlie","","",100,null],[13,"Dave","","",100,null],[13,"Eve","","",100,null],[13,"Ferdie","","",100,null],[13,"One","","",100,null],[13,"Two","","",100,null],[4,"Sr25519Keyring","","Set of test accounts.",null,null],[13,"Alice","","",99,null],[13,"Bob","","",99,null],[13,"Charlie","","",99,null],[13,"Dave","","",99,null],[13,"Eve","","",99,null],[13,"Ferdie","","",99,null],[13,"One","","",99,null],[13,"Two","","",99,null],[6,"SyncCryptoStorePtr","","A pointer to a keystore.",null,null],[8,"SyncCryptoStore","","Sync version of the CryptoStore",null,null],[10,"sr25519_public_keys","","Returns all sr25519 public keys for the given key type.",101,[[["keytypeid",3]],[["global",3],["public",3],["vec",3]]]],[10,"sr25519_generate_new","","Generate a new sr25519 key pair for the given key type …",101,[[["option",4],["keytypeid",3]],[["error",4],["result",4],["public",3]]]],[10,"ed25519_public_keys","","Returns all ed25519 public keys for the given key type.",101,[[["keytypeid",3]],[["vec",3],["public",3],["global",3]]]],[10,"ed25519_generate_new","","Generate a new ed25519 key pair for the given key type …",101,[[["option",4],["keytypeid",3]],[["public",3],["error",4],["result",4]]]],[10,"ecdsa_public_keys","","Returns all ecdsa public keys for the given key type.",101,[[["keytypeid",3]],[["global",3],["public",3],["vec",3]]]],[10,"ecdsa_generate_new","","Generate a new ecdsa key pair for the given key type and …",101,[[["option",4],["keytypeid",3]],[["error",4],["result",4],["public",3]]]],[10,"insert_unknown","","Insert a new key. This doesn\'t require any known of the …",101,[[["keytypeid",3]],["result",4]]],[10,"supported_keys","","Find intersection between provided keys and supported keys",101,[[["vec",3],["cryptotypepublicpair",3],["global",3],["keytypeid",3]],[["result",4],["error",4],["vec",3]]]],[11,"keys","","List all supported keys",101,[[["keytypeid",3]],[["result",4],["error",4],["vec",3]]]],[10,"has_keys","","Checks if the private keys for the given public key and …",101,[[]]],[10,"sign_with","","Sign with key",101,[[["cryptotypepublicpair",3],["keytypeid",3]],[["error",4],["result",4],["vec",3]]]],[11,"sign_with_any","","Sign with any key",101,[[["vec",3],["cryptotypepublicpair",3],["global",3],["keytypeid",3]],[["error",4],["result",4]]]],[11,"sign_with_all","","Sign with all keys",101,[[["vec",3],["cryptotypepublicpair",3],["global",3],["keytypeid",3]],[["result",4],["vec",3]]]],[10,"sr25519_vrf_sign","","Generate VRF signature for given transcript data.",101,[[["vrftranscriptdata",3],["public",3],["keytypeid",3]],[["error",4],["vrfsignature",3],["result",4]]]],[3,"Storage","","Struct containing data needed for a storage.",null,null],[12,"top","","Top trie storage data.",102,null],[12,"children_default","","Children trie storage data. The key does not including …",102,null],[3,"StorageChild","","Child trie storage data.",null,null],[12,"data","","Child data for storage.",103,null],[12,"child_info","","Associated child info for a child trie.",103,null],[4,"ExecutionStrategy","","Strategy for executing a call into the runtime.",null,null],[13,"NativeWhenPossible","","Execute with the native equivalent if it is compatible …",104,null],[13,"AlwaysWasm","","Use the given wasm module.",104,null],[13,"Both","","Run with both the wasm and the native variant (if …",104,null],[13,"NativeElseWasm","","First native, then if that fails or is not possible, wasm.",104,null],[3,"RpcHandlers","","RPC handlers that can perform RPC queries.",null,null],[3,"RpcSession","","An RPC session. Used to perform in-memory RPC queries …",null,null],[0,"client","","Substrate Client and associated logic.",null,null],[0,"genesis","node_testing::client::client","Tool for creating the genesis block.",null,null],[5,"construct_genesis_block","node_testing::client::client::genesis","Create a genesis block, given the initial storage.",null,[[]]],[0,"light","node_testing::client::client","Light client utilities.",null,null],[5,"new_light","node_testing::client::client::light","Create an instance of light client.",null,[[["buildstorage",8],["registry",3],["option",4],["box",3],["arc",3],["backend",3],["global",3],["spawnnamed",8]],[["client",3],["result",4],["error",4]]]],[3,"LocalCallExecutor","node_testing::client::client","Call executor that executes methods locally, querying all …",null,null],[3,"Client","","Substrate Client",null,null],[3,"ClientConfig","","Relevant client configuration items relevant for the …",null,null],[12,"offchain_worker_enabled","","Enable the offchain worker db.",105,null],[12,"offchain_indexing_api","","If true, allows access from the runtime to write into …",105,null],[12,"wasm_runtime_overrides","","Path where WASM files exist to override the on-chain WASM.",105,null],[5,"new_with_backend","","Create a client with the explicitly provided backend. …",null,[[["registry",3],["arc",3],["option",4],["box",3],["option",4],["arc",3],["clientconfig",3],["global",3],["spawnnamed",8]],[["client",3],["result",4],["error",4]]]],[5,"new_in_mem","","Create an instance of in-memory client.",null,[[["registry",3],["arc",3],["option",4],["box",3],["option",4],["clientconfig",3],["global",3],["spawnnamed",8]],[["error",4],["result",4],["client",3]]]],[8,"ClientExt","node_testing::client","Extension trait for a test client.",null,null],[10,"finalize_block","","Finalize a block.",7,[[["vec",3],["option",4],["blockid",4]],[["error",4],["result",4]]]],[10,"genesis_hash","","Returns hash of the genesis block.",7,[[]]],[8,"ClientBlockImportExt","","Extension trait for a test client around block importing.",null,null],[10,"import","","Import block to the chain. No finality.",8,[[["blockorigin",4]],[["result",4],["error",4]]]],[10,"import_as_best","","Import a block and make it our best block if possible.",8,[[["blockorigin",4]],[["result",4],["error",4]]]],[10,"import_as_final","","Import a block and finalize it.",8,[[["blockorigin",4]],[["result",4],["error",4]]]],[10,"import_justified","","Import block with justification, finalizes block.",8,[[["global",3],["vec",3],["blockorigin",4]],[["result",4],["error",4]]]],[6,"Executor","","Call executor for <code>node-runtime</code> <code>TestClient</code>.",null,null],[6,"Backend","","Default backend type.",null,null],[6,"Client","","Test client type.",null,null],[6,"Transaction","","Transaction for node-runtime.",null,null],[3,"GenesisParameters","","Genesis configuration parameters for <code>TestClient</code>.",null,null],[8,"TestClientBuilderExt","","A <code>test-runtime</code> extensions to <code>TestClientBuilder</code>.",null,null],[10,"new","","Create test client builder.",106,[[]]],[10,"build","","Build the test client.",106,[[],["client",6]]],[0,"genesis","node_testing","Genesis Configuration.",null,null],[5,"config","node_testing::genesis","Create genesis runtime configuration for tests.",null,[[["option",4]],["genesisconfig",3]]],[5,"config_endowed","","Create genesis runtime configuration for tests with some …",null,[[["vec",3],["option",4],["accountid",6]],["genesisconfig",3]]],[0,"keyring","node_testing","Test accounts.",null,null],[5,"alice","node_testing::keyring","Alice\'s account id.",null,[[],["accountid",6]]],[5,"bob","","Bob\'s account id.",null,[[],["accountid",6]]],[5,"charlie","","Charlie\'s account id.",null,[[],["accountid",6]]],[5,"dave","","Dave\'s account id.",null,[[],["accountid",6]]],[5,"eve","","Eve\'s account id.",null,[[],["accountid",6]]],[5,"ferdie","","Ferdie\'s account id.",null,[[],["accountid",6]]],[5,"to_session_keys","","Convert keyrings into <code>SessionKeys</code>.",null,[[["ed25519keyring",4],["sr25519keyring",4]],["sessionkeys",3]]],[5,"signed_extra","","Returns transaction extra.",null,[[["balance",6],["index",6]],["signedextra",6]]],[5,"sign","","Sign given <code>CheckedExtrinsic</code>.",null,[[["checkedextrinsic",6]],["uncheckedextrinsic",6]]],[11,"from","node_testing::bench","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"unique_saturated_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"__clone_box","","",4,[[["private",3]]]],[11,"from_ref","","",4,[[]]],[11,"into_ref","","",4,[[]]],[11,"from_mut","","",4,[[]]],[11,"into_mut","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"to_subset","","",4,[[],["option",4]]],[11,"is_in_subset","","",4,[[]]],[11,"to_subset_unchecked","","",4,[[]]],[11,"from_subset","","",4,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"unique_saturated_into","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"to_subset","","",2,[[],["option",4]]],[11,"is_in_subset","","",2,[[]]],[11,"to_subset_unchecked","","",2,[[]]],[11,"from_subset","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"__clone_box","","",0,[[["private",3]]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"inlined_clone","","",0,[[]]],[11,"to_subset","","",0,[[],["option",4]]],[11,"is_in_subset","","",0,[[]]],[11,"to_subset_unchecked","","",0,[[]]],[11,"from_subset","","",0,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"unchecked_into","","",107,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",107,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",107,[[]]],[11,"unique_saturated_into","","",107,[[]]],[11,"vzip","","",107,[[]]],[11,"__clone_box","","",107,[[["private",3]]]],[11,"from_ref","","",107,[[]]],[11,"into_ref","","",107,[[]]],[11,"from_mut","","",107,[[]]],[11,"into_mut","","",107,[[]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"to_subset","","",107,[[],["option",4]]],[11,"is_in_subset","","",107,[[]]],[11,"to_subset_unchecked","","",107,[[]]],[11,"from_subset","","",107,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"inlined_clone","","",1,[[]]],[11,"to_subset","","",1,[[],["option",4]]],[11,"is_in_subset","","",1,[[]]],[11,"to_subset_unchecked","","",1,[[]]],[11,"from_subset","","",1,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"unchecked_into","","",108,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",108,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",108,[[]]],[11,"unique_saturated_into","","",108,[[]]],[11,"vzip","","",108,[[]]],[11,"__clone_box","","",108,[[["private",3]]]],[11,"from_ref","","",108,[[]]],[11,"into_ref","","",108,[[]]],[11,"from_mut","","",108,[[]]],[11,"into_mut","","",108,[[]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"to_subset","","",108,[[],["option",4]]],[11,"is_in_subset","","",108,[[]]],[11,"to_subset_unchecked","","",108,[[]]],[11,"from_subset","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"into_iter","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"unchecked_into","","",109,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",109,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",109,[[]]],[11,"unique_saturated_into","","",109,[[]]],[11,"vzip","","",109,[[]]],[11,"from_ref","","",109,[[]]],[11,"into_ref","","",109,[[]]],[11,"from_mut","","",109,[[]]],[11,"into_mut","","",109,[[]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"to_subset","","",109,[[],["option",4]]],[11,"is_in_subset","","",109,[[]]],[11,"to_subset_unchecked","","",109,[[]]],[11,"from_subset","","",109,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"unique_saturated_into","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"to_subset","","",3,[[],["option",4]]],[11,"is_in_subset","","",3,[[]]],[11,"to_subset_unchecked","","",3,[[]]],[11,"from_subset","","",3,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"unchecked_into","","",5,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[]]],[11,"unique_saturated_into","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"__clone_box","","",5,[[["private",3]]]],[11,"from_ref","","",5,[[]]],[11,"into_ref","","",5,[[]]],[11,"from_mut","","",5,[[]]],[11,"into_mut","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"to_subset","","",5,[[],["option",4]]],[11,"is_in_subset","","",5,[[]]],[11,"to_subset_unchecked","","",5,[[]]],[11,"from_subset","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"unchecked_into","","",6,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[]]],[11,"unique_saturated_into","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from_ref","","",6,[[]]],[11,"into_ref","","",6,[[]]],[11,"from_mut","","",6,[[]]],[11,"into_mut","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"to_subset","","",6,[[],["option",4]]],[11,"is_in_subset","","",6,[[]]],[11,"to_subset_unchecked","","",6,[[]]],[11,"from_subset","","",6,[[]]],[11,"from","node_testing::client","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"unchecked_into","","",110,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",110,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",110,[[]]],[11,"unique_saturated_into","","",110,[[]]],[11,"vzip","","",110,[[]]],[11,"from_ref","","",110,[[]]],[11,"into_ref","","",110,[[]]],[11,"from_mut","","",110,[[]]],[11,"into_mut","","",110,[[]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"to_subset","","",110,[[],["option",4]]],[11,"is_in_subset","","",110,[[]]],[11,"to_subset_unchecked","","",110,[[]]],[11,"from_subset","","",110,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"unchecked_into","","",10,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[]]],[11,"unique_saturated_into","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from_ref","","",10,[[]]],[11,"into_ref","","",10,[[]]],[11,"from_mut","","",10,[[]]],[11,"into_mut","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"to_subset","","",10,[[],["option",4]]],[11,"is_in_subset","","",10,[[]]],[11,"to_subset_unchecked","","",10,[[]]],[11,"from_subset","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"unchecked_into","","",11,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[]]],[11,"unique_saturated_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from_ref","","",11,[[]]],[11,"into_ref","","",11,[[]]],[11,"from_mut","","",11,[[]]],[11,"into_mut","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"to_subset","","",11,[[],["option",4]]],[11,"is_in_subset","","",11,[[]]],[11,"to_subset_unchecked","","",11,[[]]],[11,"from_subset","","",11,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"unchecked_into","","",14,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[]]],[11,"unique_saturated_into","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"__clone_box","","",14,[[["private",3]]]],[11,"from_ref","","",14,[[]]],[11,"into_ref","","",14,[[]]],[11,"from_mut","","",14,[[]]],[11,"into_mut","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"to_subset","","",14,[[],["option",4]]],[11,"is_in_subset","","",14,[[]]],[11,"to_subset_unchecked","","",14,[[]]],[11,"from_subset","","",14,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"unchecked_into","","",111,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",111,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",111,[[]]],[11,"unique_saturated_into","","",111,[[]]],[11,"vzip","","",111,[[]]],[11,"from_ref","","",111,[[]]],[11,"into_ref","","",111,[[]]],[11,"from_mut","","",111,[[]]],[11,"into_mut","","",111,[[]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"to_subset","","",111,[[],["option",4]]],[11,"is_in_subset","","",111,[[]]],[11,"to_subset_unchecked","","",111,[[]]],[11,"from_subset","","",111,[[]]],[11,"from","node_testing::client::sc_client_db","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"unchecked_into","","",112,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",112,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",112,[[]]],[11,"unique_saturated_into","","",112,[[]]],[11,"vzip","","",112,[[]]],[11,"from_ref","","",112,[[]]],[11,"into_ref","","",112,[[]]],[11,"from_mut","","",112,[[]]],[11,"into_mut","","",112,[[]]],[11,"init","","",112,[[]]],[11,"deref","","",112,[[]]],[11,"deref_mut","","",112,[[]]],[11,"drop","","",112,[[]]],[11,"to_subset","","",112,[[],["option",4]]],[11,"is_in_subset","","",112,[[]]],[11,"to_subset_unchecked","","",112,[[]]],[11,"from_subset","","",112,[[]]],[11,"from","node_testing::client::sc_client_db::light","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"unchecked_into","","",113,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",113,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",113,[[]]],[11,"unique_saturated_into","","",113,[[]]],[11,"vzip","","",113,[[]]],[11,"from_ref","","",113,[[]]],[11,"into_ref","","",113,[[]]],[11,"from_mut","","",113,[[]]],[11,"into_mut","","",113,[[]]],[11,"init","","",113,[[]]],[11,"deref","","",113,[[]]],[11,"deref_mut","","",113,[[]]],[11,"drop","","",113,[[]]],[11,"to_subset","","",113,[[],["option",4]]],[11,"is_in_subset","","",113,[[]]],[11,"to_subset_unchecked","","",113,[[]]],[11,"from_subset","","",113,[[]]],[11,"from","node_testing::client::sc_client_db::offchain","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"unchecked_into","","",114,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",114,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",114,[[]]],[11,"unique_saturated_into","","",114,[[]]],[11,"vzip","","",114,[[]]],[11,"__clone_box","","",114,[[["private",3]]]],[11,"from_ref","","",114,[[]]],[11,"into_ref","","",114,[[]]],[11,"from_mut","","",114,[[]]],[11,"into_mut","","",114,[[]]],[11,"init","","",114,[[]]],[11,"deref","","",114,[[]]],[11,"deref_mut","","",114,[[]]],[11,"drop","","",114,[[]]],[11,"to_subset","","",114,[[],["option",4]]],[11,"is_in_subset","","",114,[[]]],[11,"to_subset_unchecked","","",114,[[]]],[11,"from_subset","","",114,[[]]],[11,"from","node_testing::client::sc_client_db::bench","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"unchecked_into","","",115,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",115,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",115,[[]]],[11,"unique_saturated_into","","",115,[[]]],[11,"vzip","","",115,[[]]],[11,"__clone_box","","",115,[[["private",3]]]],[11,"from_ref","","",115,[[]]],[11,"into_ref","","",115,[[]]],[11,"from_mut","","",115,[[]]],[11,"into_mut","","",115,[[]]],[11,"init","","",115,[[]]],[11,"deref","","",115,[[]]],[11,"deref_mut","","",115,[[]]],[11,"drop","","",115,[[]]],[11,"to_subset","","",115,[[],["option",4]]],[11,"is_in_subset","","",115,[[]]],[11,"to_subset_unchecked","","",115,[[]]],[11,"from_subset","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"unchecked_into","","",116,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",116,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",116,[[]]],[11,"unique_saturated_into","","",116,[[]]],[11,"vzip","","",116,[[]]],[11,"__clone_box","","",116,[[["private",3]]]],[11,"from_ref","","",116,[[]]],[11,"into_ref","","",116,[[]]],[11,"from_mut","","",116,[[]]],[11,"into_mut","","",116,[[]]],[11,"init","","",116,[[]]],[11,"deref","","",116,[[]]],[11,"deref_mut","","",116,[[]]],[11,"drop","","",116,[[]]],[11,"to_subset","","",116,[[],["option",4]]],[11,"is_in_subset","","",116,[[]]],[11,"to_subset_unchecked","","",116,[[]]],[11,"from_subset","","",116,[[]]],[11,"from","node_testing::client::sc_client_db","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"unchecked_into","","",117,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",117,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",117,[[]]],[11,"unique_saturated_into","","",117,[[]]],[11,"vzip","","",117,[[]]],[11,"inspect_state","","",117,[[]]],[11,"from_ref","","",117,[[]]],[11,"into_ref","","",117,[[]]],[11,"from_mut","","",117,[[]]],[11,"into_mut","","",117,[[]]],[11,"init","","",117,[[]]],[11,"deref","","",117,[[]]],[11,"deref_mut","","",117,[[]]],[11,"drop","","",117,[[]]],[11,"to_subset","","",117,[[],["option",4]]],[11,"is_in_subset","","",117,[[]]],[11,"to_subset_unchecked","","",117,[[]]],[11,"from_subset","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"unchecked_into","","",118,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",118,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",118,[[]]],[11,"unique_saturated_into","","",118,[[]]],[11,"vzip","","",118,[[]]],[11,"inspect_state","","",118,[[]]],[11,"from_ref","","",118,[[]]],[11,"into_ref","","",118,[[]]],[11,"from_mut","","",118,[[]]],[11,"into_mut","","",118,[[]]],[11,"init","","",118,[[]]],[11,"deref","","",118,[[]]],[11,"deref_mut","","",118,[[]]],[11,"drop","","",118,[[]]],[11,"to_subset","","",118,[[],["option",4]]],[11,"is_in_subset","","",118,[[]]],[11,"to_subset_unchecked","","",118,[[]]],[11,"from_subset","","",118,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"unchecked_into","","",15,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[]]],[11,"unique_saturated_into","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from_ref","","",15,[[]]],[11,"into_ref","","",15,[[]]],[11,"from_mut","","",15,[[]]],[11,"into_mut","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"to_subset","","",15,[[],["option",4]]],[11,"is_in_subset","","",15,[[]]],[11,"to_subset_unchecked","","",15,[[]]],[11,"from_subset","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"unchecked_into","","",16,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[]]],[11,"unique_saturated_into","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"__clone_box","","",16,[[["private",3]]]],[11,"from_ref","","",16,[[]]],[11,"into_ref","","",16,[[]]],[11,"from_mut","","",16,[[]]],[11,"into_mut","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"to_subset","","",16,[[],["option",4]]],[11,"is_in_subset","","",16,[[]]],[11,"to_subset_unchecked","","",16,[[]]],[11,"from_subset","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"unchecked_into","","",17,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[]]],[11,"unique_saturated_into","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"__clone_box","","",17,[[["private",3]]]],[11,"from_ref","","",17,[[]]],[11,"into_ref","","",17,[[]]],[11,"from_mut","","",17,[[]]],[11,"into_mut","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"to_subset","","",17,[[],["option",4]]],[11,"is_in_subset","","",17,[[]]],[11,"to_subset_unchecked","","",17,[[]]],[11,"from_subset","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"unchecked_into","","",18,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[]]],[11,"unique_saturated_into","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"__clone_box","","",18,[[["private",3]]]],[11,"from_ref","","",18,[[]]],[11,"into_ref","","",18,[[]]],[11,"from_mut","","",18,[[]]],[11,"into_mut","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"to_subset","","",18,[[],["option",4]]],[11,"is_in_subset","","",18,[[]]],[11,"to_subset_unchecked","","",18,[[]]],[11,"from_subset","","",18,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"unchecked_into","","",119,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",119,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",119,[[]]],[11,"unique_saturated_into","","",119,[[]]],[11,"vzip","","",119,[[]]],[11,"from_ref","","",119,[[]]],[11,"into_ref","","",119,[[]]],[11,"from_mut","","",119,[[]]],[11,"into_mut","","",119,[[]]],[11,"init","","",119,[[]]],[11,"deref","","",119,[[]]],[11,"deref_mut","","",119,[[]]],[11,"drop","","",119,[[]]],[11,"to_subset","","",119,[[],["option",4]]],[11,"is_in_subset","","",119,[[]]],[11,"to_subset_unchecked","","",119,[[]]],[11,"from_subset","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"unchecked_into","","",120,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",120,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",120,[[]]],[11,"unique_saturated_into","","",120,[[]]],[11,"vzip","","",120,[[]]],[11,"from_ref","","",120,[[]]],[11,"into_ref","","",120,[[]]],[11,"from_mut","","",120,[[]]],[11,"into_mut","","",120,[[]]],[11,"init","","",120,[[]]],[11,"deref","","",120,[[]]],[11,"deref_mut","","",120,[[]]],[11,"drop","","",120,[[]]],[11,"to_subset","","",120,[[],["option",4]]],[11,"is_in_subset","","",120,[[]]],[11,"to_subset_unchecked","","",120,[[]]],[11,"from_subset","","",120,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"is_clear","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"unchecked_into","","",22,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[]]],[11,"unique_saturated_into","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"__clone_box","","",22,[[["private",3]]]],[11,"equivalent","","",22,[[]]],[11,"from_ref","","",22,[[]]],[11,"into_ref","","",22,[[]]],[11,"from_mut","","",22,[[]]],[11,"into_mut","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"to_subset","","",22,[[],["option",4]]],[11,"is_in_subset","","",22,[[]]],[11,"to_subset_unchecked","","",22,[[]]],[11,"from_subset","","",22,[[]]],[11,"from","node_testing::client::sp_consensus::block_validation","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"unchecked_into","","",24,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[]]],[11,"unique_saturated_into","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"equivalent","","",24,[[]]],[11,"from_ref","","",24,[[]]],[11,"into_ref","","",24,[[]]],[11,"from_mut","","",24,[[]]],[11,"into_mut","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"to_subset","","",24,[[],["option",4]]],[11,"is_in_subset","","",24,[[]]],[11,"to_subset_unchecked","","",24,[[]]],[11,"from_subset","","",24,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"unchecked_into","","",121,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",121,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",121,[[]]],[11,"unique_saturated_into","","",121,[[]]],[11,"vzip","","",121,[[]]],[11,"from_ref","","",121,[[]]],[11,"into_ref","","",121,[[]]],[11,"from_mut","","",121,[[]]],[11,"into_mut","","",121,[[]]],[11,"init","","",121,[[]]],[11,"deref","","",121,[[]]],[11,"deref_mut","","",121,[[]]],[11,"drop","","",121,[[]]],[11,"to_subset","","",121,[[],["option",4]]],[11,"is_in_subset","","",121,[[]]],[11,"to_subset_unchecked","","",121,[[]]],[11,"from_subset","","",121,[[]]],[11,"from","node_testing::client::sp_consensus::offline_tracker","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"unchecked_into","","",122,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",122,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",122,[[]]],[11,"unique_saturated_into","","",122,[[]]],[11,"vzip","","",122,[[]]],[11,"from_ref","","",122,[[]]],[11,"into_ref","","",122,[[]]],[11,"from_mut","","",122,[[]]],[11,"into_mut","","",122,[[]]],[11,"init","","",122,[[]]],[11,"deref","","",122,[[]]],[11,"deref_mut","","",122,[[]]],[11,"drop","","",122,[[]]],[11,"to_subset","","",122,[[],["option",4]]],[11,"is_in_subset","","",122,[[]]],[11,"to_subset_unchecked","","",122,[[]]],[11,"from_subset","","",122,[[]]],[11,"from","node_testing::client::sp_consensus","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"unchecked_into","","",28,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",28,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",28,[[]]],[11,"unique_saturated_into","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from_ref","","",28,[[]]],[11,"into_ref","","",28,[[]]],[11,"from_mut","","",28,[[]]],[11,"into_mut","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"as_fail","","",28,[[],["fail",8]]],[11,"to_subset","","",28,[[],["option",4]]],[11,"is_in_subset","","",28,[[]]],[11,"to_subset_unchecked","","",28,[[]]],[11,"from_subset","","",28,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"unchecked_into","","",30,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",30,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",30,[[]]],[11,"unique_saturated_into","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"equivalent","","",30,[[]]],[11,"from_ref","","",30,[[]]],[11,"into_ref","","",30,[[]]],[11,"from_mut","","",30,[[]]],[11,"into_mut","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"to_subset","","",30,[[],["option",4]]],[11,"is_in_subset","","",30,[[]]],[11,"to_subset_unchecked","","",30,[[]]],[11,"from_subset","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"is_clear","","",31,[[]]],[11,"clear","","",31,[[]]],[11,"unchecked_into","","",31,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",31,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",31,[[]]],[11,"unique_saturated_into","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"equivalent","","",31,[[]]],[11,"from_ref","","",31,[[]]],[11,"into_ref","","",31,[[]]],[11,"from_mut","","",31,[[]]],[11,"into_mut","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"to_subset","","",31,[[],["option",4]]],[11,"is_in_subset","","",31,[[]]],[11,"to_subset_unchecked","","",31,[[]]],[11,"from_subset","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"unchecked_into","","",32,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",32,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",32,[[]]],[11,"unique_saturated_into","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"__clone_box","","",32,[[["private",3]]]],[11,"equivalent","","",32,[[]]],[11,"from_ref","","",32,[[]]],[11,"into_ref","","",32,[[]]],[11,"from_mut","","",32,[[]]],[11,"into_mut","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"inlined_clone","","",32,[[]]],[11,"to_subset","","",32,[[],["option",4]]],[11,"is_in_subset","","",32,[[]]],[11,"to_subset_unchecked","","",32,[[]]],[11,"from_subset","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"unchecked_into","","",33,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",33,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",33,[[]]],[11,"unique_saturated_into","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"__clone_box","","",33,[[["private",3]]]],[11,"equivalent","","",33,[[]]],[11,"from_ref","","",33,[[]]],[11,"into_ref","","",33,[[]]],[11,"from_mut","","",33,[[]]],[11,"into_mut","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"inlined_clone","","",33,[[]]],[11,"to_subset","","",33,[[],["option",4]]],[11,"is_in_subset","","",33,[[]]],[11,"to_subset_unchecked","","",33,[[]]],[11,"from_subset","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"unchecked_into","","",34,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",34,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",34,[[]]],[11,"unique_saturated_into","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"__clone_box","","",34,[[["private",3]]]],[11,"equivalent","","",34,[[]]],[11,"from_ref","","",34,[[]]],[11,"into_ref","","",34,[[]]],[11,"from_mut","","",34,[[]]],[11,"into_mut","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"to_subset","","",34,[[],["option",4]]],[11,"is_in_subset","","",34,[[]]],[11,"to_subset_unchecked","","",34,[[]]],[11,"from_subset","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"unchecked_into","","",35,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",35,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",35,[[]]],[11,"unique_saturated_into","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from_ref","","",35,[[]]],[11,"into_ref","","",35,[[]]],[11,"from_mut","","",35,[[]]],[11,"into_mut","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"to_subset","","",35,[[],["option",4]]],[11,"is_in_subset","","",35,[[]]],[11,"to_subset_unchecked","","",35,[[]]],[11,"from_subset","","",35,[[]]],[11,"from","node_testing::client::sp_consensus::import_queue::buffered_link","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"unchecked_into","","",123,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",123,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",123,[[]]],[11,"unique_saturated_into","","",123,[[]]],[11,"vzip","","",123,[[]]],[11,"__clone_box","","",123,[[["private",3]]]],[11,"from_ref","","",123,[[]]],[11,"into_ref","","",123,[[]]],[11,"from_mut","","",123,[[]]],[11,"into_mut","","",123,[[]]],[11,"init","","",123,[[]]],[11,"deref","","",123,[[]]],[11,"deref_mut","","",123,[[]]],[11,"drop","","",123,[[]]],[11,"to_subset","","",123,[[],["option",4]]],[11,"is_in_subset","","",123,[[]]],[11,"to_subset_unchecked","","",123,[[]]],[11,"from_subset","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"unchecked_into","","",124,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",124,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",124,[[]]],[11,"unique_saturated_into","","",124,[[]]],[11,"vzip","","",124,[[]]],[11,"from_ref","","",124,[[]]],[11,"into_ref","","",124,[[]]],[11,"from_mut","","",124,[[]]],[11,"into_mut","","",124,[[]]],[11,"init","","",124,[[]]],[11,"deref","","",124,[[]]],[11,"deref_mut","","",124,[[]]],[11,"drop","","",124,[[]]],[11,"to_subset","","",124,[[],["option",4]]],[11,"is_in_subset","","",124,[[]]],[11,"to_subset_unchecked","","",124,[[]]],[11,"from_subset","","",124,[[]]],[11,"from","node_testing::client::sp_consensus::import_queue","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"unchecked_into","","",38,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",38,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",38,[[]]],[11,"unique_saturated_into","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"__clone_box","","",38,[[["private",3]]]],[11,"equivalent","","",38,[[]]],[11,"from_ref","","",38,[[]]],[11,"into_ref","","",38,[[]]],[11,"from_mut","","",38,[[]]],[11,"into_mut","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"to_subset","","",38,[[],["option",4]]],[11,"is_in_subset","","",38,[[]]],[11,"to_subset_unchecked","","",38,[[]]],[11,"from_subset","","",38,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"unchecked_into","","",42,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",42,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",42,[[]]],[11,"unique_saturated_into","","",42,[[]]],[11,"vzip","","",42,[[]]],[11,"from_ref","","",42,[[]]],[11,"into_ref","","",42,[[]]],[11,"from_mut","","",42,[[]]],[11,"into_mut","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"to_subset","","",42,[[],["option",4]]],[11,"is_in_subset","","",42,[[]]],[11,"to_subset_unchecked","","",42,[[]]],[11,"from_subset","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"unchecked_into","","",43,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",43,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",43,[[]]],[11,"unique_saturated_into","","",43,[[]]],[11,"vzip","","",43,[[]]],[11,"from_ref","","",43,[[]]],[11,"into_ref","","",43,[[]]],[11,"from_mut","","",43,[[]]],[11,"into_mut","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"to_subset","","",43,[[],["option",4]]],[11,"is_in_subset","","",43,[[]]],[11,"to_subset_unchecked","","",43,[[]]],[11,"from_subset","","",43,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"unchecked_into","","",125,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",125,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",125,[[]]],[11,"unique_saturated_into","","",125,[[]]],[11,"vzip","","",125,[[]]],[11,"from_ref","","",125,[[]]],[11,"into_ref","","",125,[[]]],[11,"from_mut","","",125,[[]]],[11,"into_mut","","",125,[[]]],[11,"init","","",125,[[]]],[11,"deref","","",125,[[]]],[11,"deref_mut","","",125,[[]]],[11,"drop","","",125,[[]]],[11,"to_subset","","",125,[[],["option",4]]],[11,"is_in_subset","","",125,[[]]],[11,"to_subset_unchecked","","",125,[[]]],[11,"from_subset","","",125,[[]]],[11,"from","node_testing::client::sp_consensus::evaluation","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"unchecked_into","","",44,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",44,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",44,[[]]],[11,"unique_saturated_into","","",44,[[]]],[11,"vzip","","",44,[[]]],[11,"from_ref","","",44,[[]]],[11,"into_ref","","",44,[[]]],[11,"from_mut","","",44,[[]]],[11,"into_mut","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"as_fail","","",44,[[],["fail",8]]],[11,"to_subset","","",44,[[],["option",4]]],[11,"is_in_subset","","",44,[[]]],[11,"to_subset_unchecked","","",44,[[]]],[11,"from_subset","","",44,[[]]],[11,"from","node_testing::client::sp_consensus","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"unchecked_into","","",48,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",48,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",48,[[]]],[11,"unique_saturated_into","","",48,[[]]],[11,"vzip","","",48,[[]]],[11,"equivalent","","",48,[[]]],[11,"from_ref","","",48,[[]]],[11,"into_ref","","",48,[[]]],[11,"from_mut","","",48,[[]]],[11,"into_mut","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"to_subset","","",48,[[],["option",4]]],[11,"is_in_subset","","",48,[[]]],[11,"to_subset_unchecked","","",48,[[]]],[11,"from_subset","","",48,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"unchecked_into","","",50,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",50,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",50,[[]]],[11,"unique_saturated_into","","",50,[[]]],[11,"vzip","","",50,[[]]],[11,"from_ref","","",50,[[]]],[11,"into_ref","","",50,[[]]],[11,"from_mut","","",50,[[]]],[11,"into_mut","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"to_subset","","",50,[[],["option",4]]],[11,"is_in_subset","","",50,[[]]],[11,"to_subset_unchecked","","",50,[[]]],[11,"from_subset","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"unchecked_into","","",51,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",51,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",51,[[]]],[11,"unique_saturated_into","","",51,[[]]],[11,"vzip","","",51,[[]]],[11,"__clone_box","","",51,[[["private",3]]]],[11,"from_ref","","",51,[[]]],[11,"into_ref","","",51,[[]]],[11,"from_mut","","",51,[[]]],[11,"into_mut","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"to_subset","","",51,[[],["option",4]]],[11,"is_in_subset","","",51,[[]]],[11,"to_subset_unchecked","","",51,[[]]],[11,"from_subset","","",51,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"unchecked_into","","",126,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",126,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",126,[[]]],[11,"unique_saturated_into","","",126,[[]]],[11,"vzip","","",126,[[]]],[11,"__clone_box","","",126,[[["private",3]]]],[11,"from_ref","","",126,[[]]],[11,"into_ref","","",126,[[]]],[11,"from_mut","","",126,[[]]],[11,"into_mut","","",126,[[]]],[11,"init","","",126,[[]]],[11,"deref","","",126,[[]]],[11,"deref_mut","","",126,[[]]],[11,"drop","","",126,[[]]],[11,"to_subset","","",126,[[],["option",4]]],[11,"is_in_subset","","",126,[[]]],[11,"to_subset_unchecked","","",126,[[]]],[11,"from_subset","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"unchecked_into","","",127,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",127,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",127,[[]]],[11,"unique_saturated_into","","",127,[[]]],[11,"vzip","","",127,[[]]],[11,"__clone_box","","",127,[[["private",3]]]],[11,"from_ref","","",127,[[]]],[11,"into_ref","","",127,[[]]],[11,"from_mut","","",127,[[]]],[11,"into_mut","","",127,[[]]],[11,"init","","",127,[[]]],[11,"deref","","",127,[[]]],[11,"deref_mut","","",127,[[]]],[11,"drop","","",127,[[]]],[11,"to_subset","","",127,[[],["option",4]]],[11,"is_in_subset","","",127,[[]]],[11,"to_subset_unchecked","","",127,[[]]],[11,"from_subset","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"unchecked_into","","",128,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",128,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",128,[[]]],[11,"unique_saturated_into","","",128,[[]]],[11,"vzip","","",128,[[]]],[11,"__clone_box","","",128,[[["private",3]]]],[11,"from_ref","","",128,[[]]],[11,"into_ref","","",128,[[]]],[11,"from_mut","","",128,[[]]],[11,"into_mut","","",128,[[]]],[11,"init","","",128,[[]]],[11,"deref","","",128,[[]]],[11,"deref_mut","","",128,[[]]],[11,"drop","","",128,[[]]],[11,"to_subset","","",128,[[],["option",4]]],[11,"is_in_subset","","",128,[[]]],[11,"to_subset_unchecked","","",128,[[]]],[11,"from_subset","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"unchecked_into","","",129,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",129,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",129,[[]]],[11,"unique_saturated_into","","",129,[[]]],[11,"vzip","","",129,[[]]],[11,"__clone_box","","",129,[[["private",3]]]],[11,"from_ref","","",129,[[]]],[11,"into_ref","","",129,[[]]],[11,"from_mut","","",129,[[]]],[11,"into_mut","","",129,[[]]],[11,"init","","",129,[[]]],[11,"deref","","",129,[[]]],[11,"deref_mut","","",129,[[]]],[11,"drop","","",129,[[]]],[11,"to_subset","","",129,[[],["option",4]]],[11,"is_in_subset","","",129,[[]]],[11,"to_subset_unchecked","","",129,[[]]],[11,"from_subset","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"to_keyed_vec","","",130,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",130,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",130,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",130,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",130,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",130,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",130,[[]]],[11,"unique_saturated_into","","",130,[[]]],[11,"vzip","","",130,[[]]],[11,"__clone_box","","",130,[[["private",3]]]],[11,"blake2_128","","",130,[[]]],[11,"blake2_256","","",130,[[]]],[11,"blake2_128_concat","","",130,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",130,[[]]],[11,"twox_256","","",130,[[]]],[11,"twox_64_concat","","",130,[[],[["global",3],["vec",3]]]],[11,"identity","","",130,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",130,[[]]],[11,"into_ref","","",130,[[]]],[11,"from_mut","","",130,[[]]],[11,"into_mut","","",130,[[]]],[11,"init","","",130,[[]]],[11,"deref","","",130,[[]]],[11,"deref_mut","","",130,[[]]],[11,"drop","","",130,[[]]],[11,"encode_as","","",130,[[],[["global",3],["vec",3]]]],[11,"to_subset","","",130,[[],["option",4]]],[11,"is_in_subset","","",130,[[]]],[11,"to_subset_unchecked","","",130,[[]]],[11,"from_subset","","",130,[[]]],[11,"from","node_testing::client::sc_executor","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"unchecked_into","","",131,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",131,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",131,[[]]],[11,"unique_saturated_into","","",131,[[]]],[11,"vzip","","",131,[[]]],[11,"__clone_box","","",131,[[["private",3]]]],[11,"from_ref","","",131,[[]]],[11,"into_ref","","",131,[[]]],[11,"from_mut","","",131,[[]]],[11,"into_mut","","",131,[[]]],[11,"init","","",131,[[]]],[11,"deref","","",131,[[]]],[11,"deref_mut","","",131,[[]]],[11,"drop","","",131,[[]]],[11,"to_subset","","",131,[[],["option",4]]],[11,"is_in_subset","","",131,[[]]],[11,"to_subset_unchecked","","",131,[[]]],[11,"from_subset","","",131,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"is_clear","","",58,[[]]],[11,"clear","","",58,[[]]],[11,"unchecked_into","","",58,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",58,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",58,[[]]],[11,"unique_saturated_into","","",58,[[]]],[11,"vzip","","",58,[[]]],[11,"get_hash","","",58,[[]]],[11,"__clone_box","","",58,[[["private",3]]]],[11,"equivalent","","",58,[[]]],[11,"from_ref","","",58,[[]]],[11,"into_ref","","",58,[[]]],[11,"from_mut","","",58,[[]]],[11,"into_mut","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"inlined_clone","","",58,[[]]],[11,"to_subset","","",58,[[],["option",4]]],[11,"is_in_subset","","",58,[[]]],[11,"to_subset_unchecked","","",58,[[]]],[11,"from_subset","","",58,[[]]],[11,"from","node_testing::client::sc_executor::wasmi","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"unchecked_into","","",132,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",132,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",132,[[]]],[11,"unique_saturated_into","","",132,[[]]],[11,"vzip","","",132,[[]]],[11,"from_ref","","",132,[[]]],[11,"into_ref","","",132,[[]]],[11,"from_mut","","",132,[[]]],[11,"into_mut","","",132,[[]]],[11,"init","","",132,[[]]],[11,"deref","","",132,[[]]],[11,"deref_mut","","",132,[[]]],[11,"drop","","",132,[[]]],[11,"as_fail","","",132,[[],["fail",8]]],[11,"to_subset","","",132,[[],["option",4]]],[11,"is_in_subset","","",132,[[]]],[11,"to_subset_unchecked","","",132,[[]]],[11,"from_subset","","",132,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"unchecked_into","","",60,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",60,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",60,[[]]],[11,"unique_saturated_into","","",60,[[]]],[11,"vzip","","",60,[[]]],[11,"from_ref","","",60,[[]]],[11,"into_ref","","",60,[[]]],[11,"from_mut","","",60,[[]]],[11,"into_mut","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"to_subset","","",60,[[],["option",4]]],[11,"is_in_subset","","",60,[[]]],[11,"to_subset_unchecked","","",60,[[]]],[11,"from_subset","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"unchecked_into","","",61,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",61,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",61,[[]]],[11,"unique_saturated_into","","",61,[[]]],[11,"vzip","","",61,[[]]],[11,"from_ref","","",61,[[]]],[11,"into_ref","","",61,[[]]],[11,"from_mut","","",61,[[]]],[11,"into_mut","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"as_fail","","",61,[[],["fail",8]]],[11,"to_subset","","",61,[[],["option",4]]],[11,"is_in_subset","","",61,[[]]],[11,"to_subset_unchecked","","",61,[[]]],[11,"from_subset","","",61,[[]]],[11,"from","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"unchecked_into","","",133,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",133,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",133,[[]]],[11,"unique_saturated_into","","",133,[[]]],[11,"vzip","","",133,[[]]],[11,"__clone_box","","",133,[[["private",3]]]],[11,"from_ref","","",133,[[]]],[11,"into_ref","","",133,[[]]],[11,"from_mut","","",133,[[]]],[11,"into_mut","","",133,[[]]],[11,"init","","",133,[[]]],[11,"deref","","",133,[[]]],[11,"deref_mut","","",133,[[]]],[11,"drop","","",133,[[]]],[11,"inlined_clone","","",133,[[]]],[11,"to_subset","","",133,[[],["option",4]]],[11,"is_in_subset","","",133,[[]]],[11,"to_subset_unchecked","","",133,[[]]],[11,"from_subset","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"unchecked_into","","",134,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",134,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",134,[[]]],[11,"unique_saturated_into","","",134,[[]]],[11,"vzip","","",134,[[]]],[11,"__clone_box","","",134,[[["private",3]]]],[11,"from_ref","","",134,[[]]],[11,"into_ref","","",134,[[]]],[11,"from_mut","","",134,[[]]],[11,"into_mut","","",134,[[]]],[11,"init","","",134,[[]]],[11,"deref","","",134,[[]]],[11,"deref_mut","","",134,[[]]],[11,"drop","","",134,[[]]],[11,"inlined_clone","","",134,[[]]],[11,"to_subset","","",134,[[],["option",4]]],[11,"is_in_subset","","",134,[[]]],[11,"to_subset_unchecked","","",134,[[]]],[11,"from_subset","","",134,[[]]],[11,"from","node_testing::client::sc_executor::wasmi::memory_units","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"unchecked_into","","",63,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",63,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",63,[[]]],[11,"unique_saturated_into","","",63,[[]]],[11,"round_up_to","","",63,[[],["words",3]]],[11,"round_up_to","","",63,[[],["bytes",3]]],[11,"round_up_to","","",63,[[],["pages",3]]],[11,"round_up_to","","",63,[[],["pages",3]]],[11,"round_up_to","","",63,[[],["words",3]]],[11,"vzip","","",63,[[]]],[11,"__clone_box","","",63,[[["private",3]]]],[11,"equivalent","","",63,[[]]],[11,"from_ref","","",63,[[]]],[11,"into_ref","","",63,[[]]],[11,"from_mut","","",63,[[]]],[11,"into_mut","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"inlined_clone","","",63,[[]]],[11,"to_subset","","",63,[[],["option",4]]],[11,"is_in_subset","","",63,[[]]],[11,"to_subset_unchecked","","",63,[[]]],[11,"from_subset","","",63,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"unchecked_into","","",65,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",65,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",65,[[]]],[11,"unique_saturated_into","","",65,[[]]],[11,"round_up_to","","",65,[[],["words",3]]],[11,"round_up_to","","",65,[[],["bytes",3]]],[11,"round_up_to","","",65,[[],["pages",3]]],[11,"round_up_to","","",65,[[],["pages",3]]],[11,"round_up_to","","",65,[[],["words",3]]],[11,"vzip","","",65,[[]]],[11,"__clone_box","","",65,[[["private",3]]]],[11,"equivalent","","",65,[[]]],[11,"from_ref","","",65,[[]]],[11,"into_ref","","",65,[[]]],[11,"from_mut","","",65,[[]]],[11,"into_mut","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"inlined_clone","","",65,[[]]],[11,"to_subset","","",65,[[],["option",4]]],[11,"is_in_subset","","",65,[[]]],[11,"to_subset_unchecked","","",65,[[]]],[11,"from_subset","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"unchecked_into","","",66,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",66,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",66,[[]]],[11,"unique_saturated_into","","",66,[[]]],[11,"round_up_to","","",66,[[],["words",3]]],[11,"round_up_to","","",66,[[],["bytes",3]]],[11,"round_up_to","","",66,[[],["pages",3]]],[11,"round_up_to","","",66,[[],["pages",3]]],[11,"round_up_to","","",66,[[],["words",3]]],[11,"vzip","","",66,[[]]],[11,"__clone_box","","",66,[[["private",3]]]],[11,"equivalent","","",66,[[]]],[11,"from_ref","","",66,[[]]],[11,"into_ref","","",66,[[]]],[11,"from_mut","","",66,[[]]],[11,"into_mut","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"inlined_clone","","",66,[[]]],[11,"to_subset","","",66,[[],["option",4]]],[11,"is_in_subset","","",66,[[]]],[11,"to_subset_unchecked","","",66,[[]]],[11,"from_subset","","",66,[[]]],[11,"from","node_testing::client::sc_executor::wasmi","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"unchecked_into","","",135,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",135,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",135,[[]]],[11,"unique_saturated_into","","",135,[[]]],[11,"vzip","","",135,[[]]],[11,"from_ref","","",135,[[]]],[11,"into_ref","","",135,[[]]],[11,"from_mut","","",135,[[]]],[11,"into_mut","","",135,[[]]],[11,"init","","",135,[[]]],[11,"deref","","",135,[[]]],[11,"deref_mut","","",135,[[]]],[11,"drop","","",135,[[]]],[11,"to_subset","","",135,[[],["option",4]]],[11,"is_in_subset","","",135,[[]]],[11,"to_subset_unchecked","","",135,[[]]],[11,"from_subset","","",135,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"unchecked_into","","",136,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",136,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",136,[[]]],[11,"unique_saturated_into","","",136,[[]]],[11,"vzip","","",136,[[]]],[11,"from_ref","","",136,[[]]],[11,"into_ref","","",136,[[]]],[11,"from_mut","","",136,[[]]],[11,"into_mut","","",136,[[]]],[11,"init","","",136,[[]]],[11,"deref","","",136,[[]]],[11,"deref_mut","","",136,[[]]],[11,"drop","","",136,[[]]],[11,"to_subset","","",136,[[],["option",4]]],[11,"is_in_subset","","",136,[[]]],[11,"to_subset_unchecked","","",136,[[]]],[11,"from_subset","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"unchecked_into","","",137,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",137,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",137,[[]]],[11,"unique_saturated_into","","",137,[[]]],[11,"vzip","","",137,[[]]],[11,"from_ref","","",137,[[]]],[11,"into_ref","","",137,[[]]],[11,"from_mut","","",137,[[]]],[11,"into_mut","","",137,[[]]],[11,"init","","",137,[[]]],[11,"deref","","",137,[[]]],[11,"deref_mut","","",137,[[]]],[11,"drop","","",137,[[]]],[11,"to_subset","","",137,[[],["option",4]]],[11,"is_in_subset","","",137,[[]]],[11,"to_subset_unchecked","","",137,[[]]],[11,"from_subset","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"unchecked_into","","",138,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",138,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",138,[[]]],[11,"unique_saturated_into","","",138,[[]]],[11,"vzip","","",138,[[]]],[11,"__clone_box","","",138,[[["private",3]]]],[11,"from_ref","","",138,[[]]],[11,"into_ref","","",138,[[]]],[11,"from_mut","","",138,[[]]],[11,"into_mut","","",138,[[]]],[11,"init","","",138,[[]]],[11,"deref","","",138,[[]]],[11,"deref_mut","","",138,[[]]],[11,"drop","","",138,[[]]],[11,"to_subset","","",138,[[],["option",4]]],[11,"is_in_subset","","",138,[[]]],[11,"to_subset_unchecked","","",138,[[]]],[11,"from_subset","","",138,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"unchecked_into","","",67,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",67,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",67,[[]]],[11,"unique_saturated_into","","",67,[[]]],[11,"vzip","","",67,[[]]],[11,"from_ref","","",67,[[]]],[11,"into_ref","","",67,[[]]],[11,"from_mut","","",67,[[]]],[11,"into_mut","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"to_subset","","",67,[[],["option",4]]],[11,"is_in_subset","","",67,[[]]],[11,"to_subset_unchecked","","",67,[[]]],[11,"from_subset","","",67,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"unchecked_into","","",139,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",139,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",139,[[]]],[11,"unique_saturated_into","","",139,[[]]],[11,"vzip","","",139,[[]]],[11,"from_ref","","",139,[[]]],[11,"into_ref","","",139,[[]]],[11,"from_mut","","",139,[[]]],[11,"into_mut","","",139,[[]]],[11,"init","","",139,[[]]],[11,"deref","","",139,[[]]],[11,"deref_mut","","",139,[[]]],[11,"drop","","",139,[[]]],[11,"to_subset","","",139,[[],["option",4]]],[11,"is_in_subset","","",139,[[]]],[11,"to_subset_unchecked","","",139,[[]]],[11,"from_subset","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"unchecked_into","","",140,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",140,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",140,[[]]],[11,"unique_saturated_into","","",140,[[]]],[11,"vzip","","",140,[[]]],[11,"__clone_box","","",140,[[["private",3]]]],[11,"from_ref","","",140,[[]]],[11,"into_ref","","",140,[[]]],[11,"from_mut","","",140,[[]]],[11,"into_mut","","",140,[[]]],[11,"init","","",140,[[]]],[11,"deref","","",140,[[]]],[11,"deref_mut","","",140,[[]]],[11,"drop","","",140,[[]]],[11,"to_subset","","",140,[[],["option",4]]],[11,"is_in_subset","","",140,[[]]],[11,"to_subset_unchecked","","",140,[[]]],[11,"from_subset","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"unchecked_into","","",141,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",141,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",141,[[]]],[11,"unique_saturated_into","","",141,[[]]],[11,"vzip","","",141,[[]]],[11,"from_ref","","",141,[[]]],[11,"into_ref","","",141,[[]]],[11,"from_mut","","",141,[[]]],[11,"into_mut","","",141,[[]]],[11,"init","","",141,[[]]],[11,"deref","","",141,[[]]],[11,"deref_mut","","",141,[[]]],[11,"drop","","",141,[[]]],[11,"to_subset","","",141,[[],["option",4]]],[11,"is_in_subset","","",141,[[]]],[11,"to_subset_unchecked","","",141,[[]]],[11,"from_subset","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"as_byte_slice","","",142,[[]]],[11,"as_bits","","",142,[[],["bitslice",3]]],[11,"unchecked_into","","",142,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",142,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",142,[[]]],[11,"unique_saturated_into","","",142,[[]]],[11,"vzip","","",142,[[]]],[11,"from_ref","","",142,[[]]],[11,"into_ref","","",142,[[]]],[11,"from_mut","","",142,[[]]],[11,"into_mut","","",142,[[]]],[11,"init","","",142,[[]]],[11,"deref","","",142,[[]]],[11,"deref_mut","","",142,[[]]],[11,"drop","","",142,[[]]],[11,"to_subset","","",142,[[],["option",4]]],[11,"is_in_subset","","",142,[[]]],[11,"to_subset_unchecked","","",142,[[]]],[11,"from_subset","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"unchecked_into","","",143,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",143,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",143,[[]]],[11,"unique_saturated_into","","",143,[[]]],[11,"vzip","","",143,[[]]],[11,"from_ref","","",143,[[]]],[11,"into_ref","","",143,[[]]],[11,"from_mut","","",143,[[]]],[11,"into_mut","","",143,[[]]],[11,"init","","",143,[[]]],[11,"deref","","",143,[[]]],[11,"deref_mut","","",143,[[]]],[11,"drop","","",143,[[]]],[11,"to_subset","","",143,[[],["option",4]]],[11,"is_in_subset","","",143,[[]]],[11,"to_subset_unchecked","","",143,[[]]],[11,"from_subset","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"unchecked_into","","",144,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",144,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",144,[[]]],[11,"unique_saturated_into","","",144,[[]]],[11,"vzip","","",144,[[]]],[11,"from_ref","","",144,[[]]],[11,"into_ref","","",144,[[]]],[11,"from_mut","","",144,[[]]],[11,"into_mut","","",144,[[]]],[11,"init","","",144,[[]]],[11,"deref","","",144,[[]]],[11,"deref_mut","","",144,[[]]],[11,"drop","","",144,[[]]],[11,"to_subset","","",144,[[],["option",4]]],[11,"is_in_subset","","",144,[[]]],[11,"to_subset_unchecked","","",144,[[]]],[11,"from_subset","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"unchecked_into","","",145,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",145,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",145,[[]]],[11,"unique_saturated_into","","",145,[[]]],[11,"vzip","","",145,[[]]],[11,"__clone_box","","",145,[[["private",3]]]],[11,"from_ref","","",145,[[]]],[11,"into_ref","","",145,[[]]],[11,"from_mut","","",145,[[]]],[11,"into_mut","","",145,[[]]],[11,"init","","",145,[[]]],[11,"deref","","",145,[[]]],[11,"deref_mut","","",145,[[]]],[11,"drop","","",145,[[]]],[11,"to_subset","","",145,[[],["option",4]]],[11,"is_in_subset","","",145,[[]]],[11,"to_subset_unchecked","","",145,[[]]],[11,"from_subset","","",145,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"unchecked_into","","",71,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",71,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",71,[[]]],[11,"unique_saturated_into","","",71,[[]]],[11,"vzip","","",71,[[]]],[11,"__clone_box","","",71,[[["private",3]]]],[11,"from_ref","","",71,[[]]],[11,"into_ref","","",71,[[]]],[11,"from_mut","","",71,[[]]],[11,"into_mut","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"to_subset","","",71,[[],["option",4]]],[11,"is_in_subset","","",71,[[]]],[11,"to_subset_unchecked","","",71,[[]]],[11,"from_subset","","",71,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"unchecked_into","","",146,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",146,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",146,[[]]],[11,"unique_saturated_into","","",146,[[]]],[11,"vzip","","",146,[[]]],[11,"from_ref","","",146,[[]]],[11,"into_ref","","",146,[[]]],[11,"from_mut","","",146,[[]]],[11,"into_mut","","",146,[[]]],[11,"init","","",146,[[]]],[11,"deref","","",146,[[]]],[11,"deref_mut","","",146,[[]]],[11,"drop","","",146,[[]]],[11,"to_subset","","",146,[[],["option",4]]],[11,"is_in_subset","","",146,[[]]],[11,"to_subset_unchecked","","",146,[[]]],[11,"from_subset","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"unchecked_into","","",147,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",147,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",147,[[]]],[11,"unique_saturated_into","","",147,[[]]],[11,"vzip","","",147,[[]]],[11,"__clone_box","","",147,[[["private",3]]]],[11,"from_ref","","",147,[[]]],[11,"into_ref","","",147,[[]]],[11,"from_mut","","",147,[[]]],[11,"into_mut","","",147,[[]]],[11,"init","","",147,[[]]],[11,"deref","","",147,[[]]],[11,"deref_mut","","",147,[[]]],[11,"drop","","",147,[[]]],[11,"to_subset","","",147,[[],["option",4]]],[11,"is_in_subset","","",147,[[]]],[11,"to_subset_unchecked","","",147,[[]]],[11,"from_subset","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"unchecked_into","","",148,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",148,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",148,[[]]],[11,"unique_saturated_into","","",148,[[]]],[11,"vzip","","",148,[[]]],[11,"from_ref","","",148,[[]]],[11,"into_ref","","",148,[[]]],[11,"from_mut","","",148,[[]]],[11,"into_mut","","",148,[[]]],[11,"init","","",148,[[]]],[11,"deref","","",148,[[]]],[11,"deref_mut","","",148,[[]]],[11,"drop","","",148,[[]]],[11,"to_subset","","",148,[[],["option",4]]],[11,"is_in_subset","","",148,[[]]],[11,"to_subset_unchecked","","",148,[[]]],[11,"from_subset","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"unchecked_into","","",149,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",149,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",149,[[]]],[11,"unique_saturated_into","","",149,[[]]],[11,"vzip","","",149,[[]]],[11,"from_ref","","",149,[[]]],[11,"into_ref","","",149,[[]]],[11,"from_mut","","",149,[[]]],[11,"into_mut","","",149,[[]]],[11,"init","","",149,[[]]],[11,"deref","","",149,[[]]],[11,"deref_mut","","",149,[[]]],[11,"drop","","",149,[[]]],[11,"to_subset","","",149,[[],["option",4]]],[11,"is_in_subset","","",149,[[]]],[11,"to_subset_unchecked","","",149,[[]]],[11,"from_subset","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"unchecked_into","","",150,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",150,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",150,[[]]],[11,"unique_saturated_into","","",150,[[]]],[11,"vzip","","",150,[[]]],[11,"from_ref","","",150,[[]]],[11,"into_ref","","",150,[[]]],[11,"from_mut","","",150,[[]]],[11,"into_mut","","",150,[[]]],[11,"init","","",150,[[]]],[11,"deref","","",150,[[]]],[11,"deref_mut","","",150,[[]]],[11,"drop","","",150,[[]]],[11,"to_subset","","",150,[[],["option",4]]],[11,"is_in_subset","","",150,[[]]],[11,"to_subset_unchecked","","",150,[[]]],[11,"from_subset","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"unchecked_into","","",151,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",151,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",151,[[]]],[11,"unique_saturated_into","","",151,[[]]],[11,"vzip","","",151,[[]]],[11,"__clone_box","","",151,[[["private",3]]]],[11,"from_ref","","",151,[[]]],[11,"into_ref","","",151,[[]]],[11,"from_mut","","",151,[[]]],[11,"into_mut","","",151,[[]]],[11,"init","","",151,[[]]],[11,"deref","","",151,[[]]],[11,"deref_mut","","",151,[[]]],[11,"drop","","",151,[[]]],[11,"to_subset","","",151,[[],["option",4]]],[11,"is_in_subset","","",151,[[]]],[11,"to_subset_unchecked","","",151,[[]]],[11,"from_subset","","",151,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"unchecked_into","","",152,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",152,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",152,[[]]],[11,"unique_saturated_into","","",152,[[]]],[11,"vzip","","",152,[[]]],[11,"from_ref","","",152,[[]]],[11,"into_ref","","",152,[[]]],[11,"from_mut","","",152,[[]]],[11,"into_mut","","",152,[[]]],[11,"init","","",152,[[]]],[11,"deref","","",152,[[]]],[11,"deref_mut","","",152,[[]]],[11,"drop","","",152,[[]]],[11,"to_subset","","",152,[[],["option",4]]],[11,"is_in_subset","","",152,[[]]],[11,"to_subset_unchecked","","",152,[[]]],[11,"from_subset","","",152,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"unchecked_into","","",153,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",153,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",153,[[]]],[11,"unique_saturated_into","","",153,[[]]],[11,"vzip","","",153,[[]]],[11,"from_ref","","",153,[[]]],[11,"into_ref","","",153,[[]]],[11,"from_mut","","",153,[[]]],[11,"into_mut","","",153,[[]]],[11,"init","","",153,[[]]],[11,"deref","","",153,[[]]],[11,"deref_mut","","",153,[[]]],[11,"drop","","",153,[[]]],[11,"to_subset","","",153,[[],["option",4]]],[11,"is_in_subset","","",153,[[]]],[11,"to_subset_unchecked","","",153,[[]]],[11,"from_subset","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"unchecked_into","","",154,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",154,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",154,[[]]],[11,"unique_saturated_into","","",154,[[]]],[11,"vzip","","",154,[[]]],[11,"__clone_box","","",154,[[["private",3]]]],[11,"equivalent","","",154,[[]]],[11,"from_ref","","",154,[[]]],[11,"into_ref","","",154,[[]]],[11,"from_mut","","",154,[[]]],[11,"into_mut","","",154,[[]]],[11,"init","","",154,[[]]],[11,"deref","","",154,[[]]],[11,"deref_mut","","",154,[[]]],[11,"drop","","",154,[[]]],[11,"to_subset","","",154,[[],["option",4]]],[11,"is_in_subset","","",154,[[]]],[11,"to_subset_unchecked","","",154,[[]]],[11,"from_subset","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"unchecked_into","","",155,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",155,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",155,[[]]],[11,"unique_saturated_into","","",155,[[]]],[11,"vzip","","",155,[[]]],[11,"from_ref","","",155,[[]]],[11,"into_ref","","",155,[[]]],[11,"from_mut","","",155,[[]]],[11,"into_mut","","",155,[[]]],[11,"init","","",155,[[]]],[11,"deref","","",155,[[]]],[11,"deref_mut","","",155,[[]]],[11,"drop","","",155,[[]]],[11,"to_subset","","",155,[[],["option",4]]],[11,"is_in_subset","","",155,[[]]],[11,"to_subset_unchecked","","",155,[[]]],[11,"from_subset","","",155,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"unchecked_into","","",72,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",72,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",72,[[]]],[11,"unique_saturated_into","","",72,[[]]],[11,"vzip","","",72,[[]]],[11,"__clone_box","","",72,[[["private",3]]]],[11,"equivalent","","",72,[[]]],[11,"from_ref","","",72,[[]]],[11,"into_ref","","",72,[[]]],[11,"from_mut","","",72,[[]]],[11,"into_mut","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"inlined_clone","","",72,[[]]],[11,"to_subset","","",72,[[],["option",4]]],[11,"is_in_subset","","",72,[[]]],[11,"to_subset_unchecked","","",72,[[]]],[11,"from_subset","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"unchecked_into","","",73,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",73,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",73,[[]]],[11,"unique_saturated_into","","",73,[[]]],[11,"vzip","","",73,[[]]],[11,"from_ref","","",73,[[]]],[11,"into_ref","","",73,[[]]],[11,"from_mut","","",73,[[]]],[11,"into_mut","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"to_subset","","",73,[[],["option",4]]],[11,"is_in_subset","","",73,[[]]],[11,"to_subset_unchecked","","",73,[[]]],[11,"from_subset","","",73,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"unchecked_into","","",76,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",76,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",76,[[]]],[11,"unique_saturated_into","","",76,[[]]],[11,"vzip","","",76,[[]]],[11,"__clone_box","","",76,[[["private",3]]]],[11,"from_ref","","",76,[[]]],[11,"into_ref","","",76,[[]]],[11,"from_mut","","",76,[[]]],[11,"into_mut","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"inlined_clone","","",76,[[]]],[11,"to_subset","","",76,[[],["option",4]]],[11,"is_in_subset","","",76,[[]]],[11,"to_subset_unchecked","","",76,[[]]],[11,"from_subset","","",76,[[]]],[11,"from","node_testing::client::sc_executor","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"unchecked_into","","",156,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",156,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",156,[[]]],[11,"unique_saturated_into","","",156,[[]]],[11,"vzip","","",156,[[]]],[11,"__clone_box","","",156,[[["private",3]]]],[11,"from_ref","","",156,[[]]],[11,"into_ref","","",156,[[]]],[11,"from_mut","","",156,[[]]],[11,"into_mut","","",156,[[]]],[11,"init","","",156,[[]]],[11,"deref","","",156,[[]]],[11,"deref_mut","","",156,[[]]],[11,"drop","","",156,[[]]],[11,"to_subset","","",156,[[],["option",4]]],[11,"is_in_subset","","",156,[[]]],[11,"to_subset_unchecked","","",156,[[]]],[11,"from_subset","","",156,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_keyed_vec","","",78,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",78,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",78,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",78,[[],[["error",3],["result",4]]]],[11,"is_clear","","",78,[[]]],[11,"clear","","",78,[[]]],[11,"unchecked_into","","",78,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",78,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",78,[[]]],[11,"unique_saturated_into","","",78,[[]]],[11,"vzip","","",78,[[]]],[11,"__clone_box","","",78,[[["private",3]]]],[11,"equivalent","","",78,[[]]],[11,"blake2_128","","",78,[[]]],[11,"blake2_256","","",78,[[]]],[11,"blake2_128_concat","","",78,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",78,[[]]],[11,"twox_256","","",78,[[]]],[11,"twox_64_concat","","",78,[[],[["global",3],["vec",3]]]],[11,"identity","","",78,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",78,[[]]],[11,"into_ref","","",78,[[]]],[11,"from_mut","","",78,[[]]],[11,"into_mut","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"encode_as","","",78,[[],[["global",3],["vec",3]]]],[11,"to_subset","","",78,[[],["option",4]]],[11,"is_in_subset","","",78,[[]]],[11,"to_subset_unchecked","","",78,[[]]],[11,"from_subset","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"unchecked_into","","",79,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",79,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",79,[[]]],[11,"unique_saturated_into","","",79,[[]]],[11,"vzip","","",79,[[]]],[11,"from_ref","","",79,[[]]],[11,"into_ref","","",79,[[]]],[11,"from_mut","","",79,[[]]],[11,"into_mut","","",79,[[]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"to_subset","","",79,[[],["option",4]]],[11,"is_in_subset","","",79,[[]]],[11,"to_subset_unchecked","","",79,[[]]],[11,"from_subset","","",79,[[]]],[11,"from","node_testing::client::sc_executor::sp_wasm_interface","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_ffi_value","","",82,[[["functioncontext",8]],[["result",4],["string",3]]]],[11,"from_ffi_value","","",82,[[["functioncontext",8]],[["result",4],["string",3]]]],[11,"unchecked_into","","",82,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",82,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",82,[[]]],[11,"unique_saturated_into","","",82,[[]]],[11,"vzip","","",82,[[]]],[11,"__clone_box","","",82,[[["private",3]]]],[11,"equivalent","","",82,[[]]],[11,"from_ref","","",82,[[]]],[11,"into_ref","","",82,[[]]],[11,"from_mut","","",82,[[]]],[11,"into_mut","","",82,[[]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"inlined_clone","","",82,[[]]],[11,"to_subset","","",82,[[],["option",4]]],[11,"is_in_subset","","",82,[[]]],[11,"to_subset_unchecked","","",82,[[]]],[11,"from_subset","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"to_keyed_vec","","",83,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",83,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",83,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",83,[[],[["error",3],["result",4]]]],[11,"into_ffi_value","","",83,[[["functioncontext",8]],[["result",4],["string",3]]]],[11,"from_ffi_value","","",83,[[["functioncontext",8]],[["result",4],["string",3]]]],[11,"unchecked_into","","",83,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",83,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",83,[[]]],[11,"unique_saturated_into","","",83,[[]]],[11,"vzip","","",83,[[]]],[11,"__clone_box","","",83,[[["private",3]]]],[11,"blake2_128","","",83,[[]]],[11,"blake2_256","","",83,[[]]],[11,"blake2_128_concat","","",83,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",83,[[]]],[11,"twox_256","","",83,[[]]],[11,"twox_64_concat","","",83,[[],[["global",3],["vec",3]]]],[11,"identity","","",83,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",83,[[]]],[11,"into_ref","","",83,[[]]],[11,"from_mut","","",83,[[]]],[11,"into_mut","","",83,[[]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"encode_as","","",83,[[],[["global",3],["vec",3]]]],[11,"inlined_clone","","",83,[[]]],[11,"to_subset","","",83,[[],["option",4]]],[11,"is_in_subset","","",83,[[]]],[11,"to_subset_unchecked","","",83,[[]]],[11,"from_subset","","",83,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"unchecked_into","","",157,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",157,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",157,[[]]],[11,"unique_saturated_into","","",157,[[]]],[11,"vzip","","",157,[[]]],[11,"__clone_box","","",157,[[["private",3]]]],[11,"equivalent","","",157,[[]]],[11,"from_ref","","",157,[[]]],[11,"into_ref","","",157,[[]]],[11,"from_mut","","",157,[[]]],[11,"into_mut","","",157,[[]]],[11,"init","","",157,[[]]],[11,"deref","","",157,[[]]],[11,"deref_mut","","",157,[[]]],[11,"drop","","",157,[[]]],[11,"inlined_clone","","",157,[[]]],[11,"to_subset","","",157,[[],["option",4]]],[11,"is_in_subset","","",157,[[]]],[11,"to_subset_unchecked","","",157,[[]]],[11,"from_subset","","",157,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"unchecked_into","","",85,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",85,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",85,[[]]],[11,"unique_saturated_into","","",85,[[]]],[11,"vzip","","",85,[[]]],[11,"__clone_box","","",85,[[["private",3]]]],[11,"equivalent","","",85,[[]]],[11,"from_ref","","",85,[[]]],[11,"into_ref","","",85,[[]]],[11,"from_mut","","",85,[[]]],[11,"into_mut","","",85,[[]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"to_subset","","",85,[[],["option",4]]],[11,"is_in_subset","","",85,[[]]],[11,"to_subset_unchecked","","",85,[[]]],[11,"from_subset","","",85,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"to_keyed_vec","","",94,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",94,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",94,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",94,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",94,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",94,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",94,[[]]],[11,"unique_saturated_into","","",94,[[]]],[11,"vzip","","",94,[[]]],[11,"__clone_box","","",94,[[["private",3]]]],[11,"blake2_128","","",94,[[]]],[11,"blake2_256","","",94,[[]]],[11,"blake2_128_concat","","",94,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",94,[[]]],[11,"twox_256","","",94,[[]]],[11,"twox_64_concat","","",94,[[],[["global",3],["vec",3]]]],[11,"identity","","",94,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",94,[[]]],[11,"into_ref","","",94,[[]]],[11,"from_mut","","",94,[[]]],[11,"into_mut","","",94,[[]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"encode_as","","",94,[[],[["global",3],["vec",3]]]],[11,"inlined_clone","","",94,[[]]],[11,"to_subset","","",94,[[],["option",4]]],[11,"is_in_subset","","",94,[[]]],[11,"to_subset_unchecked","","",94,[[]]],[11,"from_subset","","",94,[[]]],[11,"from","node_testing::client::sc_executor::error","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_string","","",95,[[],["string",3]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"unchecked_into","","",95,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",95,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",95,[[]]],[11,"unique_saturated_into","","",95,[[]]],[11,"vzip","","",95,[[]]],[11,"from_ref","","",95,[[]]],[11,"into_ref","","",95,[[]]],[11,"from_mut","","",95,[[]]],[11,"into_mut","","",95,[[]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"as_fail","","",95,[[],["fail",8]]],[11,"to_subset","","",95,[[],["option",4]]],[11,"is_in_subset","","",95,[[]]],[11,"to_subset_unchecked","","",95,[[]]],[11,"from_subset","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_string","","",96,[[],["string",3]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"unchecked_into","","",96,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",96,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",96,[[]]],[11,"unique_saturated_into","","",96,[[]]],[11,"vzip","","",96,[[]]],[11,"from_ref","","",96,[[]]],[11,"into_ref","","",96,[[]]],[11,"from_mut","","",96,[[]]],[11,"into_mut","","",96,[[]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"as_fail","","",96,[[],["fail",8]]],[11,"to_subset","","",96,[[],["option",4]]],[11,"is_in_subset","","",96,[[]]],[11,"to_subset_unchecked","","",96,[[]]],[11,"from_subset","","",96,[[]]],[11,"from","node_testing::client::sc_executor::sandbox","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"unchecked_into","","",158,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",158,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",158,[[]]],[11,"unique_saturated_into","","",158,[[]]],[11,"vzip","","",158,[[]]],[11,"__clone_box","","",158,[[["private",3]]]],[11,"from_ref","","",158,[[]]],[11,"into_ref","","",158,[[]]],[11,"from_mut","","",158,[[]]],[11,"into_mut","","",158,[[]]],[11,"init","","",158,[[]]],[11,"deref","","",158,[[]]],[11,"deref_mut","","",158,[[]]],[11,"drop","","",158,[[]]],[11,"inlined_clone","","",158,[[]]],[11,"to_subset","","",158,[[],["option",4]]],[11,"is_in_subset","","",158,[[]]],[11,"to_subset_unchecked","","",158,[[]]],[11,"from_subset","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"unchecked_into","","",159,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",159,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",159,[[]]],[11,"unique_saturated_into","","",159,[[]]],[11,"vzip","","",159,[[]]],[11,"from_ref","","",159,[[]]],[11,"into_ref","","",159,[[]]],[11,"from_mut","","",159,[[]]],[11,"into_mut","","",159,[[]]],[11,"init","","",159,[[]]],[11,"deref","","",159,[[]]],[11,"deref_mut","","",159,[[]]],[11,"drop","","",159,[[]]],[11,"to_subset","","",159,[[],["option",4]]],[11,"is_in_subset","","",159,[[]]],[11,"to_subset_unchecked","","",159,[[]]],[11,"from_subset","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"unchecked_into","","",160,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",160,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",160,[[]]],[11,"unique_saturated_into","","",160,[[]]],[11,"vzip","","",160,[[]]],[11,"from_ref","","",160,[[]]],[11,"into_ref","","",160,[[]]],[11,"from_mut","","",160,[[]]],[11,"into_mut","","",160,[[]]],[11,"init","","",160,[[]]],[11,"deref","","",160,[[]]],[11,"deref_mut","","",160,[[]]],[11,"drop","","",160,[[]]],[11,"to_subset","","",160,[[],["option",4]]],[11,"is_in_subset","","",160,[[]]],[11,"to_subset_unchecked","","",160,[[]]],[11,"from_subset","","",160,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"unchecked_into","","",98,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",98,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",98,[[]]],[11,"unique_saturated_into","","",98,[[]]],[11,"vzip","","",98,[[]]],[11,"from_ref","","",98,[[]]],[11,"into_ref","","",98,[[]]],[11,"from_mut","","",98,[[]]],[11,"into_mut","","",98,[[]]],[11,"init","","",98,[[]]],[11,"deref","","",98,[[]]],[11,"deref_mut","","",98,[[]]],[11,"drop","","",98,[[]]],[11,"to_subset","","",98,[[],["option",4]]],[11,"is_in_subset","","",98,[[]]],[11,"to_subset_unchecked","","",98,[[]]],[11,"from_subset","","",98,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"unchecked_into","","",161,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",161,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",161,[[]]],[11,"unique_saturated_into","","",161,[[]]],[11,"vzip","","",161,[[]]],[11,"from_ref","","",161,[[]]],[11,"into_ref","","",161,[[]]],[11,"from_mut","","",161,[[]]],[11,"into_mut","","",161,[[]]],[11,"init","","",161,[[]]],[11,"deref","","",161,[[]]],[11,"deref_mut","","",161,[[]]],[11,"drop","","",161,[[]]],[11,"to_subset","","",161,[[],["option",4]]],[11,"is_in_subset","","",161,[[]]],[11,"to_subset_unchecked","","",161,[[]]],[11,"from_subset","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"unchecked_into","","",162,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",162,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",162,[[]]],[11,"unique_saturated_into","","",162,[[]]],[11,"vzip","","",162,[[]]],[11,"from_ref","","",162,[[]]],[11,"into_ref","","",162,[[]]],[11,"from_mut","","",162,[[]]],[11,"into_mut","","",162,[[]]],[11,"init","","",162,[[]]],[11,"deref","","",162,[[]]],[11,"deref_mut","","",162,[[]]],[11,"drop","","",162,[[]]],[11,"to_subset","","",162,[[],["option",4]]],[11,"is_in_subset","","",162,[[]]],[11,"to_subset_unchecked","","",162,[[]]],[11,"from_subset","","",162,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"unchecked_into","","",163,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",163,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",163,[[]]],[11,"unique_saturated_into","","",163,[[]]],[11,"vzip","","",163,[[]]],[11,"from_ref","","",163,[[]]],[11,"into_ref","","",163,[[]]],[11,"from_mut","","",163,[[]]],[11,"into_mut","","",163,[[]]],[11,"init","","",163,[[]]],[11,"deref","","",163,[[]]],[11,"deref_mut","","",163,[[]]],[11,"drop","","",163,[[]]],[11,"to_subset","","",163,[[],["option",4]]],[11,"is_in_subset","","",163,[[]]],[11,"to_subset_unchecked","","",163,[[]]],[11,"from_subset","","",163,[[]]],[11,"from","node_testing::client","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"to_string","","",99,[[],["string",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"unchecked_into","","",99,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",99,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",99,[[]]],[11,"unique_saturated_into","","",99,[[]]],[11,"vzip","","",99,[[]]],[11,"get_hash","","",99,[[]]],[11,"__clone_box","","",99,[[["private",3]]]],[11,"equivalent","","",99,[[]]],[11,"from_ref","","",99,[[]]],[11,"into_ref","","",99,[[]]],[11,"from_mut","","",99,[[]]],[11,"into_mut","","",99,[[]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"inlined_clone","","",99,[[]]],[11,"to_subset","","",99,[[],["option",4]]],[11,"is_in_subset","","",99,[[]]],[11,"to_subset_unchecked","","",99,[[]]],[11,"from_subset","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"unchecked_into","","",100,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",100,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",100,[[]]],[11,"unique_saturated_into","","",100,[[]]],[11,"vzip","","",100,[[]]],[11,"get_hash","","",100,[[]]],[11,"__clone_box","","",100,[[["private",3]]]],[11,"equivalent","","",100,[[]]],[11,"from_ref","","",100,[[]]],[11,"into_ref","","",100,[[]]],[11,"from_mut","","",100,[[]]],[11,"into_mut","","",100,[[]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"inlined_clone","","",100,[[]]],[11,"to_subset","","",100,[[],["option",4]]],[11,"is_in_subset","","",100,[[]]],[11,"to_subset_unchecked","","",100,[[]]],[11,"from_subset","","",100,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"unchecked_into","","",102,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",102,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",102,[[]]],[11,"unique_saturated_into","","",102,[[]]],[11,"vzip","","",102,[[]]],[11,"__clone_box","","",102,[[["private",3]]]],[11,"from_ref","","",102,[[]]],[11,"into_ref","","",102,[[]]],[11,"from_mut","","",102,[[]]],[11,"into_mut","","",102,[[]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"to_subset","","",102,[[],["option",4]]],[11,"is_in_subset","","",102,[[]]],[11,"to_subset_unchecked","","",102,[[]]],[11,"from_subset","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"unchecked_into","","",103,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",103,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",103,[[]]],[11,"unique_saturated_into","","",103,[[]]],[11,"vzip","","",103,[[]]],[11,"__clone_box","","",103,[[["private",3]]]],[11,"equivalent","","",103,[[]]],[11,"from_ref","","",103,[[]]],[11,"into_ref","","",103,[[]]],[11,"from_mut","","",103,[[]]],[11,"into_mut","","",103,[[]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"to_subset","","",103,[[],["option",4]]],[11,"is_in_subset","","",103,[[]]],[11,"to_subset_unchecked","","",103,[[]]],[11,"from_subset","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"unchecked_into","","",104,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",104,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",104,[[]]],[11,"unique_saturated_into","","",104,[[]]],[11,"vzip","","",104,[[]]],[11,"__clone_box","","",104,[[["private",3]]]],[11,"equivalent","","",104,[[]]],[11,"from_ref","","",104,[[]]],[11,"into_ref","","",104,[[]]],[11,"from_mut","","",104,[[]]],[11,"into_mut","","",104,[[]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"inlined_clone","","",104,[[]]],[11,"to_subset","","",104,[[],["option",4]]],[11,"is_in_subset","","",104,[[]]],[11,"to_subset_unchecked","","",104,[[]]],[11,"from_subset","","",104,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"unchecked_into","","",164,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",164,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",164,[[]]],[11,"unique_saturated_into","","",164,[[]]],[11,"vzip","","",164,[[]]],[11,"__clone_box","","",164,[[["private",3]]]],[11,"from_ref","","",164,[[]]],[11,"into_ref","","",164,[[]]],[11,"from_mut","","",164,[[]]],[11,"into_mut","","",164,[[]]],[11,"init","","",164,[[]]],[11,"deref","","",164,[[]]],[11,"deref_mut","","",164,[[]]],[11,"drop","","",164,[[]]],[11,"to_subset","","",164,[[],["option",4]]],[11,"is_in_subset","","",164,[[]]],[11,"to_subset_unchecked","","",164,[[]]],[11,"from_subset","","",164,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"unchecked_into","","",165,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",165,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",165,[[]]],[11,"unique_saturated_into","","",165,[[]]],[11,"vzip","","",165,[[]]],[11,"__clone_box","","",165,[[["private",3]]]],[11,"from_ref","","",165,[[]]],[11,"into_ref","","",165,[[]]],[11,"from_mut","","",165,[[]]],[11,"into_mut","","",165,[[]]],[11,"init","","",165,[[]]],[11,"deref","","",165,[[]]],[11,"deref_mut","","",165,[[]]],[11,"drop","","",165,[[]]],[11,"to_subset","","",165,[[],["option",4]]],[11,"is_in_subset","","",165,[[]]],[11,"to_subset_unchecked","","",165,[[]]],[11,"from_subset","","",165,[[]]],[11,"from","node_testing::client::client","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"unchecked_into","","",166,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",166,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",166,[[]]],[11,"unique_saturated_into","","",166,[[]]],[11,"vzip","","",166,[[]]],[11,"__clone_box","","",166,[[["private",3]]]],[11,"from_ref","","",166,[[]]],[11,"into_ref","","",166,[[]]],[11,"from_mut","","",166,[[]]],[11,"into_mut","","",166,[[]]],[11,"init","","",166,[[]]],[11,"deref","","",166,[[]]],[11,"deref_mut","","",166,[[]]],[11,"drop","","",166,[[]]],[11,"to_subset","","",166,[[],["option",4]]],[11,"is_in_subset","","",166,[[]]],[11,"to_subset_unchecked","","",166,[[]]],[11,"from_subset","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"unchecked_into","","",167,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",167,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",167,[[]]],[11,"unique_saturated_into","","",167,[[]]],[11,"vzip","","",167,[[]]],[11,"from_ref","","",167,[[]]],[11,"into_ref","","",167,[[]]],[11,"from_mut","","",167,[[]]],[11,"into_mut","","",167,[[]]],[11,"init","","",167,[[]]],[11,"deref","","",167,[[]]],[11,"deref_mut","","",167,[[]]],[11,"drop","","",167,[[]]],[11,"to_subset","","",167,[[],["option",4]]],[11,"is_in_subset","","",167,[[]]],[11,"to_subset_unchecked","","",167,[[]]],[11,"from_subset","","",167,[[]]],[11,"wait_for_blocks","","",167,[[],[["box",3],["pin",3]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"unchecked_into","","",105,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",105,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",105,[[]]],[11,"unique_saturated_into","","",105,[[]]],[11,"vzip","","",105,[[]]],[11,"__clone_box","","",105,[[["private",3]]]],[11,"from_ref","","",105,[[]]],[11,"into_ref","","",105,[[]]],[11,"from_mut","","",105,[[]]],[11,"into_mut","","",105,[[]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"to_subset","","",105,[[],["option",4]]],[11,"is_in_subset","","",105,[[]]],[11,"to_subset_unchecked","","",105,[[]]],[11,"from_subset","","",105,[[]]],[11,"from","node_testing::client","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"unchecked_into","","",168,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",168,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",168,[[]]],[11,"unique_saturated_into","","",168,[[]]],[11,"vzip","","",168,[[]]],[11,"from_ref","","",168,[[]]],[11,"into_ref","","",168,[[]]],[11,"from_mut","","",168,[[]]],[11,"into_mut","","",168,[[]]],[11,"init","","",168,[[]]],[11,"deref","","",168,[[]]],[11,"deref_mut","","",168,[[]]],[11,"drop","","",168,[[]]],[11,"to_subset","","",168,[[],["option",4]]],[11,"is_in_subset","","",168,[[]]],[11,"to_subset_unchecked","","",168,[[]]],[11,"from_subset","","",168,[[]]],[11,"assimilate_storage","","",102,[[["storage",3]],[["string",3],["result",4]]]],[11,"from_ffi_value","node_testing::client::sc_executor::sp_wasm_interface","",157,[[["functioncontext",8]],[["pointer",3],["string",3],["result",4]]]],[11,"into_ffi_value","","",157,[[["functioncontext",8]],[["result",4],["string",3]]]],[11,"into_value","","",157,[[],["value",4]]],[11,"clone","","",94,[[],["returnvalue",4]]],[11,"clone","","",85,[[],["signature",3]]],[11,"clone","","",157,[[],["pointer",3]]],[11,"clone","","",82,[[],["valuetype",4]]],[11,"clone","","",83,[[],["value",4]]],[11,"try_from_value","","",157,[[["value",4]],[["option",4],["pointer",3]]]],[11,"from","","",94,[[["value",4]],["returnvalue",4]]],[11,"from","","",83,[[["runtimevalue",4]],["value",4]]],[11,"from","node_testing::client::sc_executor::wasmi","",76,[[["value",4]],["runtimevalue",4]]],[11,"from","","",154,[[["signature",3]],["signature",3]]],[11,"from","node_testing::client::sc_executor::sp_wasm_interface","",85,[[["signature",3]],["signature",3]]],[11,"from","","",157,[[],["pointer",3]]],[11,"from","","",82,[[["valuetype",4]],["valuetype",4]]],[11,"from","node_testing::client::sc_executor::wasmi","",72,[[["valuetype",4]],["valuetype",4]]],[11,"decode","node_testing::client::sc_executor::sp_wasm_interface","",83,[[],[["result",4],["error",3],["value",4]]]],[11,"decode","","",94,[[],[["error",3],["result",4],["returnvalue",4]]]],[11,"try_from","","",82,[[],[["result",4],["valuetype",4]]]],[11,"eq","","",83,[[["value",4]]]],[11,"ne","","",83,[[["value",4]]]],[11,"eq","","",85,[[["signature",3]]]],[11,"ne","","",85,[[["signature",3]]]],[11,"eq","","",94,[[["returnvalue",4]]]],[11,"ne","","",94,[[["returnvalue",4]]]],[11,"eq","","",157,[[["pointer",3]]]],[11,"ne","","",157,[[["pointer",3]]]],[11,"eq","","",86,[[["function",8]]]],[11,"eq","","",82,[[["valuetype",4]]]],[11,"encode_to","","",94,[[]]],[11,"encode_to","","",83,[[]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[],["f32",3]]],[11,"sub","","",134,[[],["f64",3]]],[11,"into_little_endian","","",133,[[]]],[11,"from_little_endian","","",133,[[],[["result",4],["f32",3],["error",4]]]],[11,"into_little_endian","","",134,[[]]],[11,"from_little_endian","","",134,[[],[["error",4],["result",4],["f64",3]]]],[11,"description","node_testing::client::sc_executor::wasmi","",132,[[]]],[11,"description","","",61,[[]]],[11,"neg","node_testing::client::sc_executor::wasmi::nan_preserving_float","",134,[[],["f64",3]]],[11,"neg","","",133,[[],["f32",3]]],[11,"from","node_testing::client::sc_executor::wasmi","",76,[[],["runtimevalue",4]]],[11,"from","node_testing::client::sc_executor::wasmi::nan_preserving_float","",134,[[],["f64",3]]],[11,"from","","",133,[[],["f32",3]]],[11,"from","node_testing::client::sc_executor::wasmi","",61,[[],["error",4]]],[11,"from","","",67,[[["trap",3]],["resumableerror",4]]],[11,"from","","",76,[[],["runtimevalue",4]]],[11,"from","","",76,[[["f32",3]],["runtimevalue",4]]],[11,"from","","",61,[[["error",3]],["error",4]]],[11,"from","","",76,[[],["runtimevalue",4]]],[11,"from","","",76,[[],["runtimevalue",4]]],[11,"from","","",76,[[],["runtimevalue",4]]],[11,"from","","",132,[[["trapkind",4]],["trap",3]]],[11,"from","","",142,[[],["runtimeargs",3]]],[11,"from","node_testing::client::sc_executor::wasmi::nan_preserving_float","",134,[[],["f64",3]]],[11,"from","node_testing::client::sc_executor::wasmi","",76,[[],["runtimevalue",4]]],[11,"from","","",132,[[],["trap",3]]],[11,"from","","",76,[[],["runtimevalue",4]]],[11,"from","","",76,[[["f64",3]],["runtimevalue",4]]],[11,"from","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[],["f32",3]]],[11,"from","node_testing::client::sc_executor::wasmi","",76,[[],["runtimevalue",4]]],[11,"from","","",61,[[["trap",3]],["error",4]]],[11,"mul","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[],["f32",3]]],[11,"mul","","",134,[[],["f64",3]]],[11,"resolve_func","node_testing::client::sc_executor::wasmi","",147,[[["signature",3]],[["funcref",3],["error",4],["result",4]]]],[11,"resolve_global","","",147,[[["globaldescriptor",3]],[["result",4],["globalref",3],["error",4]]]],[11,"resolve_memory","","",147,[[["memorydescriptor",3]],[["result",4],["memoryref",3],["error",4]]]],[11,"resolve_table","","",147,[[["tabledescriptor",3]],[["result",4],["tableref",3],["error",4]]]],[11,"from_runtime_value","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[["runtimevalue",4]],[["f32",3],["option",4]]]],[11,"from_runtime_value","","",134,[[["runtimevalue",4]],[["option",4],["f64",3]]]],[11,"clone","node_testing::client::sc_executor::wasmi","",72,[[],["valuetype",4]]],[11,"clone","","",71,[[],["externval",4]]],[11,"clone","","",147,[[],["moduleref",3]]],[11,"clone","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[],["f32",3]]],[11,"clone","node_testing::client::sc_executor::wasmi","",138,[[],["funcref",3]]],[11,"clone","node_testing::client::sc_executor::wasmi::nan_preserving_float","",134,[[],["f64",3]]],[11,"clone","node_testing::client::sc_executor::wasmi","",145,[[],["memoryref",3]]],[11,"clone","","",154,[[],["signature",3]]],[11,"clone","","",151,[[],["tableref",3]]],[11,"clone","","",140,[[],["globalref",3]]],[11,"clone","","",76,[[],["runtimevalue",4]]],[11,"as_ref","","",142,[[]]],[11,"div","node_testing::client::sc_executor::wasmi::nan_preserving_float","",134,[[],["f64",3]]],[11,"div","","",133,[[],["f32",3]]],[11,"partial_cmp","","",133,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",134,[[],[["option",4],["ordering",4]]]],[11,"fmt","node_testing::client::sc_executor::wasmi","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_executor::wasmi::nan_preserving_float","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_executor::wasmi","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_executor::wasmi","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"invoke_index","","",141,[[["runtimeargs",3]],[["result",4],["option",4],["trap",3]]]],[11,"default","","",143,[[],["importsbuilder",3]]],[11,"default","","",149,[[],["stackrecycler",3]]],[11,"into","","",61,[[],["string",3]]],[11,"resolve_func","","",143,[[["signature",3]],[["funcref",3],["error",4],["result",4]]]],[11,"resolve_global","","",143,[[["globaldescriptor",3]],[["result",4],["globalref",3],["error",4]]]],[11,"resolve_memory","","",143,[[["memorydescriptor",3]],[["result",4],["memoryref",3],["error",4]]]],[11,"resolve_table","","",143,[[["tabledescriptor",3]],[["result",4],["tableref",3],["error",4]]]],[11,"deref","","",140,[[],["globalinstance",3]]],[11,"deref","","",138,[[],["funcinstance",3]]],[11,"deref","","",145,[[],["memoryinstance",3]]],[11,"deref","","",147,[[],["moduleinstance",3]]],[11,"deref","","",151,[[],["tableinstance",3]]],[11,"rem","node_testing::client::sc_executor::wasmi::nan_preserving_float","",134,[[],["f64",3]]],[11,"rem","","",133,[[],["f32",3]]],[11,"eq","node_testing::client::sc_executor::wasmi","",154,[[["signature",3]]]],[11,"ne","","",154,[[["signature",3]]]],[11,"eq","","",76,[[["runtimevalue",4]]]],[11,"ne","","",76,[[["runtimevalue",4]]]],[11,"eq","","",72,[[["valuetype",4]]]],[11,"eq","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[]]],[11,"eq","","",134,[[]]],[11,"add","","",134,[[],["f64",3]]],[11,"add","","",133,[[],["f32",3]]],[11,"div","node_testing::client::sc_executor::wasmi::memory_units","",63,[[],["bytes",3]]],[11,"div","","",65,[[],["pages",3]]],[11,"div","","",66,[[],["words",3]]],[11,"byte_size","","",65,[[],["bytes",3]]],[11,"byte_size","","",63,[[],["bytes",3]]],[11,"byte_size","","",66,[[],["bytes",3]]],[11,"add","","",66,[[],["words",3]]],[11,"add","","",65,[[],["pages",3]]],[11,"add","","",63,[[],["bytes",3]]],[11,"eq","","",63,[[["bytes",3]]]],[11,"ne","","",63,[[["bytes",3]]]],[11,"eq","","",65,[[["pages",3]]]],[11,"ne","","",65,[[["pages",3]]]],[11,"eq","","",66,[[["words",3]]]],[11,"ne","","",66,[[["words",3]]]],[11,"cmp","","",63,[[["bytes",3]],["ordering",4]]],[11,"cmp","","",65,[[["pages",3]],["ordering",4]]],[11,"cmp","","",66,[[["words",3]],["ordering",4]]],[11,"from","","",63,[[["pages",3]],["bytes",3]]],[11,"from","","",63,[[["pages",3]],["bytes",3]]],[11,"from","","",63,[[["words",3]],["bytes",3]]],[11,"from","","",63,[[["words",3]],["bytes",3]]],[11,"sub","","",66,[[],["words",3]]],[11,"sub","","",63,[[],["bytes",3]]],[11,"sub","","",65,[[],["pages",3]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"mul","","",66,[[],["words",3]]],[11,"mul","","",65,[[],["pages",3]]],[11,"mul","","",63,[[],["bytes",3]]],[11,"clone","","",65,[[],["pages",3]]],[11,"clone","","",66,[[],["words",3]]],[11,"clone","","",63,[[],["bytes",3]]],[11,"partial_cmp","","",66,[[["words",3]],[["option",4],["ordering",4]]]],[11,"lt","","",66,[[["words",3]]]],[11,"le","","",66,[[["words",3]]]],[11,"gt","","",66,[[["words",3]]]],[11,"ge","","",66,[[["words",3]]]],[11,"partial_cmp","","",63,[[["bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["bytes",3]]]],[11,"le","","",63,[[["bytes",3]]]],[11,"gt","","",63,[[["bytes",3]]]],[11,"ge","","",63,[[["bytes",3]]]],[11,"partial_cmp","","",65,[[["pages",3]],[["option",4],["ordering",4]]]],[11,"lt","","",65,[[["pages",3]]]],[11,"le","","",65,[[["pages",3]]]],[11,"gt","","",65,[[["pages",3]]]],[11,"ge","","",65,[[["pages",3]]]],[11,"default","node_testing::client","",102,[[],["storage",3]]],[11,"clone","","",103,[[],["storagechild",3]]],[11,"clone","","",102,[[],["storage",3]]],[11,"eq","","",103,[[["storagechild",3]]]],[11,"ne","","",103,[[["storagechild",3]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",104,[[],["executionstrategy",4]]],[11,"from","","",104,[[["executionmanager",4]],["executionstrategy",4]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",104,[[["executionstrategy",4]]]],[11,"encode_to","node_testing::client::sp_consensus","",130,[[]]],[11,"encode","","",130,[[],[["global",3],["vec",3]]]],[11,"using_encoded","","",130,[[]]],[11,"default","","",130,[[],["inherentdata",3]]],[11,"clone","","",130,[[],["inherentdata",3]]],[11,"decode","","",130,[[],[["error",3],["result",4],["inherentdata",3]]]],[11,"encode_to","node_testing::client::sc_executor","",78,[[]]],[11,"default","","",78,[[],["runtimeversion",3]]],[11,"decode","","",78,[[],[["result",4],["error",3],["runtimeversion",3]]]],[11,"clone","","",78,[[],["runtimeversion",3]]],[11,"deserialize","","",78,[[],[["runtimeversion",3],["result",4]]]],[11,"eq","","",78,[[["runtimeversion",3]]]],[11,"ne","","",78,[[["runtimeversion",3]]]],[11,"serialize","","",78,[[],["result",4]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",78,[[["oldruntimeversion",3]],["runtimeversion",3]]],[11,"uncles","node_testing::client::sp_consensus","",130,[[],[["error",3],["vec",3],["result",4]]]],[11,"timestamp_inherent_data","","",130,[[],[["result",4],["error",3]]]],[11,"babe_inherent_data","","",130,[[],[["result",4],["slot",3],["error",3]]]],[11,"babe_replace_inherent_data","","",130,[[["slot",3]]]],[11,"blocks_processed","node_testing::client::sp_consensus::import_queue::buffered_link","",123,[[["global",3],["vec",3]]]],[11,"justification_imported","","",123,[[["peerid",3]]]],[11,"request_justification","","",123,[[]]],[11,"source","node_testing::client::sp_consensus","",28,[[],[["option",4],["error",8]]]],[11,"source","node_testing::client::sp_consensus::evaluation","",44,[[],[["option",4],["error",8]]]],[11,"drop","node_testing::client::sp_consensus::import_queue","",125,[[]]],[11,"default","node_testing::client::sp_consensus","",51,[[],["recordproof",4]]],[11,"default","","",31,[[],["importedaux",3]]],[11,"clone","","",128,[[],["alwayscanauthor",3]]],[11,"clone","","",51,[[],["recordproof",4]]],[11,"clone","","",129,[[],["nevercanauthor",3]]],[11,"clone","node_testing::client::sp_consensus::import_queue::buffered_link","",123,[[],["bufferedlinksender",3]]],[11,"clone","node_testing::client::sp_consensus","",34,[[],["blockcheckparams",3]]],[11,"clone","","",127,[[],["canauthorwithnativeversion",3]]],[11,"clone","","",126,[[],["nonetwork",3]]],[11,"clone","","",33,[[],["forkchoicestrategy",4]]],[11,"clone","","",32,[[],["blockorigin",4]]],[11,"clone","node_testing::client::sp_consensus::import_queue","",38,[[],["incomingblock",3]]],[11,"from","node_testing::client::sp_consensus","",28,[[["global",3],["box",3],["error",8]],["error",4]]],[11,"from","node_testing::client::sp_consensus::evaluation","",44,[[["error",3]],["error",4]]],[11,"from","node_testing::client::sp_consensus","",28,[[["string",3]],["error",4]]],[11,"from","","",28,[[["error",3]],["error",4]]],[11,"from","","",28,[[["error",3]],["error",4]]],[11,"from","","",51,[[],["recordproof",4]]],[11,"from","","",28,[[["public",3]],["error",4]]],[11,"is_major_syncing","","",126,[[]]],[11,"is_offline","","",126,[[]]],[11,"serialize","","",31,[[],["result",4]]],[11,"can_author_with","","",128,[[["blockid",4]],[["string",3],["result",4]]]],[11,"can_author_with","","",129,[[["blockid",4]],[["string",3],["result",4]]]],[11,"can_author_with","","",127,[[["blockid",4]],[["string",3],["result",4]]]],[11,"validate","node_testing::client::sp_consensus::block_validation","",121,[[],[["box",3],["pin",3]]]],[11,"deserialize","node_testing::client::sp_consensus","",31,[[],[["importedaux",3],["result",4]]]],[11,"import_blocks","node_testing::client::sp_consensus::import_queue","",125,[[["vec",3],["blockorigin",4],["global",3],["incomingblock",3]]]],[11,"import_justification","","",125,[[["global",3],["vec",3],["peerid",3]]]],[11,"poll_actions","","",125,[[["link",8],["context",3]]]],[11,"eq","","",38,[[["incomingblock",3]]]],[11,"ne","","",38,[[["incomingblock",3]]]],[11,"eq","node_testing::client::sp_consensus","",48,[[["blockstatus",4]]]],[11,"eq","","",32,[[["blockorigin",4]]]],[11,"eq","node_testing::client::sp_consensus::block_validation","",24,[[["validation",4]]]],[11,"ne","","",24,[[["validation",4]]]],[11,"eq","node_testing::client::sp_consensus","",31,[[["importedaux",3]]]],[11,"ne","","",31,[[["importedaux",3]]]],[11,"eq","","",34,[[["blockcheckparams",3]]]],[11,"ne","","",34,[[["blockcheckparams",3]]]],[11,"eq","","",33,[[["forkchoicestrategy",4]]]],[11,"ne","","",33,[[["forkchoicestrategy",4]]]],[11,"eq","","",51,[[["recordproof",4]]]],[11,"eq","node_testing::client::sp_consensus::import_queue","",42,[[["blockimportresult",4]]]],[11,"ne","","",42,[[["blockimportresult",4]]]],[11,"eq","node_testing::client::sp_consensus","",30,[[["importresult",4]]]],[11,"ne","","",30,[[["importresult",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus::evaluation","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus::block_validation","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus::import_queue","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus::block_validation","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus::evaluation","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sp_consensus","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_client_db","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","node_testing::client","",111,[[],["executionextensions",3]]],[11,"default","","",14,[[],["executionstrategies",3]]],[11,"clone","","",14,[[],["executionstrategies",3]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"call_in_wasm","node_testing::client::sc_executor","",156,[[["externalities",8],["vec",3],["option",4],["missinghostfunctions",4]],[["result",4],["vec",3],["string",3]]]],[11,"call_in_wasm","","",131,[[["externalities",8],["vec",3],["option",4],["missinghostfunctions",4]],[["result",4],["vec",3],["string",3]]]],[11,"hash","","",58,[[]]],[11,"default","","",58,[[],["wasmexecutionmethod",4]]],[11,"clone","","",131,[[],["nativeexecutor",3]]],[11,"clone","","",58,[[],["wasmexecutionmethod",4]]],[11,"clone","","",156,[[],["wasmexecutor",3]]],[11,"native_version","","",131,[[],["nativeversion",3]]],[11,"runtime_version","","",131,[[["externalities",8],["runtimecode",3]],[["result",4],["error",4],["runtimeversion",3]]]],[11,"call","","",131,[[["externalities",8],["option",4],["runtimecode",3]]]],[11,"eq","","",58,[[["wasmexecutionmethod",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_executor::error","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"invoke_index","node_testing::client::sc_executor::sandbox","",159,[[["runtimeargs",3]],[["result",4],["option",4],["trap",3]]]],[11,"source","node_testing::client::sc_executor::error","",95,[[],[["option",4],["error",8]]]],[11,"clone","node_testing::client::sc_executor::sandbox","",158,[[],["supervisorfuncindex",3]]],[11,"eq","","",158,[[["supervisorfuncindex",3]]]],[11,"ne","","",158,[[["supervisorfuncindex",3]]]],[11,"from","node_testing::client::sc_executor::error","",95,[[["error",4]],["error",4]]],[11,"from","","",95,[[["trap",3]],["error",4]]],[11,"from","","",95,[[["error",4]],["error",4]]],[11,"from","","",95,[[],["error",4]]],[11,"from","","",95,[[["error",3]],["error",4]]],[11,"from","","",95,[[["string",3]],["error",4]]],[11,"from","","",95,[[["wasmerror",4]],["error",4]]],[11,"fmt","node_testing::client::sc_executor::sandbox","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_executor::error","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"body","node_testing::client::sc_client_db","",119,[[["blockid",4]],[["result",4],["option",4],["error",4]]]],[11,"justification","","",119,[[["blockid",4]],[["result",4],["option",4],["error",4]]]],[11,"last_finalized","","",119,[[],[["error",4],["result",4]]]],[11,"cache","","",119,[[],[["arc",3],["option",4]]]],[11,"leaves","","",119,[[],[["result",4],["error",4],["vec",3]]]],[11,"children","","",119,[[],[["result",4],["error",4],["vec",3]]]],[11,"extrinsic","","",119,[[],[["result",4],["error",4],["option",4]]]],[11,"have_extrinsic","","",119,[[],[["result",4],["error",4]]]],[11,"cache","","",119,[[],[["arc",3],["option",4]]]],[11,"set","node_testing::client::sc_client_db::offchain","",114,[[]]],[11,"remove","","",114,[[]]],[11,"get","","",114,[[],[["vec",3],["option",4]]]],[11,"compare_and_set","","",114,[[["option",4]]]],[11,"clone","node_testing::client::sc_client_db","",16,[[],["keepblocks",4]]],[11,"clone","","",17,[[],["transactionstoragemode",4]]],[11,"clone","node_testing::client::sc_client_db::offchain","",114,[[],["localstorage",3]]],[11,"clone","node_testing::client::sc_client_db::bench","",116,[[],["readwritetracker",3]]],[11,"clone","","",115,[[],["keytracker",3]]],[11,"clone","node_testing::client::sc_client_db","",18,[[],["databasesettingssrc",4]]],[11,"drop","","",118,[[]]],[11,"storage","","",117,[[],[["result",4],["option",4]]]],[11,"storage_hash","","",117,[[],[["result",4],["option",4]]]],[11,"child_storage","","",117,[[["childinfo",4]],[["result",4],["option",4]]]],[11,"exists_storage","","",117,[[],["result",4]]],[11,"exists_child_storage","","",117,[[["childinfo",4]],["result",4]]],[11,"next_storage_key","","",117,[[],[["result",4],["option",4]]]],[11,"next_child_storage_key","","",117,[[["childinfo",4]],[["result",4],["option",4]]]],[11,"for_keys_with_prefix","","",117,[[]]],[11,"for_key_values_with_prefix","","",117,[[]]],[11,"apply_to_child_keys_while","","",117,[[["childinfo",4]]]],[11,"for_child_keys_with_prefix","","",117,[[["childinfo",4]]]],[11,"storage_root","","",117,[[]]],[11,"child_storage_root","","",117,[[["childinfo",4]]]],[11,"pairs","","",117,[[],[["global",3],["vec",3]]]],[11,"keys","","",117,[[],[["global",3],["vec",3],["vec",3]]]],[11,"child_keys","","",117,[[["childinfo",4]],[["global",3],["vec",3],["vec",3]]]],[11,"as_trie_backend","","",117,[[],[["option",4],["triebackend",3]]]],[11,"commit","","",117,[[["vec",3],["global",3],["vec",3]],["result",4]]],[11,"wipe","","",117,[[],["result",4]]],[11,"read_write_count","","Get the key tracking information for the state db.",117,[[]]],[11,"reset_read_write_count","","Reset the key tracking information for the state db.",117,[[]]],[11,"get_whitelist","","",117,[[],[["trackedstoragekey",3],["vec",3],["global",3]]]],[11,"set_whitelist","","",117,[[["trackedstoragekey",3],["vec",3],["global",3]]]],[11,"register_overlay_stats","","",117,[[["statemachinestats",3]]]],[11,"usage_info","","",117,[[],["usageinfo",3]]],[11,"storage","","",118,[[],[["result",4],["option",4]]]],[11,"storage_hash","","",118,[[],[["result",4],["option",4]]]],[11,"child_storage","","",118,[[["childinfo",4]],[["result",4],["option",4]]]],[11,"exists_storage","","",118,[[],["result",4]]],[11,"exists_child_storage","","",118,[[["childinfo",4]],["result",4]]],[11,"next_storage_key","","",118,[[],[["result",4],["option",4]]]],[11,"next_child_storage_key","","",118,[[["childinfo",4]],[["result",4],["option",4]]]],[11,"for_keys_with_prefix","","",118,[[]]],[11,"for_key_values_with_prefix","","",118,[[]]],[11,"apply_to_child_keys_while","","",118,[[["childinfo",4]]]],[11,"for_child_keys_with_prefix","","",118,[[["childinfo",4]]]],[11,"storage_root","","",118,[[]]],[11,"child_storage_root","","",118,[[["childinfo",4]]]],[11,"pairs","","",118,[[],[["global",3],["vec",3]]]],[11,"keys","","",118,[[],[["global",3],["vec",3],["vec",3]]]],[11,"child_keys","","",118,[[["childinfo",4]],[["global",3],["vec",3],["vec",3]]]],[11,"as_trie_backend","","",118,[[],[["option",4],["triebackend",3]]]],[11,"register_overlay_stats","","",118,[[["statemachinestats",3]]]],[11,"usage_info","","",118,[[],["usageinfo",3]]],[11,"begin_operation","","",112,[[],[["result",4],["error",4]]]],[11,"begin_state_operation","","",112,[[["blockid",4]],[["error",4],["result",4]]]],[11,"commit_operation","","",112,[[],[["error",4],["result",4]]]],[11,"finalize_block","","",112,[[["vec",3],["option",4],["blockid",4]],[["error",4],["result",4]]]],[11,"changes_trie_storage","","",112,[[],[["prunablestatechangestriestorage",8],["option",4]]]],[11,"offchain_storage","","",112,[[],["option",4]]],[11,"usage_info","","",112,[[],[["option",4],["usageinfo",3]]]],[11,"revert","","",112,[[],[["result",4],["error",4]]]],[11,"blockchain","","",112,[[],["blockchaindb",3]]],[11,"state_at","","",112,[[["blockid",4]],[["error",4],["result",4]]]],[11,"have_state_at","","",112,[[]]],[11,"get_import_lock","","",112,[[],["rwlock",3]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_client_db::offchain","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_client_db::bench","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","node_testing::client::sc_client_db","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"insert_aux","","",112,[[],[["error",4],["result",4]]]],[11,"get_aux","","",112,[[],[["result",4],["option",4],["error",4]]]],[11,"insert_aux","node_testing::client::sc_client_db::light","",113,[[],[["error",4],["result",4]]]],[11,"get_aux","","",113,[[],[["result",4],["option",4],["error",4]]]],[11,"header_metadata","node_testing::client::sc_client_db","",119,[[],[["cachedheadermetadata",3],["result",4]]]],[11,"insert_header_metadata","","",119,[[["cachedheadermetadata",3]]]],[11,"remove_header_metadata","","",119,[[]]],[11,"header_metadata","node_testing::client::sc_client_db::light","",113,[[],[["cachedheadermetadata",3],["result",4]]]],[11,"insert_header_metadata","","",113,[[["cachedheadermetadata",3]]]],[11,"remove_header_metadata","","",113,[[]]],[11,"default","node_testing::client::sc_client_db::bench","",116,[[],["readwritetracker",3]]],[11,"default","","",115,[[],["keytracker",3]]],[11,"state","node_testing::client::sc_client_db","",120,[[],[["error",4],["result",4],["option",4]]]],[11,"set_block_data","","",120,[[["vec",3],["option",4],["vec",3],["option",4],["newblockstate",4]],[["error",4],["result",4]]]],[11,"update_cache","","",120,[[["hashmap",3],["vec",3],["randomstate",3]]]],[11,"update_db_storage","","",120,[[["memcounter",3],["prefixedkey",3],["memorydb",3],["vec",3]],[["error",4],["result",4]]]],[11,"reset_storage","","",120,[[["storage",3]],[["error",4],["result",4]]]],[11,"update_changes_trie","","",120,[[],[["error",4],["result",4]]]],[11,"insert_aux","","",120,[[],[["error",4],["result",4]]]],[11,"update_storage","","",120,[[["global",3],["vec",3],["vec",3]],[["error",4],["result",4]]]],[11,"update_offchain_storage","","",120,[[["global",3],["vec",3]],[["error",4],["result",4]]]],[11,"mark_finalized","","",120,[[["vec",3],["option",4],["blockid",4]],[["error",4],["result",4]]]],[11,"mark_head","","",120,[[["blockid",4]],[["error",4],["result",4]]]],[11,"import_header","node_testing::client::sc_client_db::light","",113,[[["global",3],["vec",3],["hashmap",3],["vec",3],["randomstate",3],["newblockstate",4]],[["error",4],["result",4]]]],[11,"set_head","","",113,[[["blockid",4]],[["error",4],["result",4]]]],[11,"finalize_header","","",113,[[["blockid",4]],[["error",4],["result",4]]]],[11,"last_finalized","","",113,[[],[["error",4],["result",4]]]],[11,"cache","","",113,[[],[["arc",3],["option",4]]]],[11,"usage_info","","",113,[[],[["option",4],["usageinfo",3]]]],[11,"header_cht_root","node_testing::client::sc_client_db","",119,[[],[["result",4],["option",4],["error",4]]]],[11,"changes_trie_cht_root","","",119,[[],[["result",4],["option",4],["error",4]]]],[11,"header_cht_root","node_testing::client::sc_client_db::light","",113,[[],[["result",4],["option",4],["error",4]]]],[11,"changes_trie_cht_root","","",113,[[],[["result",4],["option",4],["error",4]]]],[11,"header","","",113,[[["blockid",4]],[["option",4],["error",4],["result",4]]]],[11,"info","","",113,[[],["info",3]]],[11,"status","","",113,[[["blockid",4]],[["blockstatus",4],["result",4],["error",4]]]],[11,"number","","",113,[[],[["error",4],["option",4],["result",4]]]],[11,"hash","","",113,[[],[["result",4],["option",4],["error",4]]]],[11,"header","node_testing::client::sc_client_db","",119,[[["blockid",4]],[["option",4],["error",4],["result",4]]]],[11,"info","","",119,[[],["info",3]]],[11,"status","","",119,[[["blockid",4]],[["blockstatus",4],["result",4],["error",4]]]],[11,"number","","",119,[[],[["error",4],["option",4],["result",4]]]],[11,"hash","","",119,[[],[["result",4],["option",4],["error",4]]]],[11,"default","","",22,[[],["pruningmode",4]]],[11,"eq","","",22,[[["pruningmode",4]]]],[11,"ne","","",22,[[["pruningmode",4]]]],[11,"clone","","",22,[[],["pruningmode",4]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"import_block","node_testing::client::client","",167,[[["randomstate",3],["blockimportparams",3],["hashmap",3],["vec",3]],[["importresult",4],["result",4]]]],[11,"check_block","","",167,[[["blockcheckparams",3]],[["importresult",4],["result",4]]]],[11,"call","","",166,[[["blockid",4],["executionstrategy",4],["extensions",3],["option",4]],[["result",4],["vec",3],["error",4]]]],[11,"contextual_call","","",166,[[["option",4],["executionmanager",4],["refcell",3],["refcell",3],["initializeblock",4],["blockid",4],["option",4],["extensions",3],["option",4],["option",4]],[["result",4],["error",4],["nativeorencoded",4]]]],[11,"runtime_version","","",166,[[["blockid",4]],[["error",4],["result",4],["runtimeversion",3]]]],[11,"prove_at_trie_state","","",166,[[["overlayedchanges",3],["triebackend",3]],[["error",4],["result",4]]]],[11,"native_runtime_version","","",166,[[],[["nativeversion",3],["option",4]]]],[11,"uncles","","",167,[[],[["error",4],["result",4],["vec",3]]]],[11,"executor","","",167,[[]]],[11,"execution_extensions","","",167,[[],["executionextensions",3]]],[11,"block_status","","",167,[[["blockid",4]],[["box",3],["result",4],["blockstatus",4]]]],[11,"clone","","",105,[[],["clientconfig",3]]],[11,"clone","","",166,[[],["localcallexecutor",3]]],[11,"clone","node_testing::client","",164,[[],["rpchandlers",3]]],[11,"clone","","",165,[[],["rpcsession",3]]],[11,"cache","node_testing::client::client","",167,[[],[["arc",3],["option",4]]]],[11,"apply_finality","","",167,[[["clientimportoperation",3],["vec",3],["option",4],["blockid",4]],[["error",4],["result",4]]]],[11,"finalize_block","","",167,[[["vec",3],["option",4],["blockid",4]],[["error",4],["result",4]]]],[11,"import_notification_stream","","Get block import event stream.",167,[[],[["tracingunboundedreceiver",3],["blockimportnotification",3]]]],[11,"finality_notification_stream","","",167,[[],[["finalitynotification",3],["tracingunboundedreceiver",3]]]],[11,"storage_changes_notification_stream","","Get storage changes event stream.",167,[[["option",4],["option",4]],[["result",4],["tracingunboundedreceiver",3],["error",4]]]],[11,"native_version","","",166,[[],["nativeversion",3]]],[11,"runtime_version","","",166,[[["blockid",4]],[["result",4],["string",3],["runtimeversion",3]]]],[11,"lock_import_and_run","","",167,[[],["result",4]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",105,[[],["clientconfig",3]]],[11,"read_proof","","",167,[[["blockid",4],["iterator",8]],[["error",4],["result",4],["storageproof",3]]]],[11,"read_child_proof","","",167,[[["blockid",4],["childinfo",4],["iterator",8]],[["error",4],["result",4],["storageproof",3]]]],[11,"execution_proof","","",167,[[["blockid",4]],[["error",4],["result",4]]]],[11,"header_proof","","",167,[[["blockid",4]],[["error",4],["result",4]]]],[11,"key_changes_proof","","",167,[[["option",4],["storagekey",3],["prefixedstoragekey",3]],[["error",4],["changesproof",3],["result",4]]]],[11,"runtime_api","","",167,[[],["apiref",3]]],[11,"header","","",167,[[["blockid",4]],[["option",4],["error",4],["result",4]]]],[11,"info","","",167,[[],["info",3]]],[11,"status","","",167,[[["blockid",4]],[["blockstatus",4],["result",4],["error",4]]]],[11,"number","","",167,[[],[["error",4],["option",4],["result",4]]]],[11,"hash","","",167,[[],[["result",4],["option",4],["error",4]]]],[11,"storage_keys","","",167,[[["blockid",4],["storagekey",3]],[["error",4],["vec",3],["result",4]]]],[11,"storage_pairs","","",167,[[["blockid",4],["storagekey",3]],[["vec",3],["result",4],["error",4]]]],[11,"storage_keys_iter","","",167,[[["blockid",4],["option",4],["storagekey",3],["storagekey",3],["option",4]],[["error",4],["keyiterator",3],["result",4]]]],[11,"storage","","",167,[[["blockid",4],["storagekey",3]],[["error",4],["result",4],["option",4]]]],[11,"storage_hash","","",167,[[["blockid",4],["storagekey",3]],[["result",4],["option",4],["error",4]]]],[11,"child_storage_keys","","",167,[[["blockid",4],["childinfo",4],["storagekey",3]],[["error",4],["vec",3],["result",4]]]],[11,"child_storage","","",167,[[["blockid",4],["childinfo",4],["storagekey",3]],[["error",4],["result",4],["option",4]]]],[11,"child_storage_hash","","",167,[[["blockid",4],["childinfo",4],["storagekey",3]],[["result",4],["option",4],["error",4]]]],[11,"max_key_changes_range","","",167,[[["blockid",4]],[["result",4],["option",4],["error",4]]]],[11,"key_changes","","",167,[[["storagekey",3],["option",4],["prefixedstoragekey",3],["blockid",4]],[["vec",3],["result",4],["error",4]]]],[11,"header_metadata","","",167,[[],[["cachedheadermetadata",3],["result",4]]]],[11,"insert_header_metadata","","",167,[[["cachedheadermetadata",3]]]],[11,"remove_header_metadata","","",167,[[]]],[11,"to_hash","","",167,[[["blockid",4]],[["result",4],["option",4],["error",4]]]],[11,"to_number","","",167,[[["blockid",4]],[["error",4],["option",4],["result",4]]]],[11,"block_body","","",167,[[["blockid",4]],[["result",4],["option",4],["error",4]]]],[11,"block","","",167,[[["blockid",4]],[["error",4],["option",4],["result",4]]]],[11,"block_status","","",167,[[["blockid",4]],[["error",4],["result",4],["blockstatus",4]]]],[11,"justification","","",167,[[["blockid",4]],[["result",4],["option",4],["error",4]]]],[11,"block_hash","","",167,[[],[["result",4],["option",4],["error",4]]]],[11,"extrinsic","","",167,[[],[["result",4],["error",4],["option",4]]]],[11,"have_extrinsic","","",167,[[],[["result",4],["error",4]]]],[11,"insert_aux","","Insert auxiliary data into key-value store.",167,[[],[["error",4],["result",4]]]],[11,"get_aux","","Query auxiliary data from key-value store.",167,[[],[["result",4],["option",4],["error",4]]]],[11,"call_api_at","","",167,[[["callapiatparams",3]],[["result",4],["apierror",4],["nativeorencoded",4]]]],[11,"runtime_version_at","","",167,[[["blockid",4]],[["apierror",4],["result",4],["runtimeversion",3]]]],[11,"usage_info","","Get usage info about current client.",167,[[],["clientinfo",3]]],[11,"new_block_at","","",167,[[["blockid",4],["digest",3]],[["result",4],["blockbuilder",3],["error",4]]]],[11,"new_block","","",167,[[["digest",3]],[["result",4],["blockbuilder",3],["error",4]]]],[11,"hash","node_testing::client","",100,[[]]],[11,"hash","","",99,[[]]],[11,"clone","","",99,[[],["keyring",4]]],[11,"clone","","",100,[[],["keyring",4]]],[11,"from_str","","",99,[[],[["result",4],["keyring",4]]]],[11,"as_ref","","",100,[[],["public",3]]],[11,"as_ref","","",99,[[],["public",3]]],[11,"as_ref","","",99,[[]]],[11,"as_ref","","",100,[[]]],[11,"iter","","",100,[[],["keyringiter",3]]],[11,"iter","","",99,[[],["keyringiter",3]]],[11,"deref","","",99,[[]]],[11,"deref","","",100,[[]]],[11,"eq","","",99,[[["keyring",4]]]],[11,"eq","","",100,[[["keyring",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"import","node_testing::client::client","",167,[[["blockorigin",4]],[["result",4],["error",4]]]],[11,"import_as_best","","",167,[[["blockorigin",4]],[["result",4],["error",4]]]],[11,"import_as_final","","",167,[[["blockorigin",4]],[["result",4],["error",4]]]],[11,"import_justified","","",167,[[["global",3],["vec",3],["blockorigin",4]],[["result",4],["error",4]]]],[11,"default","node_testing::client","",110,[[],[["backend",3],["testclientbuilder",3]]]],[11,"deserialize","","",11,[[],[["rpctransactionerror",3],["result",4]]]],[11,"send_transaction","","",164,[[["opaqueextrinsic",3]],[["pin",3],["box",3]]]],[11,"finalize_block","node_testing::client::client","",167,[[["vec",3],["option",4],["blockid",4]],[["error",4],["result",4]]]],[11,"genesis_hash","","",167,[[]]],[11,"fmt","node_testing::client","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"new","","",110,[[]]],[11,"build","","",110,[[],["client",6]]],[11,"next","node_testing::bench","",109,[[],["option",4]]],[11,"clone","","",4,[[],["benchkeyring",3]]],[11,"clone","","",2,[[]]],[11,"clone","","",0,[[],["blocktype",4]]],[11,"clone","","",107,[[],["blockcontent",3]]],[11,"clone","","",1,[[],["databasetype",4]]],[11,"clone","","",108,[[],["taskexecutor",3]]],[11,"clone","","",5,[[],["profile",4]]],[11,"default","node_testing::client","",168,[[],["genesisparameters",3]]],[11,"eq","node_testing::bench","",0,[[["blocktype",4]]]],[11,"eq","","",1,[[["databasetype",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"spawn","","",108,[[["boxfuture",6]]]],[11,"spawn_blocking","","",108,[[["boxfuture",6]]]],[11,"genesis_storage","node_testing::client","",168,[[],["storage",3]]],[11,"with_default_backend","","Create new <code>TestClientBuilder</code> with default backend.",110,[[],[["backend",3],["testclientbuilder",3]]]],[11,"with_pruning_window","","Create new <code>TestClientBuilder</code> with default backend and …",110,[[],[["backend",3],["testclientbuilder",3]]]],[11,"with_backend","","Create a new instance of the test client builder.",110,[[["arc",3]],["testclientbuilder",3]]],[11,"set_keystore","","Set the keystore that should be used by the externalities.",110,[[["arc",3],["synccryptostore",8]],["testclientbuilder",3]]],[11,"genesis_init_mut","","Alter the genesis storage parameters.",110,[[]]],[11,"backend","","Give access to the underlying backend of these clients",110,[[],["arc",3]]],[11,"add_child_storage","","Extend child storage",110,[[["childinfo",4]],["testclientbuilder",3]]],[11,"set_execution_strategy","","Set the execution strategy that should be used by all …",110,[[["executionstrategy",4]],["testclientbuilder",3]]],[11,"set_block_rules","","Sets custom block rules.",110,[[["option",4],["option",4],["hashset",3],["vec",3]],["testclientbuilder",3]]],[11,"enable_offchain_indexing_api","","Enable the offchain indexing api.",110,[[],["testclientbuilder",3]]],[11,"build_with_executor","","Build the test client with the given native executor.",110,[[]]],[11,"build_with_native_executor","","Build the test client with the given native executor.",110,[[]]],[11,"new","","Create new <code>ExecutionExtensions</code> given a <code>keystore</code> and …",111,[[["executionstrategies",3],["arc",3],["option",4]],["executionextensions",3]]],[11,"strategies","","Get a reference to the execution strategies.",111,[[],["executionstrategies",3]]],[11,"set_extensions_factory","","Set the new extensions_factory",111,[[["extensionsfactory",8],["box",3],["global",3]]]],[11,"register_transaction_pool","","Register transaction pool extension.",111,[[["arc",3]]]],[11,"extensions","","Based on the execution context and capabilities it …",111,[[["blockid",4],["executioncontext",4]],["extensions",3]]],[11,"manager_and_extensions","","Create <code>ExecutionManager</code> and <code>Extensions</code> for given offchain …",111,[[["blockid",4],["executioncontext",4]]]],[11,"new","node_testing::client::sc_client_db","Create a new instance of database backend.",112,[[["databasesettings",3]],[["backend",3],["result",4],["error",4]]]],[11,"new_test","","Create new memory-backed client backend for tests.",112,[[],["backend",3]]],[11,"new","node_testing::client::sc_client_db::light","Create new storage with given settings.",113,[[["databasesettings",3]],[["error",4],["result",4],["lightstorage",3]]]],[11,"new_test","","Create new memory-backed <code>LightStorage</code> for tests.",113,[[],["lightstorage",3]]],[11,"new_test","node_testing::client::sc_client_db::offchain","Create new offchain storage for tests (backed by memorydb)",114,[[],["localstorage",3]]],[11,"new","","Create offchain local storage with given <code>KeyValueDB</code> …",114,[[["arc",3],["database",8]],["localstorage",3]]],[11,"new","node_testing::client::sc_client_db","Create a new instance that creates a database in a …",117,[[["storage",3],["option",4]],[["benchmarkingstate",3],["string",3],["result",4]]]],[11,"path","","Return dabase path for databases that are on the disk.",18,[[],[["option",4],["path",3]]]],[11,"supports_ref_counting","","Check if database supports internal ref counting for …",18,[[]]],[11,"keep_blocks","","Create a mode that keeps given number of blocks.",22,[[],["pruningmode",4]]],[11,"is_archive","","Is this an archive (either ArchiveAll or …",22,[[]]],[11,"id","","Is this an archive (either ArchiveAll or …",22,[[]]],[11,"new","node_testing::client::sp_consensus::offline_tracker","Create a new tracker.",122,[[],["offlinetracker",3]]],[11,"note_new_block","","Note new consensus is starting with the given set of …",122,[[]]],[11,"note_round_end","","Note that a round has ended.",122,[[]]],[11,"reports","","Generate a vector of indices for offline account IDs.",122,[[],[["vec",3],["global",3]]]],[11,"check_consistency","","Whether reports on a validator set are consistent with …",122,[[]]],[11,"imported","node_testing::client::sp_consensus","Returns default value for <code>ImportResult::Imported</code> with …",30,[[],["importresult",4]]],[11,"new","","Create a new block import params.",35,[[["blockorigin",4]],["blockimportparams",3]]],[11,"post_hash","","Get the full header hash (with post-digests applied).",35,[[]]],[11,"convert_transaction","","Auxiliary function for \\\"converting\\\" the transaction type.",35,[[],["blockimportparams",3]]],[11,"take_intermediate","","Take intermediate by given key, and remove it from the …",35,[[],[["box",3],["result",4],["error",4]]]],[11,"intermediate","","Get a reference to a given intermediate.",35,[[],[["error",4],["result",4]]]],[11,"intermediate_mut","","Get a mutable reference to a given intermediate.",35,[[],[["error",4],["result",4]]]],[11,"is_closed","node_testing::client::sp_consensus::import_queue::buffered_link","Returns true if the sender points to nowhere.",123,[[]]],[11,"poll_actions","","Polls for the buffered link actions. Any enqueued action …",124,[[["link",8],["context",3]],["result",4]]],[11,"close","","Close the channel.",124,[[]]],[11,"new","node_testing::client::sp_consensus::import_queue","Instantiate a new basic queue, with given verifier.",125,[[["box",3],["option",4],["registry",3],["blockimport",8],["box",3],["global",3],["option",4]],["basicqueue",3]]],[11,"yes","node_testing::client::sp_consensus","Returns if <code>Self</code> == <code>Yes</code>.",51,[[]]],[11,"new","","Creates a new instance of <code>Self</code>.",127,[[],["canauthorwithnativeversion",3]]],[11,"new","","Create a new instance.",130,[[],["inherentdata",3]]],[11,"put_data","","Put data for an inherent into the internal storage.",130,[[],[["result",4],["error",3]]]],[11,"replace_data","","Replace the data for an inherent.",130,[[]]],[11,"get_data","","Returns the data for the requested inherent.",130,[[],[["result",4],["error",3],["option",4]]]],[11,"len","","Get the number of inherents in this instance",130,[[]]],[11,"new","node_testing::client::sc_executor","Create new instance.",131,[[["option",4],["wasmexecutionmethod",4]],["nativeexecutor",3]]],[11,"new","node_testing::client::sc_executor::wasmi","Create new trap.",132,[[["trapkind",4]],["trap",3]]],[11,"kind","","Returns kind of this trap.",132,[[],["trapkind",4]]],[11,"is_host","","Whether this trap is specified by the host.",60,[[]]],[11,"as_host_error","","Returns <code>HostError</code> if this <code>Error</code> represents some host …",61,[[],[["hosterror",8],["option",4]]]],[11,"from_bits","node_testing::client::sc_executor::wasmi::nan_preserving_float","",133,[[],["f32",3]]],[11,"to_bits","","",133,[[]]],[11,"from_float","","",133,[[],["f32",3]]],[11,"to_float","","",133,[[]]],[11,"is_nan","","",133,[[]]],[11,"abs","","",133,[[],["f32",3]]],[11,"fract","","",133,[[],["f32",3]]],[11,"min","","",133,[[["f32",3]],["f32",3]]],[11,"max","","",133,[[["f32",3]],["f32",3]]],[11,"from_bits","","",134,[[],["f64",3]]],[11,"to_bits","","",134,[[]]],[11,"from_float","","",134,[[],["f64",3]]],[11,"to_float","","",134,[[]]],[11,"is_nan","","",134,[[]]],[11,"abs","","",134,[[],["f64",3]]],[11,"fract","","",134,[[],["f64",3]]],[11,"min","","",134,[[["f64",3]],["f64",3]]],[11,"max","","",134,[[["f64",3]],["f64",3]]],[11,"from_parity_wasm_module","node_testing::client::sc_executor::wasmi","Create <code>Module</code> from <code>parity_wasm::elements::Module</code>.",135,[[["module",3]],[["error",4],["module",3],["result",4]]]],[11,"deny_floating_point","","Fail if the module contains any floating-point operations",135,[[],[["error",4],["result",4]]]],[11,"from_buffer","","Create <code>Module</code> from a given buffer.",135,[[],[["error",4],["module",3],["result",4]]]],[11,"alloc_host","","Allocate a function instance for a host function.",136,[[["signature",3]],["funcref",3]]],[11,"signature","","Returns signature of this function instance.",136,[[],["signature",3]]],[11,"invoke","","Invoke this function.",136,[[["funcref",3]],[["result",4],["option",4],["trap",3]]]],[11,"invoke_with_stack","","Invoke this function using recycled stacks.",136,[[["funcref",3],["stackrecycler",3]],[["result",4],["option",4],["trap",3]]]],[11,"invoke_resumable","","Invoke the function, get a resumable handle. This handle …",136,[[["funcref",3]],[["trap",3],["result",4],["funcinvocation",3]]]],[11,"is_resumable","","Whether this invocation is currently resumable.",137,[[]]],[11,"resumable_value_type","","If the invocation is resumable, the expected return value …",137,[[],[["option",4],["valuetype",4]]]],[11,"start_execution","","Start the invocation execution.",137,[[],[["resumableerror",4],["option",4],["result",4]]]],[11,"resume_execution","","Resume an execution if a previous trap of Host kind …",137,[[["option",4],["runtimevalue",4]],[["resumableerror",4],["option",4],["result",4]]]],[11,"alloc","","Allocate a global variable instance.",139,[[["runtimevalue",4]],["globalref",3]]],[11,"set","","Change the value of this global variable.",139,[[["runtimevalue",4]],[["error",4],["result",4]]]],[11,"get","","Get the value of this global variable.",139,[[],["runtimevalue",4]]],[11,"is_mutable","","Returns if this global variable is mutable.",139,[[]]],[11,"value_type","","Returns value type of this global variable.",139,[[],["valuetype",4]]],[11,"downcast_ref","","Attempt to downcast this <code>HostError</code> to a concrete type by …",169,[[],["option",4]]],[11,"downcast_mut","","Attempt to downcast this <code>HostError</code> to a concrete type by …",169,[[],["option",4]]],[11,"nth_checked","","Extract argument by index <code>idx</code>.",142,[[],[["result",4],["trap",3]]]],[11,"nth_value_checked","","Extract argument as a <code>RuntimeValue</code> by index <code>idx</code>.",142,[[],[["runtimevalue",4],["result",4],["trap",3]]]],[11,"nth","","Extract argument by index <code>idx</code>.",142,[[]]],[11,"len","","Total number of arguments",142,[[]]],[11,"new","","Create an empty <code>ImportsBuilder</code>.",143,[[],["importsbuilder",3]]],[11,"with_resolver","","Register an resolver by a name.",143,[[["moduleimportresolver",8]],["importsbuilder",3]]],[11,"push_resolver","","Register an resolver by a name.",143,[[["moduleimportresolver",8]]]],[11,"alloc","","Allocate a memory instance.",144,[[["option",4],["pages",3]],[["result",4],["memoryref",3],["error",4]]]],[11,"initial","","Returns number of pages this <code>MemoryInstance</code> was created …",144,[[],["pages",3]]],[11,"maximum","","Returns maximum amount of pages this <code>MemoryInstance</code> can …",144,[[],[["option",4],["pages",3]]]],[11,"current_size","","Returns current linear memory size.",144,[[],["pages",3]]],[11,"get_value","","Get value from memory at given offset.",144,[[],[["result",4],["error",4]]]],[11,"get","","Copy data from memory at given offset.",144,[[],[["vec",3],["result",4],["error",4]]]],[11,"get_into","","Copy data from given offset in the memory into <code>target</code> …",144,[[],[["error",4],["result",4]]]],[11,"set","","Copy data in the memory at given offset.",144,[[],[["error",4],["result",4]]]],[11,"set_value","","Copy value in the memory at given offset.",144,[[],[["error",4],["result",4]]]],[11,"grow","","Increases the size of the linear memory by given number …",144,[[["pages",3]],[["error",4],["result",4],["pages",3]]]],[11,"copy","","Copy contents of one memory region to another.",144,[[],[["error",4],["result",4]]]],[11,"copy_nonoverlapping","","Copy contents of one memory region to another …",144,[[],[["error",4],["result",4]]]],[11,"transfer","","Copy memory between two (possibly distinct) memory …",144,[[["memoryref",3]],[["error",4],["result",4]]]],[11,"clear","","Fill the memory region with the specified value.",144,[[],[["error",4],["result",4]]]],[11,"zero","","Fill the specified memory region with zeroes.",144,[[],[["error",4],["result",4]]]],[11,"erase","","Set every byte in the entire linear memory to 0, …",144,[[],[["error",4],["result",4]]]],[11,"with_direct_access","","Provides direct access to the underlying memory buffer.",144,[[]]],[11,"with_direct_access_mut","","Provides direct mutable access to the underlying memory …",144,[[]]],[11,"as_func","","Get underlying function reference if this <code>ExternVal</code> …",71,[[],[["option",4],["funcref",3]]]],[11,"as_table","","Get underlying table reference if this <code>ExternVal</code> contains …",71,[[],[["tableref",3],["option",4]]]],[11,"as_memory","","Get underlying memory reference if this <code>ExternVal</code> contains…",71,[[],[["option",4],["memoryref",3]]]],[11,"as_global","","Get underlying global variable reference if this <code>ExternVal</code>…",71,[[],[["globalref",3],["option",4]]]],[11,"globals","","Access all globals. This is a non-standard API so it\'s …",146,[[],[["ref",3],["vec",3]]]],[11,"with_externvals","","Instantiate a module with given external values as …",146,[[["module",3]],[["notstartedmoduleref",3],["result",4],["error",4]]]],[11,"new","","Instantiate a module.",146,[[["module",3]],[["notstartedmoduleref",3],["result",4],["error",4]]]],[11,"invoke_export","","Invoke exported function by a name.",146,[[],[["error",4],["option",4],["result",4]]]],[11,"invoke_export_with_stack","","Invoke exported function by a name using recycled stacks.",146,[[["stackrecycler",3]],[["error",4],["option",4],["result",4]]]],[11,"export_by_name","","Find export by a name.",146,[[],[["option",4],["externval",4]]]],[11,"not_started_instance","","Returns not fully initialized instance.",148,[[],["moduleref",3]]],[11,"run_start","","Executes <code>start</code> function (if any) and returns fully …",148,[[],[["trap",3],["result",4],["moduleref",3]]]],[11,"assert_no_start","","Returns fully instantiated module without running <code>start</code> …",148,[[],["moduleref",3]]],[11,"has_start","","Whether or not the module has a <code>start</code> function.",148,[[]]],[11,"with_limits","","Limit stacks created by this recycler to",149,[[],["stackrecycler",3]]],[11,"clear","","Clears any values left on the stack to avoid leaking them …",149,[[]]],[11,"alloc","","Allocate a table instance.",150,[[["option",4]],[["result",4],["tableref",3],["error",4]]]],[11,"initial_size","","Returns size this table was created with.",150,[[]]],[11,"maximum_size","","Returns maximum size <code>TableInstance</code> can grow to.",150,[[],["option",4]]],[11,"current_size","","Returns current size of the table.",150,[[]]],[11,"grow","","Increases the size of the table by given number of …",150,[[],[["error",4],["result",4]]]],[11,"get","","Get the specific value in the table",150,[[],[["option",4],["result",4],["error",4]]]],[11,"set","","Set the table element to the specified function.",150,[[["option",4],["funcref",3]],[["error",4],["result",4]]]],[11,"value_type","","Returns <code>ValueType</code> of the requested global.",152,[[],["valuetype",4]]],[11,"is_mutable","","Returns whether the requested global mutable.",152,[[]]],[11,"initial","","Returns initial size (in pages) of the requested memory.",153,[[]]],[11,"maximum","","Returns maximum size (in pages) of the requested memory.",153,[[],["option",4]]],[11,"new","","Creates new signature with givens parameter types and …",154,[[["option",4],["valuetype",4]],["signature",3]]],[11,"params","","Returns parameter types of this signature.",154,[[]]],[11,"return_type","","Returns return type of this signature.",154,[[],[["option",4],["valuetype",4]]]],[11,"initial","","Returns initial size of the requested table.",155,[[]]],[11,"maximum","","Returns maximum size of the requested table.",155,[[],["option",4]]],[11,"default","","Creates new default value of given type.",76,[[["valuetype",4]],["runtimevalue",4]]],[11,"decode_f32","","Creates new value by interpreting passed u32 as f32.",76,[[],["runtimevalue",4]]],[11,"decode_f64","","Creates new value by interpreting passed u64 as f64.",76,[[],["runtimevalue",4]]],[11,"value_type","","Get variable type for this value.",76,[[],["valuetype",4]]],[11,"try_into","","Returns <code>T</code> if this particular <code>RuntimeValue</code> contains …",76,[[],["option",4]]],[11,"new","node_testing::client::sc_executor","Create new instance.",156,[[["vec",3],["function",8],["option",4],["option",4],["global",3],["pathbuf",3],["wasmexecutionmethod",4]],["wasmexecutor",3]]],[11,"can_call_with","","Check if this version matches other version for calling …",78,[[["runtimeversion",3]]]],[11,"has_api_with","","Check if the given api with <code>api_id</code> is implemented and the …",78,[[]]],[11,"can_author_with","","Check if this version matches other version for authoring …",79,[[["runtimeversion",3]],[["string",3],["result",4]]]],[11,"value_type","node_testing::client::sc_executor::sp_wasm_interface","Returns the type of this value.",83,[[],["valuetype",4]]],[11,"as_i32","","Return <code>Self</code> as <code>i32</code>.",83,[[],["option",4]]],[11,"new","","Create a new instance of <code>Self</code>.",157,[[],["pointer",3]]],[11,"offset","","Calculate the offset from this pointer.",157,[[],[["option",4],["pointer",3]]]],[11,"null","","Create a null pointer.",157,[[],["pointer",3]]],[11,"cast","","Cast this pointer of type <code>T</code> to a pointer of type <code>R</code>.",157,[[],["pointer",3]]],[11,"new","","Create a new instance of <code>Signature</code>.",85,[[["valuetype",4],["option",4]],["signature",3]]],[11,"new_with_args","","Create a new instance of <code>Signature</code> with the given <code>args</code> …",85,[[],["signature",3]]],[18,"ENCODED_MAX_SIZE","","Maximum number of bytes <code>ReturnValue</code> might occupy when …",94,null],[11,"invoke","node_testing::client::sc_executor::sandbox","Invoke an exported function by a name.",160,[[],[["error",4],["option",4],["result",4]]]],[11,"get_global_val","","Get the value from a global with the given <code>name</code>.",160,[[],[["option",4],["value",4]]]],[11,"decode","","Decodes an environment definition from the given raw …",161,[[["store",3]],[["result",4],["guestenvironment",3],["instantiationerror",4]]]],[11,"register","","Finalizes instantiation of this module.",162,[[["store",3]]]],[11,"new","","Create a new empty sandbox store.",163,[[],["store",3]]],[11,"new_memory","","Create a new memory instance and return it\'s index.",163,[[],[["result",4],["error",4]]]],[11,"instance","","Returns <code>SandboxInstance</code> by <code>instance_idx</code>.",163,[[],[["rc",3],["result",4],["error",4]]]],[11,"memory","","Returns reference to a memory instance by <code>memory_idx</code>.",163,[[],[["memoryref",3],["result",4],["error",4]]]],[11,"memory_teardown","","Tear down the memory at the specified index.",163,[[],[["result",4],["error",4]]]],[11,"instance_teardown","","Tear down the instance at the specified index.",163,[[],[["result",4],["error",4]]]],[11,"from_public","node_testing::client","",99,[[["public",3]],[["keyring",4],["option",4]]]],[11,"from_account_id","","",99,[[["accountid32",3]],[["keyring",4],["option",4]]]],[11,"from_raw_public","","",99,[[],[["keyring",4],["option",4]]]],[11,"to_raw_public","","",99,[[]]],[11,"from_h256_public","","",99,[[["h256",3]],[["keyring",4],["option",4]]]],[11,"to_h256_public","","",99,[[],["h256",3]]],[11,"to_raw_public_vec","","",99,[[],[["global",3],["vec",3]]]],[11,"to_account_id","","",99,[[],["accountid32",3]]],[11,"sign","","",99,[[],["signature",3]]],[11,"pair","","",99,[[],["pair",3]]],[11,"iter","","Returns an iterator over all test accounts.",99,[[]]],[11,"public","","",99,[[],["public",3]]],[11,"to_seed","","",99,[[],["string",3]]],[11,"from_public","","",100,[[["public",3]],[["keyring",4],["option",4]]]],[11,"from_account_id","","",100,[[["accountid32",3]],[["keyring",4],["option",4]]]],[11,"from_raw_public","","",100,[[],[["keyring",4],["option",4]]]],[11,"to_raw_public","","",100,[[]]],[11,"from_h256_public","","",100,[[["h256",3]],[["keyring",4],["option",4]]]],[11,"to_h256_public","","",100,[[],["h256",3]]],[11,"to_raw_public_vec","","",100,[[],[["global",3],["vec",3]]]],[11,"to_account_id","","",100,[[],["accountid32",3]]],[11,"sign","","",100,[[],["signature",3]]],[11,"pair","","",100,[[],["pair",3]]],[11,"iter","","Returns an iterator over all test accounts.",100,[[]]],[11,"public","","",100,[[],["public",3]]],[11,"to_seed","","",100,[[],["string",3]]],[11,"get_manager","","Gets the corresponding manager for the execution strategy.",104,[[],["executionmanager",4]]],[11,"rpc_query","","Starts an RPC query.",164,[[["rpcsession",3]],[["pin",3],["box",3]]]],[11,"io_handler","","Provides access to the underlying <code>MetaIoHandler</code>",164,[[],[["arc",3],["metaiohandler",3]]]],[11,"new","","Creates an RPC session.",165,[[["string",3],["sender",3]],["rpcsession",3]]],[11,"new","node_testing::client::client","Creates new instance of local call executor.",166,[[["arc",3],["clientconfig",3],["global",3],["spawnnamed",8],["box",3]],[["localcallexecutor",3],["error",4],["result",4]]]],[11,"new","","Creates new Substrate Client with given blockchain and …",167,[[["buildstorage",8],["executionextensions",3],["registry",3],["option",4],["hashset",3],["vec",3],["arc",3],["option",4],["clientconfig",3],["option",4]],[["result",4],["client",3],["error",4]]]],[11,"import_notification_sinks","","returns a reference to the block import notification sinks…",167,[[],["mutex",3]]],[11,"finality_notification_sinks","","returns a reference to the finality notification sinks …",167,[[],["mutex",3]]],[11,"state_at","","Get a reference to the state at a given block.",167,[[["blockid",4]],[["error",4],["result",4]]]],[11,"code_at","","Get the code at a given block.",167,[[["blockid",4]],[["result",4],["vec",3],["error",4]]]],[11,"runtime_version_at","","Get the RuntimeVersion at a given block.",167,[[["blockid",4]],[["error",4],["result",4],["runtimeversion",3]]]],[11,"header_proof_with_cht_size","","Reads given header and generates CHT-based header proof …",167,[[["blockid",4]],[["error",4],["result",4]]]],[11,"key_changes_proof_with_cht_size","","Does the same work as <code>key_changes_proof</code>, but assumes that …",167,[[["option",4],["storagekey",3],["prefixedstoragekey",3]],[["error",4],["changesproof",3],["result",4]]]],[11,"revert","","Attempts to revert the chain by <code>n</code> blocks guaranteeing …",167,[[],[["result",4],["error",4]]]],[11,"unsafe_revert","","Attempts to revert the chain by <code>n</code> blocks disregarding …",167,[[],[["result",4],["error",4]]]],[11,"chain_info","","Get blockchain info.",167,[[],["info",3]]],[11,"block_status","","Get block status.",167,[[["blockid",4]],[["error",4],["result",4],["blockstatus",4]]]],[11,"header","","Get block header by id.",167,[[["blockid",4]],[["option",4],["error",4],["result",4]]]],[11,"body","","Get block body by id.",167,[[["blockid",4]],[["result",4],["option",4],["error",4]]]],[11,"uncles","","Gets the uncles of the block with <code>target_hash</code> going back …",167,[[],[["result",4],["error",4],["vec",3]]]]],"p":[[4,"BlockType"],[4,"DatabaseType"],[3,"BenchDb"],[4,"KeyTypes"],[3,"BenchKeyring"],[4,"Profile"],[3,"BenchContext"],[8,"ClientExt"],[8,"ClientBlockImportExt"],[8,"GenesisInit"],[3,"RpcTransactionOutput"],[3,"RpcTransactionError"],[8,"RpcHandlersExt"],[8,"BlockchainEventsExt"],[3,"ExecutionStrategies"],[3,"DatabaseSettings"],[4,"KeepBlocks"],[4,"TransactionStorageMode"],[4,"DatabaseSettingsSrc"],[13,"RocksDb"],[13,"ParityDb"],[8,"Database"],[4,"PruningMode"],[8,"Chain"],[4,"Validation"],[13,"Success"],[13,"Failure"],[8,"BlockAnnounceValidator"],[4,"Error"],[13,"IncompatibleAuthoringRuntime"],[4,"ImportResult"],[3,"ImportedAux"],[4,"BlockOrigin"],[4,"ForkChoiceStrategy"],[3,"BlockCheckParams"],[3,"BlockImportParams"],[8,"BlockImport"],[8,"JustificationImport"],[3,"IncomingBlock"],[8,"Verifier"],[8,"ImportQueue"],[8,"Link"],[4,"BlockImportResult"],[4,"BlockImportError"],[4,"Error"],[13,"WrongParentHash"],[13,"WrongNumber"],[13,"ProposalTooLarge"],[4,"BlockStatus"],[8,"Environment"],[3,"Proposal"],[4,"RecordProof"],[8,"Proposer"],[8,"SyncOracle"],[8,"CanAuthorWith"],[8,"SlotData"],[8,"SelectChain"],[8,"StateBackend"],[4,"WasmExecutionMethod"],[8,"RuntimeInfo"],[4,"TrapKind"],[4,"Error"],[8,"ByteSize"],[3,"Bytes"],[8,"RoundUpTo"],[3,"Pages"],[3,"Words"],[4,"ResumableError"],[8,"Externals"],[8,"ImportResolver"],[8,"ModuleImportResolver"],[4,"ExternVal"],[4,"ValueType"],[4,"ValueError"],[8,"FromRuntimeValue"],[8,"LittleEndianConvert"],[4,"RuntimeValue"],[8,"NativeExecutionDispatch"],[3,"RuntimeVersion"],[3,"NativeVersion"],[8,"Externalities"],[8,"CallInWasm"],[4,"ValueType"],[4,"Value"],[8,"PointerType"],[3,"Signature"],[8,"Function"],[8,"FunctionContext"],[8,"Sandbox"],[8,"HostFunctions"],[8,"IntoValue"],[8,"TryFromValue"],[8,"WritePrimitive"],[8,"ReadPrimitive"],[4,"ReturnValue"],[4,"Error"],[4,"WasmError"],[8,"SandboxCapabilities"],[4,"InstantiationError"],[4,"Sr25519Keyring"],[4,"Ed25519Keyring"],[8,"SyncCryptoStore"],[3,"Storage"],[3,"StorageChild"],[4,"ExecutionStrategy"],[3,"ClientConfig"],[8,"TestClientBuilderExt"],[3,"BlockContent"],[3,"TaskExecutor"],[3,"BlockContentIterator"],[3,"TestClientBuilder"],[3,"ExecutionExtensions"],[3,"Backend"],[3,"LightStorage"],[3,"LocalStorage"],[3,"KeyTracker"],[3,"ReadWriteTracker"],[3,"BenchmarkingState"],[3,"RefTrackingState"],[3,"BlockchainDb"],[3,"BlockImportOperation"],[3,"DefaultBlockAnnounceValidator"],[3,"OfflineTracker"],[3,"BufferedLinkSender"],[3,"BufferedLinkReceiver"],[3,"BasicQueue"],[3,"NoNetwork"],[3,"CanAuthorWithNativeVersion"],[3,"AlwaysCanAuthor"],[3,"NeverCanAuthor"],[3,"InherentData"],[3,"NativeExecutor"],[3,"Trap"],[3,"F32"],[3,"F64"],[3,"Module"],[3,"FuncInstance"],[3,"FuncInvocation"],[3,"FuncRef"],[3,"GlobalInstance"],[3,"GlobalRef"],[3,"NopExternals"],[3,"RuntimeArgs"],[3,"ImportsBuilder"],[3,"MemoryInstance"],[3,"MemoryRef"],[3,"ModuleInstance"],[3,"ModuleRef"],[3,"NotStartedModuleRef"],[3,"StackRecycler"],[3,"TableInstance"],[3,"TableRef"],[3,"GlobalDescriptor"],[3,"MemoryDescriptor"],[3,"Signature"],[3,"TableDescriptor"],[3,"WasmExecutor"],[3,"Pointer"],[3,"SupervisorFuncIndex"],[3,"GuestExternals"],[3,"SandboxInstance"],[3,"GuestEnvironment"],[3,"UnregisteredInstance"],[3,"Store"],[3,"RpcHandlers"],[3,"RpcSession"],[3,"LocalCallExecutor"],[3,"Client"],[3,"GenesisParameters"],[8,"HostError"]]},\
"pallet_robonomics_datalog":{"doc":"Simple Robonomics datalog runtime module. This can be …","i":[[0,"pallet","pallet_robonomics_datalog","",null,null],[8,"Config","pallet_robonomics_datalog::pallet","",null,null],[16,"Time","","Current time source.",0,null],[16,"Record","","Datalog record data type.",0,null],[16,"Event","","The overarching event type.",0,null],[4,"Event","","",null,null],[13,"NewRecord","","New data added.",1,null],[13,"Erased","","Account datalog erased.",1,null],[13,"RecordSent","","Record sended to another location.",1,null],[3,"Pallet","","",null,null],[11,"record","","Store new data into blockchain.",2,[[["originfor",6]],["dispatchresultwithpostinfo",6]]],[11,"erase","","Clear account datalog.",2,[[["originfor",6]],["dispatchresultwithpostinfo",6]]],[6,"Module","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.",null,null],[4,"Call","","",null,null],[13,"record","","",3,null],[13,"erase","","",3,null],[11,"datalog","","Time tagged data of given account.",2,[[],[["option",4],["vec",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"blake2_128","","",1,[[]]],[11,"blake2_256","","",1,[[]]],[11,"blake2_128_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",1,[[]]],[11,"twox_256","","",1,[[]]],[11,"twox_64_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"identity","","",1,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"to_keyed_vec","","",1,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",1,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",1,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",1,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unique_saturated_into","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"blake2_128","","",3,[[]]],[11,"blake2_256","","",3,[[]]],[11,"blake2_128_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",3,[[]]],[11,"twox_256","","",3,[[]]],[11,"twox_64_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"identity","","",3,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"to_keyed_vec","","",3,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",3,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",3,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",3,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"equivalent","","",3,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"decode","","",1,[[],[["result",4],["error",3]]]],[11,"decode","","",3,[[],[["result",4],["error",3]]]],[11,"encode_to","","",1,[[]]],[11,"encode_to","","",3,[[]]],[11,"metadata","","",2,[[]]],[11,"get_dispatch_info","","",3,[[],["dispatchinfo",3]]],[11,"get_call_name","","",3,[[]]],[11,"get_call_names","","",3,[[]]],[11,"dispatch_bypass_filter","","",3,[[],["dispatchresultwithpostinfo",6]]],[11,"current_version","","",2,[[],["palletversion",3]]],[11,"storage_version","","",2,[[],[["option",4],["palletversion",3]]]],[11,"integrity_test","","",2,[[]]],[11,"on_finalize","","",2,[[]]],[11,"on_initialize","","",2,[[],["weight",6]]],[11,"on_genesis","","",2,[[]]],[11,"on_runtime_upgrade","","",2,[[],["weight",6]]],[11,"offchain_worker","","",2,[[]]]],"p":[[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"]]},\
"pallet_robonomics_datalog_xcm":{"doc":"XCM version of Robonomics datalog runtime module. This …","i":[[0,"pallet","pallet_robonomics_datalog_xcm","",null,null],[8,"Config","pallet_robonomics_datalog_xcm::pallet","",null,null],[16,"Event","","The overarching event type.",0,null],[16,"XcmSender","","The XCM sender module.",0,null],[16,"Call","","Runtime Call type, used for cross-messaging calls.",0,null],[4,"Event","","",null,null],[13,"RecordSentSuccess","","Record sended to another location.",1,null],[13,"RecordSentFailure","","Record didn\'t sent, error attached.",1,null],[3,"Pallet","","",null,null],[6,"Module","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.",null,null],[4,"Call","","",null,null],[13,"record","","",2,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"blake2_128","","",1,[[]]],[11,"blake2_256","","",1,[[]]],[11,"blake2_128_concat","","",1,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",1,[[]]],[11,"twox_256","","",1,[[]]],[11,"twox_64_concat","","",1,[[],[["vec",3],["global",3]]]],[11,"identity","","",1,[[],[["vec",3],["global",3]]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"to_keyed_vec","","",1,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",1,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",1,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",1,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"equivalent","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unique_saturated_into","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"equivalent","","",3,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"blake2_128","","",2,[[]]],[11,"blake2_256","","",2,[[]]],[11,"blake2_128_concat","","",2,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",2,[[]]],[11,"twox_256","","",2,[[]]],[11,"twox_64_concat","","",2,[[],[["vec",3],["global",3]]]],[11,"identity","","",2,[[],[["vec",3],["global",3]]]],[11,"unique_saturated_into","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"to_keyed_vec","","",2,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",2,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",2,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",2,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"equivalent","","",2,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",2,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",3,[[]]],[11,"eq","","",2,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"decode","","",1,[[],[["result",4],["error",3]]]],[11,"decode","","",2,[[],[["result",4],["error",3]]]],[11,"encode_to","","",1,[[]]],[11,"encode_to","","",2,[[]]],[11,"metadata","","",3,[[]]],[11,"get_dispatch_info","","",2,[[],["dispatchinfo",3]]],[11,"get_call_name","","",2,[[]]],[11,"get_call_names","","",2,[[]]],[11,"dispatch_bypass_filter","","",2,[[],["dispatchresultwithpostinfo",6]]],[11,"current_version","","",3,[[],["palletversion",3]]],[11,"storage_version","","",3,[[],[["option",4],["palletversion",3]]]],[11,"integrity_test","","",3,[[]]],[11,"on_finalize","","",3,[[]]],[11,"on_initialize","","",3,[[],["weight",6]]],[11,"on_genesis","","",3,[[]]],[11,"on_runtime_upgrade","","",3,[[],["weight",6]]],[11,"offchain_worker","","",3,[[]]]],"p":[[8,"Config"],[4,"Event"],[4,"Call"],[3,"Pallet"]]},\
"pallet_robonomics_digital_twin":{"doc":"Digital twin runtime module. This can be compiled with …","i":[[0,"pallet","pallet_robonomics_digital_twin","",null,null],[8,"Config","pallet_robonomics_digital_twin::pallet","",null,null],[16,"Event","","The overarching event type.",0,null],[4,"Event","","",null,null],[13,"NewDigitalTwin","","New digital twin was registered: [sender, id].",1,null],[13,"TopicChanged","","Digital twin topic was changed: [sender, id, topic, source…",1,null],[3,"Pallet","","",null,null],[11,"create","","Create new digital twin.",2,[[["originfor",6]],["dispatchresultwithpostinfo",6]]],[11,"set_source","","Set data source account for difital twin.",2,[[["originfor",6],["h256",3]],["dispatchresultwithpostinfo",6]]],[6,"Module","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.",null,null],[4,"Call","","",null,null],[13,"create","","",3,null],[13,"set_source","","",3,null],[11,"total","","Total count of registered digital twins.",2,[[],["option",4]]],[11,"owner","","Get owner of digital twin with given id.",2,[[],["option",4]]],[11,"digital_twin","","Get internal structure of difital twin in format: topic …",2,[[],[["option",4],["btreemap",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"blake2_128","","",1,[[]]],[11,"blake2_256","","",1,[[]]],[11,"blake2_128_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",1,[[]]],[11,"twox_256","","",1,[[]]],[11,"twox_64_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"identity","","",1,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"to_keyed_vec","","",1,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",1,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",1,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",1,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unique_saturated_into","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"blake2_128","","",3,[[]]],[11,"blake2_256","","",3,[[]]],[11,"blake2_128_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",3,[[]]],[11,"twox_256","","",3,[[]]],[11,"twox_64_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"identity","","",3,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"to_keyed_vec","","",3,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",3,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",3,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",3,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"equivalent","","",3,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"decode","","",1,[[],[["error",3],["result",4]]]],[11,"decode","","",3,[[],[["error",3],["result",4]]]],[11,"encode_to","","",1,[[]]],[11,"encode_to","","",3,[[]]],[11,"metadata","","",2,[[]]],[11,"get_dispatch_info","","",3,[[],["dispatchinfo",3]]],[11,"get_call_name","","",3,[[]]],[11,"get_call_names","","",3,[[]]],[11,"dispatch_bypass_filter","","",3,[[],["dispatchresultwithpostinfo",6]]],[11,"current_version","","",2,[[],["palletversion",3]]],[11,"storage_version","","",2,[[],[["palletversion",3],["option",4]]]],[11,"integrity_test","","",2,[[]]],[11,"on_finalize","","",2,[[]]],[11,"on_initialize","","",2,[[],["weight",6]]],[11,"on_genesis","","",2,[[]]],[11,"on_runtime_upgrade","","",2,[[],["weight",6]]],[11,"offchain_worker","","",2,[[]]]],"p":[[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"]]},\
"pallet_robonomics_launch":{"doc":"Simple robot launch runtime module. This can be compiled …","i":[[0,"pallet","pallet_robonomics_launch","",null,null],[8,"Config","pallet_robonomics_launch::pallet","",null,null],[16,"Parameter","","Robot launch parameter data type.",0,null],[16,"Event","","The overarching event type.",0,null],[4,"Event","","",null,null],[13,"NewLaunch","","Launch a robot with given parameter: sender, robot, …",1,null],[3,"Pallet","","",null,null],[11,"launch","","Launch a robot with given parameter.",2,[[["originfor",6]],["dispatchresultwithpostinfo",6]]],[6,"Module","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.",null,null],[4,"Call","","",null,null],[13,"launch","","",3,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"blake2_128","","",1,[[]]],[11,"blake2_256","","",1,[[]]],[11,"blake2_128_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",1,[[]]],[11,"twox_256","","",1,[[]]],[11,"twox_64_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"identity","","",1,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"to_keyed_vec","","",1,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",1,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",1,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",1,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unique_saturated_into","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"blake2_128","","",3,[[]]],[11,"blake2_256","","",3,[[]]],[11,"blake2_128_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",3,[[]]],[11,"twox_256","","",3,[[]]],[11,"twox_64_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"identity","","",3,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"to_keyed_vec","","",3,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",3,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",3,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",3,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"equivalent","","",3,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"decode","","",1,[[],[["result",4],["error",3]]]],[11,"decode","","",3,[[],[["result",4],["error",3]]]],[11,"encode_to","","",1,[[]]],[11,"encode_to","","",3,[[]]],[11,"metadata","","",2,[[]]],[11,"get_dispatch_info","","",3,[[],["dispatchinfo",3]]],[11,"get_call_name","","",3,[[]]],[11,"get_call_names","","",3,[[]]],[11,"dispatch_bypass_filter","","",3,[[],["dispatchresultwithpostinfo",6]]],[11,"current_version","","",2,[[],["palletversion",3]]],[11,"storage_version","","",2,[[],[["option",4],["palletversion",3]]]],[11,"integrity_test","","",2,[[]]],[11,"on_finalize","","",2,[[]]],[11,"on_initialize","","",2,[[],["weight",6]]],[11,"on_genesis","","",2,[[]]],[11,"on_runtime_upgrade","","",2,[[],["weight",6]]],[11,"offchain_worker","","",2,[[]]]],"p":[[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"]]},\
"pallet_robonomics_launch_xcm":{"doc":"Simple Robonomics launch runtime module. This can be …","i":[[0,"pallet","pallet_robonomics_launch_xcm","",null,null],[8,"Config","pallet_robonomics_launch_xcm::pallet","",null,null],[16,"Event","","The overarching event type.",0,null],[16,"XcmSender","","The XCM sender module.",0,null],[16,"Call","","Runtime Call type, used for cross-messaging calls.",0,null],[4,"Event","","",null,null],[13,"LaunchSentSuccess","","Launch request sended to another location.",1,null],[13,"LaunchSentFailure","","Launch request didn\'t sent, error attached.",1,null],[3,"Pallet","","",null,null],[11,"launch","","",2,[[["originfor",6]],["dispatchresultwithpostinfo",6]]],[6,"Module","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.",null,null],[4,"Call","","",null,null],[13,"launch","","",3,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"blake2_128","","",1,[[]]],[11,"blake2_256","","",1,[[]]],[11,"blake2_128_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",1,[[]]],[11,"twox_256","","",1,[[]]],[11,"twox_64_concat","","",1,[[],[["global",3],["vec",3]]]],[11,"identity","","",1,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"to_keyed_vec","","",1,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",1,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",1,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",1,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unique_saturated_into","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"blake2_128","","",3,[[]]],[11,"blake2_256","","",3,[[]]],[11,"blake2_128_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",3,[[]]],[11,"twox_256","","",3,[[]]],[11,"twox_64_concat","","",3,[[],[["global",3],["vec",3]]]],[11,"identity","","",3,[[],[["global",3],["vec",3]]]],[11,"unique_saturated_into","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"to_keyed_vec","","",3,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",3,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",3,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",3,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"equivalent","","",3,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"decode","","",1,[[],[["result",4],["error",3]]]],[11,"decode","","",3,[[],[["result",4],["error",3]]]],[11,"encode_to","","",1,[[]]],[11,"encode_to","","",3,[[]]],[11,"metadata","","",2,[[]]],[11,"get_dispatch_info","","",3,[[],["dispatchinfo",3]]],[11,"get_call_name","","",3,[[]]],[11,"get_call_names","","",3,[[]]],[11,"dispatch_bypass_filter","","",3,[[],["dispatchresultwithpostinfo",6]]],[11,"current_version","","",2,[[],["palletversion",3]]],[11,"storage_version","","",2,[[],[["palletversion",3],["option",4]]]],[11,"integrity_test","","",2,[[]]],[11,"on_finalize","","",2,[[]]],[11,"on_initialize","","",2,[[],["weight",6]]],[11,"on_genesis","","",2,[[]]],[11,"on_runtime_upgrade","","",2,[[],["weight",6]]],[11,"offchain_worker","","",2,[[]]]],"p":[[8,"Config"],[4,"Event"],[3,"Pallet"],[4,"Call"]]},\
"pallet_robonomics_liability":{"doc":"The Robonomics runtime module. This can be compiled with …","i":[[0,"economics","pallet_robonomics_liability","Set of approaches to handle economical aspects of …",null,null],[3,"Communism","pallet_robonomics_liability::economics","Well, when we get communism it\'ll all be fucking great. …",null,null],[3,"OpenMarket","","Open market as approach for liability price estimation.",null,null],[0,"signed","pallet_robonomics_liability","Signed liability implementation.",null,null],[3,"SignedLiability","pallet_robonomics_liability::signed","Agreement that could be proven by asymmetric cryptography.",null,null],[3,"AppProofSigner","","Runtime AppCrypto proof builder.",null,null],[3,"ProofSigner","","Core crypto proof builder.",null,null],[0,"technics","pallet_robonomics_liability","Set of approaches to handle technical aspects of …",null,null],[3,"PureIPFS","pallet_robonomics_liability::technics","Using IPFS to handle technical aspects of agreement …",null,null],[0,"traits","pallet_robonomics_liability","Robonomics runtime traits definitions.",null,null],[8,"Technical","pallet_robonomics_liability::traits","Technical aspects of agreement between two parties.",null,null],[16,"Parameter","","Technical parameter of agreement. Usually in this …",0,null],[16,"Report","","During execution one part of agreement should prepare …",0,null],[16,"Oracle","","Someone who can confirm task execution in real world.",0,null],[8,"RealWorldOracle","","The arbiter of the real world.",null,null],[8,"Economical","","Economical aspects of agreement between two parties.",null,null],[16,"Parameter","","Economical parameter of agreement. Usually in this …",1,null],[8,"Processing","","Transaction processing for economical aspects of …",null,null],[10,"on_start","","This method called each time when liability started.",2,[[],["dispatchresult",6]]],[10,"on_finish","","This method called each time when liability finished.",2,[[],["dispatchresult",6]]],[8,"Agreement","","Agreement between two participants around …",null,null],[16,"Index","","Indexing type.",3,null],[16,"AccountId","","Pariticipant account address.",3,null],[16,"Proof","","Some that could be used as proof of participants …",3,null],[10,"new","","Create new instance for given technical and economical …",3,[[]]],[10,"check_params","","Check validity of agreement params proof.",3,[[]]],[10,"check_report","","Check validity of agreement report proof.",3,[[]]],[8,"ProofBuilder","","Agreement proovement maker.",null,null],[10,"proof_params","","Make proof of technical and economical agreement …",4,[[]]],[10,"proof_report","","Make proof of technical report agrement parameter.",4,[[]]],[0,"pallet","pallet_robonomics_liability","",null,null],[6,"TechnicalParam","pallet_robonomics_liability::pallet","Type synonym for technical trait parameter.",null,null],[6,"TechnicalReport","","Type synonym for technical report trait parameter.",null,null],[6,"EconomicalParam","","Type synonym for economical trait parameter.",null,null],[6,"ProofParam","","Type synonym for liability proof parameter.",null,null],[6,"LiabilityIndex","","",null,null],[8,"Config","","",null,null],[16,"Technics","","Technical aspects of agreement.",5,null],[16,"Economics","","Economical aspects of agreement.",5,null],[16,"Liability","","How to make and process agreement between two parties.",5,null],[16,"Event","","The overarching event type.",5,null],[4,"Event","","",null,null],[13,"NewLiability","","Yay! New liability created.",6,null],[13,"NewReport","","Liability report published.",6,null],[4,"Error","","",null,null],[13,"BadPromisorProof","","Promisor agreement proof verification failed",7,null],[13,"BadPromiseeProof","","Promisee agreement proof verification failed",7,null],[13,"BadReportProof","","Promisor report proof verification failed",7,null],[13,"LiabilityDecodeFailure","","Unable to decode liability at given index",7,null],[3,"Pallet","","",null,null],[11,"create","","Create agreement between two parties.",8,[[["economicalparam",6],["proofparam",6],["originfor",6],["technicalparam",6]],["dispatchresultwithpostinfo",6]]],[11,"finalize","","Publish technical report of complite works.",8,[[["liabilityindex",6],["proofparam",6],["originfor",6],["technicalreport",6]],["dispatchresultwithpostinfo",6]]],[6,"Module","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.",null,null],[4,"Call","","",null,null],[13,"create","","",9,null],[13,"finalize","","",9,null],[11,"as_u8","","",7,[[]]],[11,"as_str","","",7,[[]]],[11,"latest_index","","Latest liability index.",8,[[],[["liabilityindex",6],["option",4]]]],[11,"liability_of","","SCALE-encoded liability parameters.",8,[[],[["option",4],["vec",3]]]],[11,"report_of","","SCALE-encoded liability report.",8,[[],[["option",4],["vec",3]]]],[11,"from","pallet_robonomics_liability::economics","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"unique_saturated_into","","",10,[[]]],[11,"from_ref","","",10,[[]]],[11,"into_ref","","",10,[[]]],[11,"from_mut","","",10,[[]]],[11,"into_mut","","",10,[[]]],[11,"unchecked_into","","",10,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"unique_saturated_into","","",11,[[]]],[11,"from_ref","","",11,[[]]],[11,"into_ref","","",11,[[]]],[11,"from_mut","","",11,[[]]],[11,"into_mut","","",11,[[]]],[11,"unchecked_into","","",11,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","pallet_robonomics_liability::signed","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"blake2_128","","",12,[[]]],[11,"blake2_256","","",12,[[]]],[11,"blake2_128_concat","","",12,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",12,[[]]],[11,"twox_256","","",12,[[]]],[11,"twox_64_concat","","",12,[[],[["vec",3],["global",3]]]],[11,"identity","","",12,[[],[["vec",3],["global",3]]]],[11,"unique_saturated_into","","",12,[[]]],[11,"from_ref","","",12,[[]]],[11,"into_ref","","",12,[[]]],[11,"from_mut","","",12,[[]]],[11,"into_mut","","",12,[[]]],[11,"to_keyed_vec","","",12,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",12,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",12,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",12,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",12,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[]]],[11,"vzip","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"unique_saturated_into","","",13,[[]]],[11,"from_ref","","",13,[[]]],[11,"into_ref","","",13,[[]]],[11,"from_mut","","",13,[[]]],[11,"into_mut","","",13,[[]]],[11,"unchecked_into","","",13,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"unique_saturated_into","","",14,[[]]],[11,"from_ref","","",14,[[]]],[11,"into_ref","","",14,[[]]],[11,"from_mut","","",14,[[]]],[11,"into_mut","","",14,[[]]],[11,"unchecked_into","","",14,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from","pallet_robonomics_liability::technics","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"unique_saturated_into","","",15,[[]]],[11,"from_ref","","",15,[[]]],[11,"into_ref","","",15,[[]]],[11,"from_mut","","",15,[[]]],[11,"into_mut","","",15,[[]]],[11,"unchecked_into","","",15,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from","pallet_robonomics_liability::pallet","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"blake2_128","","",6,[[]]],[11,"blake2_256","","",6,[[]]],[11,"blake2_128_concat","","",6,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",6,[[]]],[11,"twox_256","","",6,[[]]],[11,"twox_64_concat","","",6,[[],[["vec",3],["global",3]]]],[11,"identity","","",6,[[],[["vec",3],["global",3]]]],[11,"unique_saturated_into","","",6,[[]]],[11,"from_ref","","",6,[[]]],[11,"into_ref","","",6,[[]]],[11,"from_mut","","",6,[[]]],[11,"into_mut","","",6,[[]]],[11,"to_keyed_vec","","",6,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",6,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",6,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",6,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",6,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[]]],[11,"vzip","","",6,[[]]],[11,"__clone_box","","",6,[[["private",3]]]],[11,"equivalent","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"with_weight","","",7,[[],[["dispatcherrorwithpostinfo",3],["postdispatchinfo",3]]]],[11,"unique_saturated_into","","",7,[[]]],[11,"from_ref","","",7,[[]]],[11,"into_ref","","",7,[[]]],[11,"from_mut","","",7,[[]]],[11,"into_mut","","",7,[[]]],[11,"unchecked_into","","",7,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"unique_saturated_into","","",8,[[]]],[11,"from_ref","","",8,[[]]],[11,"into_ref","","",8,[[]]],[11,"from_mut","","",8,[[]]],[11,"into_mut","","",8,[[]]],[11,"unchecked_into","","",8,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[]]],[11,"vzip","","",8,[[]]],[11,"__clone_box","","",8,[[["private",3]]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"blake2_128","","",9,[[]]],[11,"blake2_256","","",9,[[]]],[11,"blake2_128_concat","","",9,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",9,[[]]],[11,"twox_256","","",9,[[]]],[11,"twox_64_concat","","",9,[[],[["vec",3],["global",3]]]],[11,"identity","","",9,[[],[["vec",3],["global",3]]]],[11,"unique_saturated_into","","",9,[[]]],[11,"from_ref","","",9,[[]]],[11,"into_ref","","",9,[[]]],[11,"from_mut","","",9,[[]]],[11,"into_mut","","",9,[[]]],[11,"to_keyed_vec","","",9,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",9,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",9,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",9,[[],[["result",4],["error",3]]]],[11,"unchecked_into","","",9,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[]]],[11,"vzip","","",9,[[]]],[11,"__clone_box","","",9,[[["private",3]]]],[11,"equivalent","","",9,[[]]],[11,"on_start","pallet_robonomics_liability::signed","",12,[[],["dispatchresult",6]]],[11,"on_finish","","",12,[[],["dispatchresult",6]]],[11,"on_start","","",12,[[],["dispatchresult",6]]],[11,"on_finish","","",12,[[],["dispatchresult",6]]],[11,"new","","",12,[[]]],[11,"check_params","","",12,[[]]],[11,"check_report","","",12,[[]]],[11,"proof_params","","",13,[[]]],[11,"proof_report","","",13,[[]]],[11,"proof_params","","",14,[[]]],[11,"proof_report","","",14,[[]]],[11,"clone","pallet_robonomics_liability::pallet","",6,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"eq","pallet_robonomics_liability::signed","",12,[[["signedliability",3]]]],[11,"ne","","",12,[[["signedliability",3]]]],[11,"eq","pallet_robonomics_liability::pallet","",6,[[]]],[11,"eq","","",8,[[]]],[11,"eq","","",9,[[]]],[11,"fmt","pallet_robonomics_liability::signed","",12,[[["formatter",3]],["result",6]]],[11,"fmt","pallet_robonomics_liability::pallet","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"decode","pallet_robonomics_liability::signed","",12,[[],[["error",3],["result",4]]]],[11,"decode","pallet_robonomics_liability::pallet","",6,[[],[["error",3],["result",4]]]],[11,"decode","","",9,[[],[["error",3],["result",4]]]],[11,"encode_to","pallet_robonomics_liability::signed","",12,[[]]],[11,"encode_to","pallet_robonomics_liability::pallet","",6,[[]]],[11,"encode_to","","",9,[[]]],[11,"metadata","","",8,[[]]],[11,"metadata","","",7,[[]]],[11,"get_dispatch_info","","",9,[[],["dispatchinfo",3]]],[11,"get_call_name","","",9,[[]]],[11,"get_call_names","","",9,[[]]],[11,"dispatch_bypass_filter","","",9,[[],["dispatchresultwithpostinfo",6]]],[11,"current_version","","",8,[[],["palletversion",3]]],[11,"storage_version","","",8,[[],[["option",4],["palletversion",3]]]],[11,"validate_unsigned","","",8,[[["transactionsource",4]],["transactionvalidity",6]]],[11,"integrity_test","","",8,[[]]],[11,"on_finalize","","",8,[[]]],[11,"on_initialize","","",8,[[],["weight",6]]],[11,"on_genesis","","",8,[[]]],[11,"on_runtime_upgrade","","",8,[[],["weight",6]]],[11,"offchain_worker","","",8,[[]]]],"p":[[8,"Technical"],[8,"Economical"],[8,"Processing"],[8,"Agreement"],[8,"ProofBuilder"],[8,"Config"],[4,"Event"],[4,"Error"],[3,"Pallet"],[4,"Call"],[3,"Communism"],[3,"OpenMarket"],[3,"SignedLiability"],[3,"AppProofSigner"],[3,"ProofSigner"],[3,"PureIPFS"]]},\
"pallet_robonomics_rws":{"doc":"Robonomics Web Services runtime module. This can be …","i":[[0,"pallet","pallet_robonomics_rws","",null,null],[17,"CALL_COST","pallet_robonomics_rws::pallet","One call cost in quota points (points for 1 sec).",null,null],[8,"Config","","",null,null],[16,"Call","","Call subscription method.",0,null],[16,"Time","","Current time source.",0,null],[16,"Event","","The overarching event type.",0,null],[16,"WeightLimit","","The top limit weight for signle call.",0,null],[16,"TotalBandwidth","","Transactions bandwidth allocated for subscription (in …",0,null],[16,"PointsLimit","","Limit for quota points accumulation.",0,null],[4,"Error","","",null,null],[13,"NoQuota","","The origin account have no enough quota to process these …",1,null],[13,"BadCall","","The call does not meet the requirements.",1,null],[13,"OracleOnlyCall","","This call is for oracle only.",1,null],[4,"Event","","",null,null],[13,"Subscription","","RWS subscription registered.",2,null],[13,"NewCall","","Runtime method executed using RWS subscription.",2,null],[3,"Pallet","","",null,null],[11,"call","","Authenticates the RWS staker and dispatches a free …",3,[[["originfor",6],["box",3]],["dispatchresultwithpostinfo",6]]],[11,"set_oracle","","Change RWS oracle account.",3,[[["originfor",6]],["dispatchresultwithpostinfo",6]]],[11,"set_bandwidth","","Change account bandwidth share rate by authority.",3,[[["originfor",6],["perbill",3]],["dispatchresultwithpostinfo",6]]],[6,"Module","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.",null,null],[4,"Call","","",null,null],[13,"call","","",4,null],[13,"set_oracle","","",4,null],[13,"set_bandwidth","","",4,null],[11,"as_u8","","",1,[[]]],[11,"as_str","","",1,[[]]],[11,"oracle","","The <code>AccountId</code> of Ethereum oracle.",3,[[],["option",4]]],[11,"bandwidth","","Bandwidth allocation for account.",3,[[],[["perbill",3],["option",4]]]],[11,"quota","","Quota acconting, transaction quota grown while account …",3,[[],["option",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"with_weight","","",1,[[],[["dispatcherrorwithpostinfo",3],["postdispatchinfo",3]]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"blake2_128","","",2,[[]]],[11,"blake2_256","","",2,[[]]],[11,"blake2_128_concat","","",2,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",2,[[]]],[11,"twox_256","","",2,[[]]],[11,"twox_64_concat","","",2,[[],[["vec",3],["global",3]]]],[11,"identity","","",2,[[],[["vec",3],["global",3]]]],[11,"unique_saturated_into","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"to_keyed_vec","","",2,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",2,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",2,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",2,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unique_saturated_into","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"blake2_128","","",4,[[]]],[11,"blake2_256","","",4,[[]]],[11,"blake2_128_concat","","",4,[[],[["vec",3],["global",3]]]],[11,"twox_128","","",4,[[]]],[11,"twox_256","","",4,[[]]],[11,"twox_64_concat","","",4,[[],[["vec",3],["global",3]]]],[11,"identity","","",4,[[],[["vec",3],["global",3]]]],[11,"unique_saturated_into","","",4,[[]]],[11,"from_ref","","",4,[[]]],[11,"into_ref","","",4,[[]]],[11,"from_mut","","",4,[[]]],[11,"into_mut","","",4,[[]]],[11,"to_keyed_vec","","",4,[[],[["vec",3],["global",3]]]],[11,"decode_all","","",4,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",4,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",4,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"vzip","","",4,[[]]],[11,"__clone_box","","",4,[[["private",3]]]],[11,"equivalent","","",4,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[]]],[11,"eq","","",4,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"decode","","",2,[[],[["result",4],["error",3]]]],[11,"decode","","",4,[[],[["result",4],["error",3]]]],[11,"encode_to","","",2,[[]]],[11,"encode_to","","",4,[[]]],[11,"metadata","","",3,[[]]],[11,"metadata","","",1,[[]]],[11,"get_dispatch_info","","",4,[[],["dispatchinfo",3]]],[11,"get_call_name","","",4,[[]]],[11,"get_call_names","","",4,[[]]],[11,"dispatch_bypass_filter","","",4,[[],["dispatchresultwithpostinfo",6]]],[11,"current_version","","",3,[[],["palletversion",3]]],[11,"storage_version","","",3,[[],[["option",4],["palletversion",3]]]],[11,"integrity_test","","",3,[[]]],[11,"on_finalize","","",3,[[]]],[11,"on_initialize","","",3,[[],["weight",6]]],[11,"on_genesis","","",3,[[]]],[11,"on_runtime_upgrade","","",3,[[],["weight",6]]],[11,"offchain_worker","","",3,[[]]]],"p":[[8,"Config"],[4,"Error"],[4,"Event"],[3,"Pallet"],[4,"Call"]]},\
"parachain_runtime":{"doc":"The Robonomics runtime. This can be compiled with …","i":[[0,"constants","parachain_runtime","A set of constant values used in substrate runtime.",null,null],[0,"currency","parachain_runtime::constants","Money matters.",null,null],[17,"COASE","parachain_runtime::constants::currency","",null,null],[17,"GLUSHKOV","","",null,null],[17,"XRT","","",null,null],[5,"deposit","","",null,[[],["balance",6]]],[3,"STAKE_HOLDERS","","",null,null],[0,"time","parachain_runtime::constants","Time.",null,null],[17,"MILLISECS_PER_BLOCK","parachain_runtime::constants::time","",null,null],[17,"SECS_PER_BLOCK","","",null,null],[17,"MINUTES","","",null,null],[17,"HOURS","","",null,null],[17,"DAYS","","",null,null],[0,"fee","parachain_runtime::constants","Fee-related.",null,null],[3,"Perbill","parachain_runtime::constants::fee","A fixed point representation of a number in the range [0, …",null,null],[17,"TARGET_BLOCK_FULLNESS","","The block saturation level. Fees will be updates based on …",null,null],[0,"api","parachain_runtime","",null,null],[5,"dispatch","parachain_runtime::api","",null,[[],[["option",4],["vec",3]]]],[17,"WASM_BINARY","parachain_runtime","",null,null],[17,"WASM_BINARY_BLOATY","","",null,null],[5,"wasm_binary_unwrap","","Wasm binary unwrapped. If built with …",null,[[]]],[17,"VERSION","","Standalone runtime version.",null,null],[5,"native_version","","The version infromation used to identify this runtime …",null,[[],["nativeversion",3]]],[3,"SessionKeys","","",null,null],[11,"generate","","Generate a set of keys with optionally using the given …",0,[[["option",4],["vec",3]],["vec",3]]],[11,"into_raw_public_keys","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.",0,[[],["vec",3]]],[11,"decode_into_raw_public_keys","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …",0,[[],[["option",4],["vec",3]]]],[3,"BlockHashCount","","",null,null],[11,"get","","Returns the value of this parameter type.",1,[[],["blocknumber",6]]],[3,"Version","","",null,null],[11,"get","","Returns the value of this parameter type.",2,[[],["runtimeversion",3]]],[3,"RuntimeBlockLength","","",null,null],[11,"get","","Returns the value of this parameter type.",3,[[],["blocklength",3]]],[3,"RuntimeBlockWeights","","",null,null],[11,"get","","Returns the value of this parameter type.",4,[[],["blockweights",3]]],[3,"SS58Prefix","","",null,null],[11,"get","","Returns the value of this parameter type.",5,[[]]],[3,"MinimumPeriod","","",null,null],[11,"get","","Returns the value of this parameter type.",6,[[],["moment",6]]],[3,"ExistentialDeposit","","",null,null],[11,"get","","Returns the value of this parameter type.",7,[[],["balance",6]]],[3,"MaxLocks","","",null,null],[11,"get","","Returns the value of this parameter type.",8,[[]]],[3,"DustAccount","","",null,null],[11,"get","","Returns the value of this parameter type.",9,[[],["accountid",6]]],[3,"ExistentialDeposits","","",null,null],[3,"GetNativeCurrencyId","","",null,null],[11,"get","","Returns the value of this parameter type.",10,[[],["currencyid",4]]],[3,"TransactionByteFee","","",null,null],[11,"get","","Returns the value of this parameter type.",11,[[],["balance",6]]],[3,"TargetBlockFullness","","",null,null],[11,"get","","Returns the value of this parameter type.",12,[[],["perquintill",3]]],[3,"AdjustmentVariable","","",null,null],[11,"get","","Returns the value of this parameter type.",13,[[],["multiplier",6]]],[3,"MinimumMultiplier","","",null,null],[11,"get","","Returns the value of this parameter type.",14,[[],["multiplier",6]]],[3,"BasicDeposit","","",null,null],[11,"get","","Returns the value of this parameter type.",15,[[],["balance",6]]],[3,"FieldDeposit","","",null,null],[11,"get","","Returns the value of this parameter type.",16,[[],["balance",6]]],[3,"SubAccountDeposit","","",null,null],[11,"get","","Returns the value of this parameter type.",17,[[],["balance",6]]],[3,"MaxSubAccounts","","",null,null],[11,"get","","Returns the value of this parameter type.",18,[[]]],[3,"MaxAdditionalFields","","",null,null],[11,"get","","Returns the value of this parameter type.",19,[[]]],[3,"MaxRegistrars","","",null,null],[11,"get","","Returns the value of this parameter type.",20,[[]]],[3,"MaximumSchedulerWeight","","",null,null],[11,"get","","Returns the value of this parameter type.",21,[[],["weight",6]]],[3,"MaxScheduledPerBlock","","",null,null],[11,"get","","Returns the value of this parameter type.",22,[[]]],[3,"ProposalBond","","",null,null],[11,"get","","Returns the value of this parameter type.",23,[[],["permill",3]]],[3,"ProposalBondMinimum","","",null,null],[11,"get","","Returns the value of this parameter type.",24,[[],["balance",6]]],[3,"SpendPeriod","","",null,null],[11,"get","","Returns the value of this parameter type.",25,[[],["blocknumber",6]]],[3,"Burn","","",null,null],[11,"get","","Returns the value of this parameter type.",26,[[],["permill",3]]],[3,"DataDepositPerByte","","",null,null],[11,"get","","Returns the value of this parameter type.",27,[[],["balance",6]]],[3,"TreasuryModuleId","","",null,null],[11,"get","","Returns the value of this parameter type.",28,[[],["moduleid",3]]],[3,"MaximumReasonLength","","",null,null],[11,"get","","Returns the value of this parameter type.",29,[[]]],[3,"BountyUpdatePeriod","","",null,null],[11,"get","","Returns the value of this parameter type.",30,[[],["blocknumber",6]]],[3,"BountyCuratorDeposit","","",null,null],[11,"get","","Returns the value of this parameter type.",31,[[],["permill",3]]],[3,"BountyValueMinimum","","",null,null],[11,"get","","Returns the value of this parameter type.",32,[[],["balance",6]]],[3,"BountyDepositBase","","",null,null],[11,"get","","Returns the value of this parameter type.",33,[[],["balance",6]]],[3,"BountyDepositPayoutDelay","","",null,null],[11,"get","","Returns the value of this parameter type.",34,[[],["blocknumber",6]]],[3,"TipCountdown","","",null,null],[11,"get","","Returns the value of this parameter type.",35,[[],["blocknumber",6]]],[3,"TipFindersFee","","",null,null],[11,"get","","Returns the value of this parameter type.",36,[[],["percent",3]]],[3,"TipReportDepositBase","","",null,null],[11,"get","","Returns the value of this parameter type.",37,[[],["balance",6]]],[3,"CouncilMotionDuration","","",null,null],[11,"get","","Returns the value of this parameter type.",38,[[],["blocknumber",6]]],[3,"CouncilMaxProposals","","",null,null],[11,"get","","Returns the value of this parameter type.",39,[[]]],[3,"CouncilMaxMembers","","",null,null],[11,"get","","Returns the value of this parameter type.",40,[[]]],[3,"CandidacyBond","","",null,null],[11,"get","","Returns the value of this parameter type.",41,[[],["balance",6]]],[3,"VotingBondBase","","",null,null],[11,"get","","Returns the value of this parameter type.",42,[[],["balance",6]]],[3,"VotingBondFactor","","",null,null],[11,"get","","Returns the value of this parameter type.",43,[[],["balance",6]]],[3,"TermDuration","","",null,null],[11,"get","","Returns the value of this parameter type.",44,[[],["blocknumber",6]]],[3,"DesiredMembers","","",null,null],[11,"get","","Returns the value of this parameter type.",45,[[]]],[3,"DesiredRunnersUp","","",null,null],[11,"get","","Returns the value of this parameter type.",46,[[]]],[3,"ElectionsPhragmenModuleId","","",null,null],[11,"get","","Returns the value of this parameter type.",47,[[],["lockidentifier",6]]],[3,"RococoLocation","","",null,null],[11,"get","","Returns the value of this parameter type.",48,[[],["multilocation",4]]],[3,"RococoNetwork","","",null,null],[11,"get","","Returns the value of this parameter type.",49,[[],["networkid",4]]],[3,"RobonomicsNetwork","","",null,null],[11,"get","","Returns the value of this parameter type.",50,[[],["networkid",4]]],[3,"RelayChainOrigin","","",null,null],[11,"get","","Returns the value of this parameter type.",51,[[],["origin",3]]],[3,"RelayChainCurrencyId","","",null,null],[11,"get","","Returns the value of this parameter type.",52,[[],["currencyid",4]]],[3,"Ancestry","","",null,null],[11,"get","","Returns the value of this parameter type.",53,[[],["multilocation",4]]],[3,"NativeOrmlTokens","","",null,null],[11,"get","","Returns the value of this parameter type.",54,[[],["btreeset",3]]],[3,"XcmConfig","","",null,null],[3,"RelayToNative","","",null,null],[3,"NativeToRelay","","",null,null],[3,"AccountId32Convert","","",null,null],[3,"TotalBandwidth","","",null,null],[11,"get","","Returns the value of this parameter type.",55,[[]]],[3,"WeightLimit","","",null,null],[11,"get","","Returns the value of this parameter type.",56,[[],["weight",6]]],[3,"PointsLimit","","",null,null],[11,"get","","Returns the value of this parameter type.",57,[[]]],[3,"Runtime","","",null,null],[4,"Event","","",null,null],[13,"frame_system","","",58,null],[13,"pallet_utility","","",58,null],[13,"pallet_identity","","",58,null],[13,"pallet_balances","","",58,null],[13,"orml_currencies","","",58,null],[13,"orml_tokens","","",58,null],[13,"pallet_robonomics_datalog","","",58,null],[13,"pallet_robonomics_datalog_xcm","","",58,null],[13,"pallet_robonomics_launch","","",58,null],[13,"pallet_robonomics_launch_xcm","","",58,null],[13,"pallet_robonomics_rws","","",58,null],[13,"pallet_robonomics_digital_twin","","",58,null],[13,"cumulus_pallet_parachain_system","","",58,null],[13,"cumulus_pallet_xcm_handler","","",58,null],[13,"orml_xtokens","","",58,null],[13,"pallet_collective_Instance1","","",58,null],[13,"pallet_elections_phragmen","","",58,null],[13,"pallet_scheduler","","",58,null],[13,"pallet_treasury","","",58,null],[13,"pallet_bounties","","",58,null],[13,"pallet_tips","","",58,null],[13,"pallet_sudo","","",58,null],[11,"outer_event_metadata","","",59,[[],["outereventmetadata",3]]],[11,"__module_events_frame_system","","",59,[[]]],[11,"__module_events_pallet_utility","","",59,[[]]],[11,"__module_events_pallet_identity","","",59,[[]]],[11,"__module_events_pallet_balances","","",59,[[]]],[11,"__module_events_orml_currencies","","",59,[[]]],[11,"__module_events_orml_tokens","","",59,[[]]],[11,"__module_events_pallet_robonomics_datalog","","",59,[[]]],[11,"__module_events_pallet_robonomics_datalog_xcm","","",59,[[]]],[11,"__module_events_pallet_robonomics_launch","","",59,[[]]],[11,"__module_events_pallet_robonomics_launch_xcm","","",59,[[]]],[11,"__module_events_pallet_robonomics_rws","","",59,[[]]],[11,"__module_events_pallet_robonomics_digital_twin","","",59,[[]]],[11,"__module_events_cumulus_pallet_parachain_system","","",59,[[]]],[11,"__module_events_cumulus_pallet_xcm_handler","","",59,[[]]],[11,"__module_events_orml_xtokens","","",59,[[]]],[11,"__module_events_pallet_collective_Instance1","","",59,[[]]],[11,"__module_events_pallet_elections_phragmen","","",59,[[]]],[11,"__module_events_pallet_scheduler","","",59,[[]]],[11,"__module_events_pallet_treasury","","",59,[[]]],[11,"__module_events_pallet_bounties","","",59,[[]]],[11,"__module_events_pallet_tips","","",59,[[]]],[11,"__module_events_pallet_sudo","","",59,[[]]],[3,"Origin","","",null,null],[4,"OriginCaller","","",null,null],[13,"system","","",60,null],[13,"cumulus_pallet_xcm_handler","","",60,null],[13,"pallet_collective_Instance1","","",60,null],[13,"Void","","",60,null],[11,"none","","Create with system none origin and …",61,[[]]],[11,"root","","Create with system root origin and no filter.",61,[[]]],[11,"signed","","Create with system signed origin and …",61,[[]]],[6,"System","","",null,null],[6,"Utility","","",null,null],[6,"Timestamp","","",null,null],[6,"Identity","","",null,null],[6,"Balances","","",null,null],[6,"Currencies","","",null,null],[6,"Tokens","","",null,null],[6,"TransactionPayment","","",null,null],[6,"RandomnessCollectiveFlip","","",null,null],[6,"Datalog","","",null,null],[6,"DatalogXcm","","",null,null],[6,"Launch","","",null,null],[6,"LaunchXcm","","",null,null],[6,"RWS","","",null,null],[6,"DigitalTwin","","",null,null],[6,"ParachainSystem","","",null,null],[6,"ParachainInfo","","",null,null],[6,"XcmHandler","","",null,null],[6,"XTokens","","",null,null],[6,"Council","","",null,null],[6,"Elections","","",null,null],[6,"Scheduler","","",null,null],[6,"Treasury","","",null,null],[6,"Bounties","","",null,null],[6,"Tips","","",null,null],[6,"Sudo","","",null,null],[6,"AllModules","","All pallets included in the runtime as a nested tuple of …",null,null],[6,"AllModulesWithSystem","","All pallets included in the runtime as a nested tuple of …",null,null],[3,"PalletInfo","","Provides an implementation of <code>PalletInfo</code> to provide …",null,null],[4,"Call","","",null,null],[13,"System","","",62,null],[13,"Utility","","",62,null],[13,"Timestamp","","",62,null],[13,"Identity","","",62,null],[13,"Balances","","",62,null],[13,"Currencies","","",62,null],[13,"RandomnessCollectiveFlip","","",62,null],[13,"Datalog","","",62,null],[13,"DatalogXcm","","",62,null],[13,"Launch","","",62,null],[13,"LaunchXcm","","",62,null],[13,"RWS","","",62,null],[13,"DigitalTwin","","",62,null],[13,"ParachainSystem","","",62,null],[13,"XTokens","","",62,null],[13,"Council","","",62,null],[13,"Elections","","",62,null],[13,"Scheduler","","",62,null],[13,"Treasury","","",62,null],[13,"Bounties","","",62,null],[13,"Tips","","",62,null],[13,"Sudo","","",62,null],[11,"metadata","","",59,[[],["runtimemetadataprefixed",3]]],[6,"SystemConfig","","",null,null],[6,"BalancesConfig","","",null,null],[6,"TokensConfig","","",null,null],[6,"ParachainInfoConfig","","",null,null],[6,"CouncilConfig","","",null,null],[6,"ElectionsConfig","","",null,null],[6,"TreasuryConfig","","",null,null],[6,"SudoConfig","","",null,null],[3,"GenesisConfig","","",null,null],[12,"frame_system","","",63,null],[12,"pallet_balances","","",63,null],[12,"orml_tokens","","",63,null],[12,"parachain_info","","",63,null],[12,"pallet_collective_Instance1","","",63,null],[12,"pallet_elections_phragmen","","",63,null],[12,"pallet_treasury","","",63,null],[12,"pallet_sudo","","",63,null],[6,"Address","","The address format for describing accounts.",null,null],[6,"Header","","Block header type as expected by this runtime.",null,null],[6,"Block","","Block type as expected by this runtime.",null,null],[6,"BlockId","","BlockId type as expected by this runtime.",null,null],[6,"SignedExtra","","The SignedExtension to the basic transaction logic.",null,null],[6,"UncheckedExtrinsic","","Unchecked extrinsic type as expected by this runtime.",null,null],[6,"CheckedExtrinsic","","Extrinsic type that has already been checked.",null,null],[6,"Executive","","Executive: handles dispatch to the various modules.",null,null],[3,"RuntimeApi","","",null,null],[3,"RuntimeApiImpl","","Implements all runtime apis for the client side.",null,null],[11,"from","parachain_runtime::constants::currency","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"unchecked_into","","",64,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",64,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",64,[[]]],[11,"unique_saturated_into","","",64,[[]]],[11,"vzip","","",64,[[]]],[11,"from_ref","","",64,[[]]],[11,"into_ref","","",64,[[]]],[11,"from_mut","","",64,[[]]],[11,"into_mut","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","parachain_runtime::constants::fee","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"is_clear","","",65,[[]]],[11,"clear","","",65,[[]]],[11,"to_keyed_vec","","",65,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",65,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",65,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",65,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",65,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",65,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",65,[[]]],[11,"unique_saturated_into","","",65,[[]]],[11,"unique_saturated_from","","",65,[[]]],[11,"vzip","","",65,[[]]],[11,"__clone_box","","",65,[[["private",3]]]],[11,"equivalent","","",65,[[]]],[11,"blake2_128","","",65,[[]]],[11,"blake2_256","","",65,[[]]],[11,"blake2_128_concat","","",65,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",65,[[]]],[11,"twox_256","","",65,[[]]],[11,"twox_64_concat","","",65,[[],[["global",3],["vec",3]]]],[11,"identity","","",65,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",65,[[]]],[11,"into_ref","","",65,[[]]],[11,"from_mut","","",65,[[]]],[11,"into_mut","","",65,[[]]],[11,"encode_as","","",65,[[],[["global",3],["vec",3]]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","parachain_runtime","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"is_clear","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"to_keyed_vec","","",0,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",0,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",0,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",0,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"__clone_box","","",0,[[["private",3]]]],[11,"equivalent","","",0,[[]]],[11,"blake2_128","","",0,[[]]],[11,"blake2_256","","",0,[[]]],[11,"blake2_128_concat","","",0,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",0,[[]]],[11,"twox_256","","",0,[[]]],[11,"twox_64_concat","","",0,[[],[["global",3],["vec",3]]]],[11,"identity","","",0,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"encode_as","","",0,[[],[["global",3],["vec",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"unique_saturated_into","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"unique_saturated_into","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from_ref","","",3,[[]]],[11,"into_ref","","",3,[[]]],[11,"from_mut","","",3,[[]]],[11,"into_mut","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"unique_saturated_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from_ref","","",4,[[]]],[11,"into_ref","","",4,[[]]],[11,"from_mut","","",4,[[]]],[11,"into_mut","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"unchecked_into","","",5,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[]]],[11,"unique_saturated_into","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from_ref","","",5,[[]]],[11,"into_ref","","",5,[[]]],[11,"from_mut","","",5,[[]]],[11,"into_mut","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"unchecked_into","","",6,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[]]],[11,"unique_saturated_into","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from_ref","","",6,[[]]],[11,"into_ref","","",6,[[]]],[11,"from_mut","","",6,[[]]],[11,"into_mut","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"unchecked_into","","",7,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[]]],[11,"unique_saturated_into","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from_ref","","",7,[[]]],[11,"into_ref","","",7,[[]]],[11,"from_mut","","",7,[[]]],[11,"into_mut","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"unchecked_into","","",8,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[]]],[11,"unique_saturated_into","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from_ref","","",8,[[]]],[11,"into_ref","","",8,[[]]],[11,"from_mut","","",8,[[]]],[11,"into_mut","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"unchecked_into","","",9,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[]]],[11,"unique_saturated_into","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from_ref","","",9,[[]]],[11,"into_ref","","",9,[[]]],[11,"from_mut","","",9,[[]]],[11,"into_mut","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"unchecked_into","","",66,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",66,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",66,[[]]],[11,"unique_saturated_into","","",66,[[]]],[11,"vzip","","",66,[[]]],[11,"from_ref","","",66,[[]]],[11,"into_ref","","",66,[[]]],[11,"from_mut","","",66,[[]]],[11,"into_mut","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"unchecked_into","","",10,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[]]],[11,"unique_saturated_into","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from_ref","","",10,[[]]],[11,"into_ref","","",10,[[]]],[11,"from_mut","","",10,[[]]],[11,"into_mut","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"unchecked_into","","",11,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[]]],[11,"unique_saturated_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from_ref","","",11,[[]]],[11,"into_ref","","",11,[[]]],[11,"from_mut","","",11,[[]]],[11,"into_mut","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"unchecked_into","","",12,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[]]],[11,"unique_saturated_into","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from_ref","","",12,[[]]],[11,"into_ref","","",12,[[]]],[11,"from_mut","","",12,[[]]],[11,"into_mut","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"unchecked_into","","",13,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[]]],[11,"unique_saturated_into","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from_ref","","",13,[[]]],[11,"into_ref","","",13,[[]]],[11,"from_mut","","",13,[[]]],[11,"into_mut","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"unchecked_into","","",14,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[]]],[11,"unique_saturated_into","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from_ref","","",14,[[]]],[11,"into_ref","","",14,[[]]],[11,"from_mut","","",14,[[]]],[11,"into_mut","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"unchecked_into","","",15,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[]]],[11,"unique_saturated_into","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from_ref","","",15,[[]]],[11,"into_ref","","",15,[[]]],[11,"from_mut","","",15,[[]]],[11,"into_mut","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"unchecked_into","","",16,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[]]],[11,"unique_saturated_into","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from_ref","","",16,[[]]],[11,"into_ref","","",16,[[]]],[11,"from_mut","","",16,[[]]],[11,"into_mut","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"unchecked_into","","",17,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[]]],[11,"unique_saturated_into","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from_ref","","",17,[[]]],[11,"into_ref","","",17,[[]]],[11,"from_mut","","",17,[[]]],[11,"into_mut","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"unchecked_into","","",18,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[]]],[11,"unique_saturated_into","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from_ref","","",18,[[]]],[11,"into_ref","","",18,[[]]],[11,"from_mut","","",18,[[]]],[11,"into_mut","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"unchecked_into","","",19,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[]]],[11,"unique_saturated_into","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from_ref","","",19,[[]]],[11,"into_ref","","",19,[[]]],[11,"from_mut","","",19,[[]]],[11,"into_mut","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"unchecked_into","","",20,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[]]],[11,"unique_saturated_into","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from_ref","","",20,[[]]],[11,"into_ref","","",20,[[]]],[11,"from_mut","","",20,[[]]],[11,"into_mut","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"unchecked_into","","",21,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[]]],[11,"unique_saturated_into","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from_ref","","",21,[[]]],[11,"into_ref","","",21,[[]]],[11,"from_mut","","",21,[[]]],[11,"into_mut","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"unchecked_into","","",22,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[]]],[11,"unique_saturated_into","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from_ref","","",22,[[]]],[11,"into_ref","","",22,[[]]],[11,"from_mut","","",22,[[]]],[11,"into_mut","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"unchecked_into","","",23,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[]]],[11,"unique_saturated_into","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from_ref","","",23,[[]]],[11,"into_ref","","",23,[[]]],[11,"from_mut","","",23,[[]]],[11,"into_mut","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"unchecked_into","","",24,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[]]],[11,"unique_saturated_into","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from_ref","","",24,[[]]],[11,"into_ref","","",24,[[]]],[11,"from_mut","","",24,[[]]],[11,"into_mut","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"unchecked_into","","",25,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",25,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",25,[[]]],[11,"unique_saturated_into","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from_ref","","",25,[[]]],[11,"into_ref","","",25,[[]]],[11,"from_mut","","",25,[[]]],[11,"into_mut","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"unchecked_into","","",26,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",26,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",26,[[]]],[11,"unique_saturated_into","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from_ref","","",26,[[]]],[11,"into_ref","","",26,[[]]],[11,"from_mut","","",26,[[]]],[11,"into_mut","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"unchecked_into","","",27,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",27,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",27,[[]]],[11,"unique_saturated_into","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from_ref","","",27,[[]]],[11,"into_ref","","",27,[[]]],[11,"from_mut","","",27,[[]]],[11,"into_mut","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"unchecked_into","","",28,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",28,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",28,[[]]],[11,"unique_saturated_into","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from_ref","","",28,[[]]],[11,"into_ref","","",28,[[]]],[11,"from_mut","","",28,[[]]],[11,"into_mut","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"unchecked_into","","",29,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",29,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",29,[[]]],[11,"unique_saturated_into","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from_ref","","",29,[[]]],[11,"into_ref","","",29,[[]]],[11,"from_mut","","",29,[[]]],[11,"into_mut","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"unchecked_into","","",30,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",30,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",30,[[]]],[11,"unique_saturated_into","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from_ref","","",30,[[]]],[11,"into_ref","","",30,[[]]],[11,"from_mut","","",30,[[]]],[11,"into_mut","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"unchecked_into","","",31,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",31,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",31,[[]]],[11,"unique_saturated_into","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from_ref","","",31,[[]]],[11,"into_ref","","",31,[[]]],[11,"from_mut","","",31,[[]]],[11,"into_mut","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"unchecked_into","","",32,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",32,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",32,[[]]],[11,"unique_saturated_into","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from_ref","","",32,[[]]],[11,"into_ref","","",32,[[]]],[11,"from_mut","","",32,[[]]],[11,"into_mut","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"unchecked_into","","",33,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",33,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",33,[[]]],[11,"unique_saturated_into","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"from_ref","","",33,[[]]],[11,"into_ref","","",33,[[]]],[11,"from_mut","","",33,[[]]],[11,"into_mut","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"unchecked_into","","",34,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",34,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",34,[[]]],[11,"unique_saturated_into","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from_ref","","",34,[[]]],[11,"into_ref","","",34,[[]]],[11,"from_mut","","",34,[[]]],[11,"into_mut","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"unchecked_into","","",35,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",35,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",35,[[]]],[11,"unique_saturated_into","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from_ref","","",35,[[]]],[11,"into_ref","","",35,[[]]],[11,"from_mut","","",35,[[]]],[11,"into_mut","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"unchecked_into","","",36,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",36,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",36,[[]]],[11,"unique_saturated_into","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"from_ref","","",36,[[]]],[11,"into_ref","","",36,[[]]],[11,"from_mut","","",36,[[]]],[11,"into_mut","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"unchecked_into","","",37,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",37,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",37,[[]]],[11,"unique_saturated_into","","",37,[[]]],[11,"vzip","","",37,[[]]],[11,"from_ref","","",37,[[]]],[11,"into_ref","","",37,[[]]],[11,"from_mut","","",37,[[]]],[11,"into_mut","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"unchecked_into","","",38,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",38,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",38,[[]]],[11,"unique_saturated_into","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"from_ref","","",38,[[]]],[11,"into_ref","","",38,[[]]],[11,"from_mut","","",38,[[]]],[11,"into_mut","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"unchecked_into","","",39,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",39,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",39,[[]]],[11,"unique_saturated_into","","",39,[[]]],[11,"vzip","","",39,[[]]],[11,"from_ref","","",39,[[]]],[11,"into_ref","","",39,[[]]],[11,"from_mut","","",39,[[]]],[11,"into_mut","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"unchecked_into","","",40,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",40,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",40,[[]]],[11,"unique_saturated_into","","",40,[[]]],[11,"vzip","","",40,[[]]],[11,"from_ref","","",40,[[]]],[11,"into_ref","","",40,[[]]],[11,"from_mut","","",40,[[]]],[11,"into_mut","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"unchecked_into","","",41,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",41,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",41,[[]]],[11,"unique_saturated_into","","",41,[[]]],[11,"vzip","","",41,[[]]],[11,"from_ref","","",41,[[]]],[11,"into_ref","","",41,[[]]],[11,"from_mut","","",41,[[]]],[11,"into_mut","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"unchecked_into","","",42,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",42,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",42,[[]]],[11,"unique_saturated_into","","",42,[[]]],[11,"vzip","","",42,[[]]],[11,"from_ref","","",42,[[]]],[11,"into_ref","","",42,[[]]],[11,"from_mut","","",42,[[]]],[11,"into_mut","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"unchecked_into","","",43,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",43,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",43,[[]]],[11,"unique_saturated_into","","",43,[[]]],[11,"vzip","","",43,[[]]],[11,"from_ref","","",43,[[]]],[11,"into_ref","","",43,[[]]],[11,"from_mut","","",43,[[]]],[11,"into_mut","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"unchecked_into","","",44,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",44,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",44,[[]]],[11,"unique_saturated_into","","",44,[[]]],[11,"vzip","","",44,[[]]],[11,"from_ref","","",44,[[]]],[11,"into_ref","","",44,[[]]],[11,"from_mut","","",44,[[]]],[11,"into_mut","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"unchecked_into","","",45,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",45,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",45,[[]]],[11,"unique_saturated_into","","",45,[[]]],[11,"vzip","","",45,[[]]],[11,"from_ref","","",45,[[]]],[11,"into_ref","","",45,[[]]],[11,"from_mut","","",45,[[]]],[11,"into_mut","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"unchecked_into","","",46,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",46,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",46,[[]]],[11,"unique_saturated_into","","",46,[[]]],[11,"vzip","","",46,[[]]],[11,"from_ref","","",46,[[]]],[11,"into_ref","","",46,[[]]],[11,"from_mut","","",46,[[]]],[11,"into_mut","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"unchecked_into","","",47,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",47,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",47,[[]]],[11,"unique_saturated_into","","",47,[[]]],[11,"vzip","","",47,[[]]],[11,"from_ref","","",47,[[]]],[11,"into_ref","","",47,[[]]],[11,"from_mut","","",47,[[]]],[11,"into_mut","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"unchecked_into","","",48,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",48,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",48,[[]]],[11,"unique_saturated_into","","",48,[[]]],[11,"vzip","","",48,[[]]],[11,"from_ref","","",48,[[]]],[11,"into_ref","","",48,[[]]],[11,"from_mut","","",48,[[]]],[11,"into_mut","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"unchecked_into","","",49,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",49,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",49,[[]]],[11,"unique_saturated_into","","",49,[[]]],[11,"vzip","","",49,[[]]],[11,"from_ref","","",49,[[]]],[11,"into_ref","","",49,[[]]],[11,"from_mut","","",49,[[]]],[11,"into_mut","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"unchecked_into","","",50,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",50,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",50,[[]]],[11,"unique_saturated_into","","",50,[[]]],[11,"vzip","","",50,[[]]],[11,"from_ref","","",50,[[]]],[11,"into_ref","","",50,[[]]],[11,"from_mut","","",50,[[]]],[11,"into_mut","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"unchecked_into","","",51,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",51,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",51,[[]]],[11,"unique_saturated_into","","",51,[[]]],[11,"vzip","","",51,[[]]],[11,"from_ref","","",51,[[]]],[11,"into_ref","","",51,[[]]],[11,"from_mut","","",51,[[]]],[11,"into_mut","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"unchecked_into","","",52,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",52,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",52,[[]]],[11,"unique_saturated_into","","",52,[[]]],[11,"vzip","","",52,[[]]],[11,"from_ref","","",52,[[]]],[11,"into_ref","","",52,[[]]],[11,"from_mut","","",52,[[]]],[11,"into_mut","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"unchecked_into","","",53,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",53,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",53,[[]]],[11,"unique_saturated_into","","",53,[[]]],[11,"vzip","","",53,[[]]],[11,"from_ref","","",53,[[]]],[11,"into_ref","","",53,[[]]],[11,"from_mut","","",53,[[]]],[11,"into_mut","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"unchecked_into","","",54,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",54,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",54,[[]]],[11,"unique_saturated_into","","",54,[[]]],[11,"vzip","","",54,[[]]],[11,"from_ref","","",54,[[]]],[11,"into_ref","","",54,[[]]],[11,"from_mut","","",54,[[]]],[11,"into_mut","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"unchecked_into","","",67,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",67,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",67,[[]]],[11,"unique_saturated_into","","",67,[[]]],[11,"vzip","","",67,[[]]],[11,"from_ref","","",67,[[]]],[11,"into_ref","","",67,[[]]],[11,"from_mut","","",67,[[]]],[11,"into_mut","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"unchecked_into","","",68,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",68,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",68,[[]]],[11,"unique_saturated_into","","",68,[[]]],[11,"vzip","","",68,[[]]],[11,"from_ref","","",68,[[]]],[11,"into_ref","","",68,[[]]],[11,"from_mut","","",68,[[]]],[11,"into_mut","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"unchecked_into","","",69,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",69,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",69,[[]]],[11,"unique_saturated_into","","",69,[[]]],[11,"vzip","","",69,[[]]],[11,"from_ref","","",69,[[]]],[11,"into_ref","","",69,[[]]],[11,"from_mut","","",69,[[]]],[11,"into_mut","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"unchecked_into","","",70,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",70,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",70,[[]]],[11,"unique_saturated_into","","",70,[[]]],[11,"vzip","","",70,[[]]],[11,"from_ref","","",70,[[]]],[11,"into_ref","","",70,[[]]],[11,"from_mut","","",70,[[]]],[11,"into_mut","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"unchecked_into","","",55,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",55,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",55,[[]]],[11,"unique_saturated_into","","",55,[[]]],[11,"vzip","","",55,[[]]],[11,"from_ref","","",55,[[]]],[11,"into_ref","","",55,[[]]],[11,"from_mut","","",55,[[]]],[11,"into_mut","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"unchecked_into","","",56,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",56,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",56,[[]]],[11,"unique_saturated_into","","",56,[[]]],[11,"vzip","","",56,[[]]],[11,"from_ref","","",56,[[]]],[11,"into_ref","","",56,[[]]],[11,"from_mut","","",56,[[]]],[11,"into_mut","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"unchecked_into","","",57,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",57,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",57,[[]]],[11,"unique_saturated_into","","",57,[[]]],[11,"vzip","","",57,[[]]],[11,"from_ref","","",57,[[]]],[11,"into_ref","","",57,[[]]],[11,"from_mut","","",57,[[]]],[11,"into_mut","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"unchecked_into","","",59,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",59,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",59,[[]]],[11,"unique_saturated_into","","",59,[[]]],[11,"vzip","","",59,[[]]],[11,"__clone_box","","",59,[[["private",3]]]],[11,"equivalent","","",59,[[]]],[11,"from_ref","","",59,[[]]],[11,"into_ref","","",59,[[]]],[11,"from_mut","","",59,[[]]],[11,"into_mut","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_keyed_vec","","",58,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",58,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",58,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",58,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",58,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",58,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",58,[[]]],[11,"unique_saturated_into","","",58,[[]]],[11,"vzip","","",58,[[]]],[11,"__clone_box","","",58,[[["private",3]]]],[11,"equivalent","","",58,[[]]],[11,"blake2_128","","",58,[[]]],[11,"blake2_256","","",58,[[]]],[11,"blake2_128_concat","","",58,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",58,[[]]],[11,"twox_256","","",58,[[]]],[11,"twox_64_concat","","",58,[[],[["global",3],["vec",3]]]],[11,"identity","","",58,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",58,[[]]],[11,"into_ref","","",58,[[]]],[11,"from_mut","","",58,[[]]],[11,"into_mut","","",58,[[]]],[11,"encode_as","","",58,[[],[["global",3],["vec",3]]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"unchecked_into","","",61,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",61,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",61,[[]]],[11,"unique_saturated_into","","",61,[[]]],[11,"vzip","","",61,[[]]],[11,"__clone_box","","",61,[[["private",3]]]],[11,"from_ref","","",61,[[]]],[11,"into_ref","","",61,[[]]],[11,"from_mut","","",61,[[]]],[11,"into_mut","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_keyed_vec","","",60,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",60,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",60,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",60,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",60,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",60,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",60,[[]]],[11,"unique_saturated_into","","",60,[[]]],[11,"vzip","","",60,[[]]],[11,"__clone_box","","",60,[[["private",3]]]],[11,"equivalent","","",60,[[]]],[11,"blake2_128","","",60,[[]]],[11,"blake2_256","","",60,[[]]],[11,"blake2_128_concat","","",60,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",60,[[]]],[11,"twox_256","","",60,[[]]],[11,"twox_64_concat","","",60,[[],[["global",3],["vec",3]]]],[11,"identity","","",60,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",60,[[]]],[11,"into_ref","","",60,[[]]],[11,"from_mut","","",60,[[]]],[11,"into_mut","","",60,[[]]],[11,"encode_as","","",60,[[],[["global",3],["vec",3]]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"unchecked_into","","",71,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",71,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",71,[[]]],[11,"unique_saturated_into","","",71,[[]]],[11,"vzip","","",71,[[]]],[11,"from_ref","","",71,[[]]],[11,"into_ref","","",71,[[]]],[11,"from_mut","","",71,[[]]],[11,"into_mut","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_keyed_vec","","",62,[[],[["global",3],["vec",3]]]],[11,"decode_all","","",62,[[],[["error",3],["result",4]]]],[11,"decode_all_with_depth_limit","","",62,[[],[["error",3],["result",4]]]],[11,"decode_with_depth_limit","","",62,[[],[["error",3],["result",4]]]],[11,"unchecked_into","","",62,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",62,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",62,[[]]],[11,"unique_saturated_into","","",62,[[]]],[11,"vzip","","",62,[[]]],[11,"__clone_box","","",62,[[["private",3]]]],[11,"equivalent","","",62,[[]]],[11,"blake2_128","","",62,[[]]],[11,"blake2_256","","",62,[[]]],[11,"blake2_128_concat","","",62,[[],[["global",3],["vec",3]]]],[11,"twox_128","","",62,[[]]],[11,"twox_256","","",62,[[]]],[11,"twox_64_concat","","",62,[[],[["global",3],["vec",3]]]],[11,"identity","","",62,[[],[["global",3],["vec",3]]]],[11,"from_ref","","",62,[[]]],[11,"into_ref","","",62,[[]]],[11,"from_mut","","",62,[[]]],[11,"into_mut","","",62,[[]]],[11,"encode_as","","",62,[[],[["global",3],["vec",3]]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"unchecked_into","","",63,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",63,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",63,[[]]],[11,"unique_saturated_into","","",63,[[]]],[11,"vzip","","",63,[[]]],[11,"from_ref","","",63,[[]]],[11,"into_ref","","",63,[[]]],[11,"from_mut","","",63,[[]]],[11,"into_mut","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"unchecked_into","","",72,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",72,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",72,[[]]],[11,"unique_saturated_into","","",72,[[]]],[11,"vzip","","",72,[[]]],[11,"from_ref","","",72,[[]]],[11,"into_ref","","",72,[[]]],[11,"from_mut","","",72,[[]]],[11,"into_mut","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"unchecked_into","","",73,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",73,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",73,[[]]],[11,"unique_saturated_into","","",73,[[]]],[11,"vzip","","",73,[[]]],[11,"from_ref","","",73,[[]]],[11,"into_ref","","",73,[[]]],[11,"from_mut","","",73,[[]]],[11,"into_mut","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"decode","parachain_runtime::constants::fee","",65,[[],[["error",3],["result",4],["perbill",3]]]],[11,"mul","","",65,[[]]],[11,"clone","","",65,[[],["perbill",3]]],[11,"from","","",65,[[["compact",3],["perbill",3]],["perbill",3]]],[11,"div","","",65,[[["perbill",3]]]],[11,"partial_cmp","","",65,[[["perbill",3]],[["option",4],["ordering",4]]]],[11,"lt","","",65,[[["perbill",3]]]],[11,"le","","",65,[[["perbill",3]]]],[11,"gt","","",65,[[["perbill",3]]]],[11,"ge","","",65,[[["perbill",3]]]],[11,"cmp","","",65,[[["perbill",3]],["ordering",4]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",65,[[],[["result",4],["perbill",3]]]],[11,"encode_to","","",65,[[]]],[11,"encode","","",65,[[],[["global",3],["vec",3]]]],[11,"using_encoded","","",65,[[]]],[11,"default","","",65,[[],["perbill",3]]],[11,"saturating_add","","Saturating addition. Compute <code>self + rhs</code>, saturating at …",65,[[["perbill",3]],["perbill",3]]],[11,"saturating_sub","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …",65,[[["perbill",3]],["perbill",3]]],[11,"saturating_mul","","Saturating multiply. Compute <code>self * rhs</code>, saturating at …",65,[[["perbill",3]],["perbill",3]]],[11,"saturating_pow","","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …",65,[[],["perbill",3]]],[11,"min_value","","",65,[[],["perbill",3]]],[11,"max_value","","",65,[[],["perbill",3]]],[11,"deconstruct","","Consume self and return the number of parts per thing.",65,[[]]],[11,"from_parts","","Build this type from a number of parts per thing.",65,[[],["perbill",3]]],[11,"from_fraction","","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>",65,[[],["perbill",3]]],[11,"from_rational_approximation","","",65,[[],["perbill",3]]],[11,"encode_as","","",65,[[]]],[11,"decode_from","","",65,[[],[["error",3],["result",4],["perbill",3]]]],[11,"serialize","","",65,[[],["result",4]]],[11,"eq","","",65,[[["perbill",3]]]],[11,"ne","","",65,[[["perbill",3]]]],[11,"from","parachain_runtime","",58,[[["runtime",3],["event",4]]]],[11,"from","","",58,[[["event",4]]]],[11,"from","","",58,[[["event",6],["runtime",3]]]],[11,"from","","",58,[[["runtime",3],["event",4]]]],[11,"from","","",58,[[["event",4],["runtime",3]]]],[11,"from","","",58,[[["event",4],["runtime",3]]]],[11,"from","","",58,[[["runtime",3],["event",4]]]],[11,"from","","",58,[[["runtime",3],["event",4]]]],[11,"from","","",58,[[["runtime",3],["event",4]]]],[11,"from","","",58,[[["event",4],["runtime",3]]]],[11,"from","","",58,[[["event",4],["runtime",3]]]],[11,"from","","",58,[[["runtime",3],["event",4]]]],[11,"from","","",58,[[["event",4]]]],[11,"from","","",58,[[["runtime",3],["event",6]]]],[11,"from","","",58,[[["runtime",3],["event",4]]]],[11,"from","","",58,[[["runtime",3],["event",6],["instance1",3]]]],[11,"from","","",58,[[["runtime",3],["event",6]]]],[11,"from","","",58,[[["runtime",3],["event",6]]]],[11,"from","","",58,[[["runtime",3],["event",6]]]],[11,"from","","",58,[[["event",6],["runtime",3]]]],[11,"from","","",58,[[["runtime",3],["event",6]]]],[11,"from","","",58,[[["runtime",3],["event",6]]]],[11,"from","","",60,[[["runtime",3],["origin",6]]]],[11,"from","","Convert to runtime origin:",61,[[["runtime",3],["origin",6]]]],[11,"from","","",61,[[["origincaller",4]]]],[11,"from","","Convert to runtime origin with caller being system signed …",61,[[["option",4]]]],[11,"from","","",60,[[["origin",4]]]],[11,"from","","Convert to runtime origin using …",61,[[["origin",4]]]],[11,"from","","",60,[[["runtime",3],["instance1",3],["origin",6]]]],[11,"from","","Convert to runtime origin using …",61,[[["runtime",3],["instance1",3],["origin",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["system",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["utility",6]]]],[11,"from","","",62,[[["callablecallfor",6],["timestamp",6],["runtime",3]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["identity",6]]]],[11,"from","","",62,[[["runtime",3],["balances",6],["callablecallfor",6]]]],[11,"from","","",62,[[["runtime",3],["currencies",6],["callablecallfor",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["randomnesscollectiveflip",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["datalog",6]]]],[11,"from","","",62,[[["runtime",3],["datalogxcm",6],["callablecallfor",6]]]],[11,"from","","",62,[[["callablecallfor",6],["runtime",3],["launch",6]]]],[11,"from","","",62,[[["launchxcm",6],["runtime",3],["callablecallfor",6]]]],[11,"from","","",62,[[["rws",6],["runtime",3],["callablecallfor",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["digitaltwin",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["parachainsystem",6]]]],[11,"from","","",62,[[["xtokens",6],["runtime",3],["callablecallfor",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["council",6]]]],[11,"from","","",62,[[["runtime",3],["elections",6],["callablecallfor",6]]]],[11,"from","","",62,[[["runtime",3],["callablecallfor",6],["scheduler",6]]]],[11,"from","","",62,[[["treasury",6],["runtime",3],["callablecallfor",6]]]],[11,"from","","",62,[[["runtime",3],["bounties",6],["callablecallfor",6]]]],[11,"from","","",62,[[["tips",6],["runtime",3],["callablecallfor",6]]]],[11,"from","","",62,[[["runtime",3],["sudo",6],["callablecallfor",6]]]],[11,"into","","NOTE: converting to pallet origin loses the origin filter …",61,[[],[["result",4],["origin",6]]]],[11,"into","","NOTE: converting to pallet origin loses the origin filter …",61,[[],[["result",4],["origin",4]]]],[11,"into","","NOTE: converting to pallet origin loses the origin filter …",61,[[],[["result",4],["origin",6]]]],[11,"clone","","",0,[[],["sessionkeys",3]]],[11,"clone","","",59,[[],["runtime",3]]],[11,"clone","","",58,[[],["event",4]]],[11,"clone","","",61,[[],["origin",3]]],[11,"clone","","",60,[[],["origincaller",4]]],[11,"clone","","",62,[[],["call",4]]],[11,"default","","",0,[[],["sessionkeys",3]]],[11,"default","","",63,[[],["genesisconfig",3]]],[11,"eq","","",0,[[["sessionkeys",3]]]],[11,"eq","","",59,[[["runtime",3]]]],[11,"eq","","",58,[[["event",4]]]],[11,"ne","","",58,[[["event",4]]]],[11,"eq","","",60,[[["origincaller",4]]]],[11,"ne","","",60,[[["origincaller",4]]]],[11,"eq","","",62,[[["call",4]]]],[11,"ne","","",62,[[["call",4]]]],[11,"deref","parachain_runtime::constants::currency","",64,[[],["vec",3]]],[11,"fmt","parachain_runtime","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"try_into","","",58,[[],[["result",4],["event",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",6]]]],[11,"try_into","","",58,[[],[["result",4],["event",4]]]],[11,"try_into","","",58,[[],[["event",4],["result",4]]]],[11,"try_into","","",58,[[],[["event",4],["result",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",4]]]],[11,"try_into","","",58,[[],[["event",4],["result",4]]]],[11,"try_into","","",58,[[],[["event",4],["result",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",4]]]],[11,"try_into","","",58,[[],[["event",4],["result",4]]]],[11,"try_into","","",58,[[],[["event",6],["result",4]]]],[11,"try_into","","",58,[[],[["event",4],["result",4]]]],[11,"try_into","","",58,[[],[["event",6],["result",4]]]],[11,"try_into","","",58,[[],[["event",6],["result",4]]]],[11,"try_into","","",58,[[],[["event",6],["result",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",6]]]],[11,"try_into","","",58,[[],[["event",6],["result",4]]]],[11,"try_into","","",58,[[],[["result",4],["event",6]]]],[11,"try_into","","",58,[[],[["event",6],["result",4]]]],[11,"decode","","",0,[[],[["result",4],["error",3]]]],[11,"decode","","",58,[[],[["result",4],["error",3]]]],[11,"decode","","",60,[[],[["result",4],["error",3]]]],[11,"decode","","",62,[[],[["result",4],["error",3]]]],[11,"encode_to","","",0,[[]]],[11,"encode_to","","",58,[[]]],[11,"encode_to","","",60,[[]]],[11,"encode_to","","",62,[[]]],[11,"convert","","",68,[[],["balance",6]]],[11,"convert","","",69,[[],["balance",6]]],[11,"convert","","",70,[[["accountid",6]]]],[11,"dispatch","","",62,[[["origin",3]],["dispatchresultwithpostinfo",6]]],[11,"pre_dispatch","","",59,[[],[["result",4],["transactionvalidityerror",4]]]],[11,"validate_unsigned","","",59,[[["transactionsource",4]],["transactionvalidity",6]]],[11,"key_ids","","",0,[[]]],[11,"get_raw","","",0,[[["keytypeid",3]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",63,[[],["result",4]]],[11,"assimilate_storage","","",63,[[["storage",3]],[["string",3],["result",4]]]],[11,"initialize","parachain_runtime::constants::currency","",64,[[]]],[11,"get_dispatch_info","parachain_runtime","",62,[[],["dispatchinfo",3]]],[11,"get_call_metadata","","",62,[[],["callmetadata",3]]],[11,"get_module_names","","",62,[[]]],[11,"get_call_names","","",62,[[]]],[11,"dispatch_bypass_filter","","",62,[[["origin",3]],["dispatchresultwithpostinfo",6]]],[11,"get","","",1,[[]]],[11,"get","","",2,[[]]],[11,"get","","",3,[[]]],[11,"get","","",4,[[]]],[11,"get","","",5,[[]]],[11,"get","","",6,[[]]],[11,"get","","",7,[[]]],[11,"get","","",8,[[]]],[11,"get","","",9,[[]]],[11,"get","","",10,[[]]],[11,"get","","",11,[[]]],[11,"get","","",12,[[]]],[11,"get","","",13,[[]]],[11,"get","","",14,[[]]],[11,"get","","",15,[[]]],[11,"get","","",16,[[]]],[11,"get","","",17,[[]]],[11,"get","","",18,[[]]],[11,"get","","",19,[[]]],[11,"get","","",20,[[]]],[11,"get","","",21,[[]]],[11,"get","","",22,[[]]],[11,"get","","",23,[[]]],[11,"get","","",24,[[]]],[11,"get","","",25,[[]]],[11,"get","","",26,[[]]],[11,"get","","",27,[[]]],[11,"get","","",28,[[]]],[11,"get","","",29,[[]]],[11,"get","","",30,[[]]],[11,"get","","",31,[[]]],[11,"get","","",32,[[]]],[11,"get","","",33,[[]]],[11,"get","","",34,[[]]],[11,"get","","",35,[[]]],[11,"get","","",36,[[]]],[11,"get","","",37,[[]]],[11,"get","","",38,[[]]],[11,"get","","",39,[[]]],[11,"get","","",40,[[]]],[11,"get","","",41,[[]]],[11,"get","","",42,[[]]],[11,"get","","",43,[[]]],[11,"get","","",44,[[]]],[11,"get","","",45,[[]]],[11,"get","","",46,[[]]],[11,"get","","",47,[[]]],[11,"get","","",48,[[]]],[11,"get","","",49,[[]]],[11,"get","","",50,[[]]],[11,"get","","",51,[[]]],[11,"get","","",52,[[]]],[11,"get","","",53,[[]]],[11,"get","","",54,[[]]],[11,"get","","",55,[[]]],[11,"get","","",56,[[]]],[11,"get","","",57,[[]]],[11,"index","","",71,[[],["option",4]]],[11,"name","","",71,[[],["option",4]]],[11,"add_filter","","",61,[[]]],[11,"reset_filter","","",61,[[]]],[11,"set_caller_from","","",61,[[]]],[11,"filter_call","","",61,[[]]],[11,"caller","","",61,[[]]],[11,"none","","Create with system none origin and …",61,[[]]],[11,"root","","Create with system root origin and no filter.",61,[[]]],[11,"signed","","Create with system signed origin and …",61,[[]]],[11,"is_sub_type","","",62,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"is_sub_type","","",62,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",62,[[],[["callablecallfor",6],["option",4]]]],[11,"is_sub_type","","",62,[[],[["option",4],["callablecallfor",6]]]],[11,"get","","",66,[[["currencyid",4]],["balance",6]]],[11,"construct_runtime_api","","",72,[[],["apiref",3]]],[11,"execute_in_transaction","","",73,[[["fnonce",8]]]],[11,"has_api","","",73,[[["blockid",4]],[["result",4],["apierror",4]]]],[11,"has_api_with","","",73,[[["blockid",4],["fn",8]],[["result",4],["apierror",4]]]],[11,"record_proof","","",73,[[]]],[11,"extract_proof","","",73,[[],[["option",4],["storageproof",3]]]],[11,"into_storage_changes","","",73,[[["changestriestate",3],["option",4]],[["result",4],["storagechanges",6],["string",3]]]],[11,"version","","",59,[[],["runtimeversion",3]]],[11,"execute_block","","",59,[[["block",6]]]],[11,"initialize_block","","",59,[[]]],[11,"metadata","","",59,[[],["opaquemetadata",3]]],[11,"Core_version_runtime_api_impl","","",73,[[["blockid",4],["executioncontext",4],["vec",3],["option",4]],[["apierror",4],["result",4],["nativeorencoded",4]]]],[11,"Core_execute_block_runtime_api_impl","","",73,[[["option",4],["blockid",4],["executioncontext",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"Core_initialize_block_runtime_api_impl","","",73,[[["option",4],["blockid",4],["executioncontext",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"Metadata_metadata_runtime_api_impl","","",73,[[["blockid",4],["executioncontext",4],["vec",3],["option",4]],[["nativeorencoded",4],["result",4],["apierror",4]]]],[11,"validate_transaction","","",59,[[["transactionsource",4]],["transactionvalidity",6]]],[11,"TaggedTransactionQueue_validate_transaction_runtime_api_impl","","",73,[[["option",4],["blockid",4],["executioncontext",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"apply_extrinsic","","",59,[[],["applyextrinsicresult",6]]],[11,"finalize_block","","",59,[[]]],[11,"inherent_extrinsics","","",59,[[["inherentdata",3]],["vec",3]]],[11,"check_inherents","","",59,[[["block",6],["inherentdata",3]],["checkinherentsresult",3]]],[11,"random_seed","","",59,[[]]],[11,"BlockBuilder_apply_extrinsic_runtime_api_impl","","",73,[[["option",4],["blockid",4],["executioncontext",4],["vec",3]],[["apierror",4],["nativeorencoded",4],["result",4]]]],[11,"BlockBuilder_finalize_block_runtime_api_impl","","",73,[[["blockid",4],["executioncontext",4],["vec",3],["option",4]],[["apierror",4],["result",4],["nativeorencoded",4]]]],[11,"BlockBuilder_inherent_extrinsics_runtime_api_impl","","",73,[[["inherentdata",3],["blockid",4],["executioncontext",4],["vec",3],["option",4]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"BlockBuilder_check_inherents_runtime_api_impl","","",73,[[["blockid",4],["executioncontext",4],["option",4],["vec",3]],[["nativeorencoded",4],["apierror",4],["result",4]]]],[11,"BlockBuilder_random_seed_runtime_api_impl","","",73,[[["blockid",4],["executioncontext",4],["vec",3],["option",4]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"offchain_worker","","",59,[[]]],[11,"OffchainWorkerApi_offchain_worker_runtime_api_impl","","",73,[[["option",4],["blockid",4],["executioncontext",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"generate_session_keys","","",59,[[["option",4],["vec",3]],["vec",3]]],[11,"decode_session_keys","","",59,[[["vec",3]],[["vec",3],["option",4]]]],[11,"SessionKeys_generate_session_keys_runtime_api_impl","","",73,[[["blockid",4],["executioncontext",4],["option",4],["option",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"SessionKeys_decode_session_keys_runtime_api_impl","","",73,[[["option",4],["blockid",4],["executioncontext",4],["vec",3]],[["result",4],["nativeorencoded",4],["apierror",4]]]],[11,"from_perthousand","parachain_runtime::constants::fee","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.",65,[[],["perbill",3]]],[11,"from_parts","","From an explicitly defined number of parts per maximum of …",65,[[],["perbill",3]]],[11,"from_percent","","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.",65,[[],["perbill",3]]],[11,"one","","See [<code>PerThing::one</code>]",65,[[],["perbill",3]]],[11,"is_one","","See [<code>PerThing::is_one</code>].",65,[[]]],[11,"zero","","See [<code>PerThing::zero</code>].",65,[[],["perbill",3]]],[11,"is_zero","","See [<code>PerThing::is_zero</code>].",65,[[]]],[11,"deconstruct","","See [<code>PerThing::deconstruct</code>].",65,[[]]],[11,"square","","See [<code>PerThing::square</code>].",65,[[],["perbill",3]]],[11,"from_fraction","","See [<code>PerThing::from_fraction</code>].",65,[[],["perbill",3]]],[11,"from_rational_approximation","","See [<code>PerThing::from_rational_approximation</code>].",65,[[],["perbill",3]]],[11,"mul_floor","","See [<code>PerThing::mul_floor</code>].",65,[[]]],[11,"mul_ceil","","See [<code>PerThing::mul_ceil</code>].",65,[[]]],[11,"saturating_reciprocal_mul","","See [<code>PerThing::saturating_reciprocal_mul</code>].",65,[[]]],[11,"saturating_reciprocal_mul_floor","","See [<code>PerThing::saturating_reciprocal_mul_floor</code>].",65,[[]]],[11,"saturating_reciprocal_mul_ceil","","See [<code>PerThing::saturating_reciprocal_mul_ceil</code>].",65,[[]]]],"p":[[3,"SessionKeys"],[3,"BlockHashCount"],[3,"Version"],[3,"RuntimeBlockLength"],[3,"RuntimeBlockWeights"],[3,"SS58Prefix"],[3,"MinimumPeriod"],[3,"ExistentialDeposit"],[3,"MaxLocks"],[3,"DustAccount"],[3,"GetNativeCurrencyId"],[3,"TransactionByteFee"],[3,"TargetBlockFullness"],[3,"AdjustmentVariable"],[3,"MinimumMultiplier"],[3,"BasicDeposit"],[3,"FieldDeposit"],[3,"SubAccountDeposit"],[3,"MaxSubAccounts"],[3,"MaxAdditionalFields"],[3,"MaxRegistrars"],[3,"MaximumSchedulerWeight"],[3,"MaxScheduledPerBlock"],[3,"ProposalBond"],[3,"ProposalBondMinimum"],[3,"SpendPeriod"],[3,"Burn"],[3,"DataDepositPerByte"],[3,"TreasuryModuleId"],[3,"MaximumReasonLength"],[3,"BountyUpdatePeriod"],[3,"BountyCuratorDeposit"],[3,"BountyValueMinimum"],[3,"BountyDepositBase"],[3,"BountyDepositPayoutDelay"],[3,"TipCountdown"],[3,"TipFindersFee"],[3,"TipReportDepositBase"],[3,"CouncilMotionDuration"],[3,"CouncilMaxProposals"],[3,"CouncilMaxMembers"],[3,"CandidacyBond"],[3,"VotingBondBase"],[3,"VotingBondFactor"],[3,"TermDuration"],[3,"DesiredMembers"],[3,"DesiredRunnersUp"],[3,"ElectionsPhragmenModuleId"],[3,"RococoLocation"],[3,"RococoNetwork"],[3,"RobonomicsNetwork"],[3,"RelayChainOrigin"],[3,"RelayChainCurrencyId"],[3,"Ancestry"],[3,"NativeOrmlTokens"],[3,"TotalBandwidth"],[3,"WeightLimit"],[3,"PointsLimit"],[4,"Event"],[3,"Runtime"],[4,"OriginCaller"],[3,"Origin"],[4,"Call"],[3,"GenesisConfig"],[3,"STAKE_HOLDERS"],[3,"Perbill"],[3,"ExistentialDeposits"],[3,"XcmConfig"],[3,"RelayToNative"],[3,"NativeToRelay"],[3,"AccountId32Convert"],[3,"PalletInfo"],[3,"RuntimeApi"],[3,"RuntimeApiImpl"]]},\
"robonomics":{"doc":"Robonomics node executable.","i":[[5,"main","robonomics","",null,[[],["result",6]]]],"p":[]},\
"robonomics_cli":{"doc":"Robonomics Framework console line interface.","i":[[0,"error","robonomics_cli","Errors that can occur during the cli operations.",null,null],[6,"Result","robonomics_cli::error","Result typedef.",null,null],[4,"Error","","Robonomics CLI errors.",null,null],[13,"ProtocolFailure","","Robonomics orotocol error.",0,null],[13,"IoFailure","","Robonomics I/O error.",0,null],[13,"Io","","Standard I/O error.",0,null],[13,"Other","","Other error.",0,null],[3,"IoCmd","robonomics_cli","Substrate friendly CLI I/O subsystem interaction.",null,null],[12,"operation","","I/O device operation to run.",1,null],[12,"shared_params","","",1,null],[4,"SinkCmd","","Sink device commands.",null,null],[13,"PubSub","","Broadcast data into PubSub topic.",2,null],[12,"topic_name","robonomics_cli::SinkCmd","Publish data into given topic name.",3,null],[12,"listen","","Listen address for incoming connections.",3,null],[12,"bootnodes","","Indicates PubSub nodes for first connections.",3,null],[12,"hearbeat_secs","","How often node should check another nodes availability, …",3,null],[13,"Datalog","robonomics_cli","Data blockchainization subsystem command.",2,null],[12,"remote","robonomics_cli::SinkCmd","Substrate node WebSocket endpoint.",4,null],[12,"suri","","Sender account seed URI.",4,null],[13,"Ipfs","robonomics_cli","Upload data into IPFS storage.",2,null],[12,"remote","robonomics_cli::SinkCmd","IPFS node endpoint.",5,null],[13,"Launch","robonomics_cli","CPS launch subsystem command.",2,null],[12,"remote","robonomics_cli::SinkCmd","Substrate node WebSocket endpoint.",6,null],[12,"suri","","Sender account seed URI.",6,null],[12,"robot","","Target CPS address.",6,null],[4,"SourceCmd","robonomics_cli","Source device commands.",null,null],[13,"SDS011","","Nova SDS011 particle sensor.",7,null],[12,"port","robonomics_cli::SourceCmd","Serial port that sensor connected for.",8,null],[12,"period","","Request interval in minutes.",8,null],[12,"encoding","","Source values encoding.",8,null],[13,"PubSub","robonomics_cli","Subscribe for broadcasing data.",7,null],[12,"topic_name","robonomics_cli::SourceCmd","Subscribe for given topic name and print received …",9,null],[12,"listen","","Listen address for incoming connections.",9,null],[12,"bootnodes","","Indicates PubSub nodes for first connections.",9,null],[12,"hearbeat","","How often node should check another nodes availability, …",9,null],[13,"Ipfs","robonomics_cli","Download data from IPFS storage.",7,null],[12,"remote","robonomics_cli::SourceCmd","IPFS node endpoint.",10,null],[13,"Launch","robonomics_cli","Robot launch request events.",7,null],[12,"remote","robonomics_cli::SourceCmd","Robonomics node API endpoint.",11,null],[12,"network","","Output address format.",11,null],[11,"from","robonomics_cli::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"vzip","","",0,[[]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"unique_saturated_into","","",0,[[]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","robonomics_cli","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"unique_saturated_into","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"unchecked_into","","",7,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[]]],[11,"vzip","","",7,[[]]],[11,"__clone_box","","",7,[[["private",3]]]],[11,"unique_saturated_into","","",7,[[]]],[11,"from_ref","","",7,[[]]],[11,"into_ref","","",7,[[]]],[11,"from_mut","","",7,[[]]],[11,"into_mut","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","robonomics_cli::error","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["string",3]],["error",4]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[]]],[11,"clone","robonomics_cli","",2,[[],["sinkcmd",4]]],[11,"clone","","",7,[[],["sourcecmd",4]]],[11,"fmt","robonomics_cli::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_cli","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_cli::error","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"clap","robonomics_cli","",1,[[],["app",3]]],[11,"from_clap","","",1,[[["argmatches",3]]]],[11,"clap","","",2,[[],["app",3]]],[11,"from_clap","","",2,[[["argmatches",3]]]],[11,"clap","","",7,[[],["app",3]]],[11,"from_clap","","",7,[[["argmatches",3]]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"is_subcommand","","",1,[[]]],[11,"augment_clap","","",2,[[["app",3]],["app",3]]],[11,"from_subcommand","","",2,[[],["option",4]]],[11,"is_subcommand","","",2,[[]]],[11,"augment_clap","","",7,[[["app",3]],["app",3]]],[11,"from_subcommand","","",7,[[],["option",4]]],[11,"is_subcommand","","",7,[[]]],[11,"shared_params","","",1,[[],["sharedparams",3]]],[11,"run","","Run I/O operation on device.",1,[[],["result",6]]],[11,"run","","Write data into sink device.",2,[[],["result",6]]],[11,"run","","Read data from source device.",7,[[],["result",6]]]],"p":[[4,"Error"],[3,"IoCmd"],[4,"SinkCmd"],[13,"PubSub"],[13,"Datalog"],[13,"Ipfs"],[13,"Launch"],[4,"SourceCmd"],[13,"SDS011"],[13,"PubSub"],[13,"Ipfs"],[13,"Launch"]]},\
"robonomics_io":{"doc":"Robonomics Framework I/O operations.","i":[[0,"error","robonomics_io","Errors that can occur during the I/O operations.",null,null],[6,"Result","robonomics_io::error","Sensor Result typedef.",null,null],[4,"Error","","Robonomics sensors errors.",null,null],[13,"ParticleSensor","","Particle sensor error.",0,null],[13,"ChannelSend","","Sync channel send error.",0,null],[13,"PrivateKeyFailure","","Private key loading error.",0,null],[13,"Protocol","","Protocol error.",0,null],[13,"Io","","Standard I/O error.",0,null],[13,"Other","","Other error.",0,null],[0,"sink","robonomics_io","Collections of I/O devices designed for consume data.",null,null],[0,"virt","robonomics_io::sink","Virtual sinkable devices.",null,null],[5,"stdout","robonomics_io::sink::virt","Print on standard console output.",null,[[]]],[5,"pubsub","","Publish data into PubSub topic.",null,[[["vec",3],["string",3],["multiaddr",3],["duration",3]],["result",6]]],[5,"datalog","","Submit signed data record into blockchain.",null,[[["string",3]],["result",6]]],[5,"ipfs","","Upload some data into IPFS network.",null,[[],["result",6]]],[5,"launch","","Submit signed launch request into blockchain.",null,[[["string",3]],["result",6]]],[0,"source","robonomics_io","Collection of I/O devices designed to provide some data.",null,null],[0,"serial","robonomics_io::source","Serial port sensors collection.",null,null],[5,"sds011","robonomics_io::source::serial","Nova SDS011 particle sensor.",null,[[["string",3]],["result",6]]],[0,"virt","robonomics_io::source","Virtual sensors collection.",null,null],[5,"stdin","robonomics_io::source::virt","Read line from standard console input.",null,[[]]],[5,"pubsub","","Subscribe for data from PubSub topic.",null,[[["vec",3],["string",3],["multiaddr",3],["duration",3]],["result",6]]],[5,"ipfs","","Download some data from IPFS network.",null,[[],["result",6]]],[5,"launch","","Listen for launch events on the blockchain.",null,[[["ss58addressformat",4],["string",3]]]],[11,"from","robonomics_io::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"vzip","","",0,[[]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"unique_saturated_into","","",0,[[]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["string",3]],["error",4]]],[11,"from","","",0,[[["secretstringerror",4]],["error",4]]],[11,"from","","",0,[[["senderror",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]]],"p":[[4,"Error"]]},\
"robonomics_protocol":{"doc":"Robonomics Network protocol.","i":[[0,"datalog","robonomics_protocol","Robonomics data blockchainization.",null,null],[5,"submit","robonomics_protocol::datalog","Sign datalog record and send using remote Robonomics node.",null,[[["string",3],["vec",3],["pair",8]]]],[0,"error","robonomics_protocol","Errors that can occur during the protocol operations.",null,null],[6,"Result","robonomics_protocol::error","Protocol Result typedef.",null,null],[6,"FutureResult","","Async version of protocol Result typedef.",null,null],[4,"Error","","Robonomics protocol errors.",null,null],[13,"Io","","IO error.",0,null],[13,"Transport","","Libp2p transport error.",0,null],[13,"ConnectionLimit","","Libp2p connection limit error.",0,null],[13,"SubmitFailure","","Transaction sending error.",0,null],[13,"Codec","","Codec error.",0,null],[13,"Ss58CodecError","","Unable to decode address.",0,null],[13,"Other","","Other error.",0,null],[0,"id","robonomics_protocol","Robonomics Network node identity.",null,null],[5,"random","robonomics_protocol::id","Generate random ED25519 keypair for node identity.",null,[[],["keypair",4]]],[0,"launch","robonomics_protocol","Launch CPS using Robonomics network.",null,null],[5,"submit","robonomics_protocol::launch","Send launch request using remote Robonomics node.",null,[[["string",3],["pair",8]]]],[5,"listen","","Listen for incoming launch requests.",null,[[["string",3]]]],[0,"pubsub","robonomics_protocol","Robonomics Network broadcasting layer.",null,null],[3,"Multiaddr","robonomics_protocol::pubsub","Representation of a Multiaddr.",null,null],[3,"PeerId","","Identifier of a peer of the network.",null,null],[0,"discovery","","Robonomics Publisher/Subscriber protocol node discovery.",null,null],[3,"DiscoveryMessage","robonomics_protocol::pubsub::discovery","Peer information service message.",null,null],[17,"DISCOVERY_TOPIC_NAME","","Peer discovery topic name.",null,null],[5,"start","","Start peer discovery service.",null,[[["arc",3],["pubsub",8]]]],[0,"gossipsub","robonomics_protocol::pubsub","PubSub implementation using libp2p Gossipsub.",null,null],[3,"PubSub","robonomics_protocol::pubsub::gossipsub","LibP2P Gossipsub based publisher/subscriber service.",null,null],[11,"new","","Create Gossipsub based PubSub service and worker.",1,[[["duration",3]],["result",6]]],[3,"Message","robonomics_protocol::pubsub","Robonomics PubSub message.",null,null],[12,"from","","",2,null],[12,"data","","",2,null],[6,"Inbox","","Stream of incoming messages.",null,null],[8,"PubSub","","Robonomics Publisher/Subscriber.",null,null],[10,"peer_id","","Returns local peer ID.",3,[[],["peerid",3]]],[10,"listen","","Listen address for incoming connections.",3,[[["multiaddr",3]],["futureresult",6]]],[10,"listeners","","Returns a list of node addresses.",3,[[],[["vec",3],["futureresult",6]]]],[10,"connect","","Connect to peer and add it into swarm.",3,[[["multiaddr",3]],["futureresult",6]]],[10,"subscribe","","Subscribe for a topic with given name.",3,[[],["inbox",6]]],[10,"unsubscribe","","Unsubscribe for incoming messages from topic.",3,[[],["futureresult",6]]],[10,"publish","","Publish message into the topic by name.",3,[[["into",8],["vec",3]]]],[0,"runtime","robonomics_protocol","SubXt compatible Robonomics Network runtime abstration.",null,null],[0,"pallet_datalog","robonomics_protocol::runtime","Robonomics Datalog pallet. SubXt compatible …",null,null],[8,"Datalog","robonomics_protocol::runtime::pallet_datalog","The subset of the <code>pallet_robonomics_datalog::Trait</code> that a …",null,null],[16,"Record","","",4,null],[8,"DatalogEventTypeRegistry","","<code>EventTypeRegistry</code> extension trait.",null,null],[10,"with_datalog","","Registers this modules types.",5,[[]]],[3,"RecordCall","","Send new data record into blockchain.",null,null],[8,"RecordCallExt","","Call extension trait.",null,null],[10,"record","","Create and submit an extrinsic.",6,[[["signer",8]],[["pin",3],["box",3]]]],[10,"record_and_watch","","Create, submit and watch an extrinsic.",6,[[["signer",8]],[["box",3],["pin",3]]]],[3,"NewRecordEvent","","New datalog record created.",null,null],[12,"sender","","Sender account.",7,null],[12,"timestamp","","Inblock time stamp.",7,null],[12,"record","","Data record.",7,null],[8,"NewRecordEventExt","","Event extension trait.",null,null],[10,"new_record","","Retrieves the event.",8,[[],[["option",4],["error",3],["result",4]]]],[3,"EreaseCall","","Erease all stored data.",null,null],[12,"_runtime","","Runtime marker.",9,null],[8,"EreaseCallExt","","Call extension trait.",null,null],[10,"erease","","Create and submit an extrinsic.",10,[[["signer",8]],[["pin",3],["box",3]]]],[10,"erease_and_watch","","Create, submit and watch an extrinsic.",10,[[["signer",8]],[["box",3],["pin",3]]]],[3,"ErasedEvent","","Account datalog storage ereased.",null,null],[12,"sender","","",11,null],[8,"ErasedEventExt","","Event extension trait.",null,null],[10,"erased","","Retrieves the event.",12,[[],[["option",4],["error",3],["result",4]]]],[3,"DatalogStore","","",null,null],[8,"DatalogStoreExt","","Store extension trait.",null,null],[10,"datalog","","Retrieve the store element.",13,[[["option",4]],[["pin",3],["box",3]]]],[10,"datalog_iter","","Iterate over the store element.",13,[[["option",4]],[["pin",3],["box",3]]]],[0,"pallet_launch","robonomics_protocol::runtime","Robonomics Launch pallet. SubXt compatible …",null,null],[8,"Launch","robonomics_protocol::runtime::pallet_launch","The subset of the <code>pallet_robonomics_launch::Trait</code> that a …",null,null],[16,"Parameter","","",14,null],[8,"LaunchEventTypeRegistry","","<code>EventTypeRegistry</code> extension trait.",null,null],[10,"with_launch","","Registers this modules types.",15,[[]]],[3,"LaunchCall","","Send launch request to robot with given parameter.",null,null],[8,"LaunchCallExt","","Call extension trait.",null,null],[10,"launch","","Create and submit an extrinsic.",16,[[["signer",8]],[["pin",3],["box",3]]]],[10,"launch_and_watch","","Create, submit and watch an extrinsic.",16,[[["signer",8]],[["box",3],["pin",3]]]],[3,"NewLaunchEvent","","New launch request sent.",null,null],[12,"sender","","Sender account.",17,null],[12,"robot","","Robot account with request to launch.",17,null],[12,"param","","Robot launch parameter.",17,null],[8,"NewLaunchEventExt","","Event extension trait.",null,null],[10,"new_launch","","Retrieves the event.",18,[[],[["result",4],["error",3],["option",4]]]],[3,"Robonomics","robonomics_protocol::runtime","Robonomics Network family runtimes.",null,null],[6,"AccountId","","Robonomics account is MultiSignature account.",null,null],[11,"from","robonomics_protocol::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"vzip","","",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"from_ref","","",0,[[]]],[11,"into_ref","","",0,[[]]],[11,"from_mut","","",0,[[]]],[11,"into_mut","","",0,[[]]],[11,"from","robonomics_protocol::pubsub","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"unchecked_into","","",19,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[]]],[11,"as_byte_slice","","",19,[[]]],[11,"as_slice_of","","",19,[[],[["error",4],["result",4]]]],[11,"as_bits","","",19,[[],["bitslice",3]]],[11,"vzip","","",19,[[]]],[11,"encode_hex","","",19,[[]]],[11,"encode_hex_upper","","",19,[[]]],[11,"get_hash","","",19,[[]]],[11,"__clone_box","","",19,[[["private",3]]]],[11,"unique_saturated_into","","",19,[[]]],[11,"equivalent","","",19,[[]]],[11,"from_ref","","",19,[[]]],[11,"into_ref","","",19,[[]]],[11,"from_mut","","",19,[[]]],[11,"into_mut","","",19,[[]]],[11,"protocol_name","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"unchecked_into","","",20,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[]]],[11,"as_byte_slice","","",20,[[]]],[11,"as_slice_of","","",20,[[],[["error",4],["result",4]]]],[11,"as_bits","","",20,[[],["bitslice",3]]],[11,"vzip","","",20,[[]]],[11,"encode_hex","","",20,[[]]],[11,"encode_hex_upper","","",20,[[]]],[11,"get_hash","","",20,[[]]],[11,"__clone_box","","",20,[[["private",3]]]],[11,"unique_saturated_into","","",20,[[]]],[11,"equivalent","","",20,[[]]],[11,"from_ref","","",20,[[]]],[11,"into_ref","","",20,[[]]],[11,"from_mut","","",20,[[]]],[11,"into_mut","","",20,[[]]],[11,"protocol_name","","",20,[[]]],[11,"from","robonomics_protocol::pubsub::discovery","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"unchecked_into","","",21,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[]]],[11,"vzip","","",21,[[]]],[11,"unique_saturated_into","","",21,[[]]],[11,"from_ref","","",21,[[]]],[11,"into_ref","","",21,[[]]],[11,"from_mut","","",21,[[]]],[11,"into_mut","","",21,[[]]],[11,"from","robonomics_protocol::pubsub::gossipsub","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"vzip","","",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"from_ref","","",1,[[]]],[11,"into_ref","","",1,[[]]],[11,"from_mut","","",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"from","robonomics_protocol::pubsub","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"unique_saturated_into","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from_ref","","",2,[[]]],[11,"into_ref","","",2,[[]]],[11,"from_mut","","",2,[[]]],[11,"into_mut","","",2,[[]]],[11,"from","robonomics_protocol::runtime::pallet_datalog","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"unchecked_into","","",22,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[]]],[11,"vzip","","",22,[[]]],[11,"__clone_box","","",22,[[["private",3]]]],[11,"unique_saturated_into","","",22,[[]]],[11,"equivalent","","",22,[[]]],[11,"from_ref","","",22,[[]]],[11,"into_ref","","",22,[[]]],[11,"from_mut","","",22,[[]]],[11,"into_mut","","",22,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"unchecked_into","","",7,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[]]],[11,"decode_all","","",7,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",7,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",7,[[],[["result",4],["error",3]]]],[11,"vzip","","",7,[[]]],[11,"__clone_box","","",7,[[["private",3]]]],[11,"unique_saturated_into","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"from_ref","","",7,[[]]],[11,"into_ref","","",7,[[]]],[11,"from_mut","","",7,[[]]],[11,"into_mut","","",7,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"unchecked_into","","",9,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[]]],[11,"vzip","","",9,[[]]],[11,"__clone_box","","",9,[[["private",3]]]],[11,"unique_saturated_into","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"from_ref","","",9,[[]]],[11,"into_ref","","",9,[[]]],[11,"from_mut","","",9,[[]]],[11,"into_mut","","",9,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"unchecked_into","","",11,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[]]],[11,"decode_all","","",11,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",11,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",11,[[],[["result",4],["error",3]]]],[11,"vzip","","",11,[[]]],[11,"__clone_box","","",11,[[["private",3]]]],[11,"unique_saturated_into","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"from_ref","","",11,[[]]],[11,"into_ref","","",11,[[]]],[11,"from_mut","","",11,[[]]],[11,"into_mut","","",11,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"unchecked_into","","",23,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[]]],[11,"vzip","","",23,[[]]],[11,"__clone_box","","",23,[[["private",3]]]],[11,"unique_saturated_into","","",23,[[]]],[11,"equivalent","","",23,[[]]],[11,"from_ref","","",23,[[]]],[11,"into_ref","","",23,[[]]],[11,"from_mut","","",23,[[]]],[11,"into_mut","","",23,[[]]],[11,"from","robonomics_protocol::runtime::pallet_launch","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"unchecked_into","","",24,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[]]],[11,"vzip","","",24,[[]]],[11,"__clone_box","","",24,[[["private",3]]]],[11,"unique_saturated_into","","",24,[[]]],[11,"equivalent","","",24,[[]]],[11,"from_ref","","",24,[[]]],[11,"into_ref","","",24,[[]]],[11,"from_mut","","",24,[[]]],[11,"into_mut","","",24,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"unchecked_into","","",17,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[]]],[11,"decode_all","","",17,[[],[["result",4],["error",3]]]],[11,"decode_all_with_depth_limit","","",17,[[],[["result",4],["error",3]]]],[11,"decode_with_depth_limit","","",17,[[],[["result",4],["error",3]]]],[11,"vzip","","",17,[[]]],[11,"__clone_box","","",17,[[["private",3]]]],[11,"unique_saturated_into","","",17,[[]]],[11,"equivalent","","",17,[[]]],[11,"from_ref","","",17,[[]]],[11,"into_ref","","",17,[[]]],[11,"from_mut","","",17,[[]]],[11,"into_mut","","",17,[[]]],[11,"from","robonomics_protocol::runtime","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"unchecked_into","","",25,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",25,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",25,[[]]],[11,"vzip","","",25,[[]]],[11,"__clone_box","","",25,[[["private",3]]]],[11,"unique_saturated_into","","",25,[[]]],[11,"equivalent","","",25,[[]]],[11,"from_ref","","",25,[[]]],[11,"into_ref","","",25,[[]]],[11,"from_mut","","",25,[[]]],[11,"into_mut","","",25,[[]]],[11,"hash","robonomics_protocol::pubsub","",19,[[]]],[11,"clone","","",19,[[],["multiaddr",3]]],[11,"as_ref","","",19,[[]]],[11,"serialize","","",19,[[],["result",4]]],[11,"from_str","","",19,[[],[["error",4],["result",4],["multiaddr",3]]]],[11,"from","","",19,[[["ipv6addr",3]],["multiaddr",3]]],[11,"from","","",19,[[["ipaddr",4]],["multiaddr",3]]],[11,"from","","",19,[[["protocol",4]],["multiaddr",3]]],[11,"from","","",19,[[["ipv4addr",3]],["multiaddr",3]]],[11,"try_from","","",19,[[["string",3]],[["error",4],["result",4],["multiaddr",3]]]],[11,"try_from","","",19,[[["vec",3],["global",3]],[["error",4],["result",4],["multiaddr",3]]]],[11,"try_from","","",19,[[],[["error",4],["result",4],["multiaddr",3]]]],[11,"partial_cmp","","",19,[[["multiaddr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["multiaddr",3]]]],[11,"le","","",19,[[["multiaddr",3]]]],[11,"gt","","",19,[[["multiaddr",3]]]],[11,"ge","","",19,[[["multiaddr",3]]]],[11,"eq","","",19,[[["multiaddr",3]]]],[11,"ne","","",19,[[["multiaddr",3]]]],[11,"cmp","","",19,[[["multiaddr",3]],["ordering",4]]],[11,"from_iter","","",19,[[],["multiaddr",3]]],[11,"deserialize","","",19,[[],[["result",4],["multiaddr",3]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","Convert a Multiaddr to a string",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",20,[[],["peerid",3]]],[11,"from_str","","",20,[[],[["result",4],["peerid",3]]]],[11,"cmp","","",20,[[["peerid",3]],["ordering",4]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",20,[[["vec",3],["global",3]],[["result",4],["peerid",3]]]],[11,"try_from","","",20,[[["uint",3],["multihash",3]],[["peerid",3],["result",4]]]],[11,"borrow","","",20,[[]]],[11,"hash","","",20,[[]]],[11,"as_ref","","",20,[[]]],[11,"from","","",20,[[["publickey",4]],["peerid",3]]],[11,"partial_cmp","","",20,[[["peerid",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",20,[[["peerid",3]]]],[11,"peer_id","robonomics_protocol::pubsub::gossipsub","",1,[[],["peerid",3]]],[11,"listen","","",1,[[["multiaddr",3]],["futureresult",6]]],[11,"listeners","","",1,[[],[["vec",3],["futureresult",6]]]],[11,"connect","","",1,[[["multiaddr",3]],["futureresult",6]]],[11,"subscribe","","",1,[[],["inbox",6]]],[11,"unsubscribe","","",1,[[],["futureresult",6]]],[11,"publish","","",1,[[["into",8],["vec",3]]]],[11,"from","robonomics_protocol::error","",0,[[],["error",4]]],[11,"from","","",0,[[["transporterror",4],["error",3]],["error",4]]],[11,"from","","",0,[[["string",3]],["error",4]]],[11,"from","","",0,[[["connectionlimit",3]],["error",4]]],[11,"from","","",0,[[["error",4]],["error",4]]],[11,"from","","",0,[[["error",6]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[]]],[11,"clone","robonomics_protocol::pubsub","",2,[[],["message",3]]],[11,"clone","robonomics_protocol::runtime::pallet_datalog","",22,[[],["recordcall",3]]],[11,"clone","","",7,[[],["newrecordevent",3]]],[11,"clone","","",9,[[],["ereasecall",3]]],[11,"clone","","",11,[[],["erasedevent",3]]],[11,"clone","","",23,[[],["datalogstore",3]]],[11,"clone","robonomics_protocol::runtime::pallet_launch","",24,[[],["launchcall",3]]],[11,"clone","","",17,[[],["newlaunchevent",3]]],[11,"clone","robonomics_protocol::runtime","",25,[[],["robonomics",3]]],[11,"eq","robonomics_protocol::pubsub::discovery","",21,[[["discoverymessage",3]]]],[11,"ne","","",21,[[["discoverymessage",3]]]],[11,"eq","robonomics_protocol::pubsub","",2,[[["message",3]]]],[11,"ne","","",2,[[["message",3]]]],[11,"eq","robonomics_protocol::runtime::pallet_datalog","",22,[[["recordcall",3]]]],[11,"ne","","",22,[[["recordcall",3]]]],[11,"eq","","",7,[[["newrecordevent",3]]]],[11,"ne","","",7,[[["newrecordevent",3]]]],[11,"eq","","",9,[[["ereasecall",3]]]],[11,"ne","","",9,[[["ereasecall",3]]]],[11,"eq","","",11,[[["erasedevent",3]]]],[11,"ne","","",11,[[["erasedevent",3]]]],[11,"eq","","",23,[[["datalogstore",3]]]],[11,"ne","","",23,[[["datalogstore",3]]]],[11,"eq","robonomics_protocol::runtime::pallet_launch","",24,[[["launchcall",3]]]],[11,"ne","","",24,[[["launchcall",3]]]],[11,"eq","","",17,[[["newlaunchevent",3]]]],[11,"ne","","",17,[[["newlaunchevent",3]]]],[11,"eq","robonomics_protocol::runtime","",25,[[["robonomics",3]]]],[11,"fmt","robonomics_protocol::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_protocol::pubsub::discovery","",21,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_protocol::pubsub","",2,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_protocol::runtime::pallet_datalog","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_protocol::runtime::pallet_launch","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_protocol::runtime","",25,[[["formatter",3]],["result",6]]],[11,"fmt","robonomics_protocol::error","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"encode_to","robonomics_protocol::runtime::pallet_datalog","",22,[[]]],[11,"encode","","",22,[[],["vec",3]]],[11,"using_encoded","","",22,[[["fnonce",8]]]],[11,"encode_to","","",9,[[]]],[11,"encode","","",9,[[],["vec",3]]],[11,"using_encoded","","",9,[[["fnonce",8]]]],[11,"encode_to","","",23,[[]]],[11,"encode","","",23,[[],["vec",3]]],[11,"using_encoded","","",23,[[["fnonce",8]]]],[11,"encode_to","robonomics_protocol::runtime::pallet_launch","",24,[[]]],[11,"decode","robonomics_protocol::runtime::pallet_datalog","",7,[[],[["error",3],["result",4]]]],[11,"decode","","",11,[[],[["error",3],["result",4]]]],[11,"decode","robonomics_protocol::runtime::pallet_launch","",17,[[],[["error",3],["result",4]]]],[11,"serialize","robonomics_protocol::pubsub::discovery","",21,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"register_type_sizes","robonomics_protocol::runtime","",25,[[["eventtyperegistry",3]]]],[11,"prefix","robonomics_protocol::runtime::pallet_datalog","",23,[[["metadata",3]],[["result",4],["storagekey",3],["metadataerror",4]]]],[11,"key","","",23,[[["metadata",3]],[["result",4],["storagekey",3],["metadataerror",4]]]],[11,"empty","robonomics_protocol::pubsub","Create a new, empty multiaddress.",19,[[],["multiaddr",3]]],[11,"with_capacity","","Create a new, empty multiaddress with the given capacity.",19,[[],["multiaddr",3]]],[11,"len","","Return the length in bytes of this multiaddress.",19,[[]]],[11,"is_empty","","Returns true if the length of this multiaddress is 0.",19,[[]]],[11,"to_vec","","Return a copy of this [<code>Multiaddr</code>]\'s byte representation.",19,[[],[["global",3],["vec",3]]]],[11,"push","","Adds an already-parsed address component to the end of …",19,[[["protocol",4]]]],[11,"pop","","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …",19,[[],[["option",4],["protocol",4]]]],[11,"with","","Like [<code>Multiaddr::push</code>] but consumes <code>self</code>.",19,[[["protocol",4]],["multiaddr",3]]],[11,"iter","","Returns the components of this multiaddress.",19,[[],["iter",3]]],[11,"replace","","Replace a [<code>Protocol</code>] at some position in this <code>Multiaddr</code>.",19,[[],[["option",4],["multiaddr",3]]]],[11,"from_public_key","","Builds a <code>PeerId</code> from a public key.",20,[[["publickey",4]],["peerid",3]]],[11,"from_bytes","","Checks whether <code>data</code> is a valid <code>PeerId</code>. If so, returns the …",20,[[["vec",3],["global",3]],[["peerid",3],["result",4],["vec",3]]]],[11,"from_multihash","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.",20,[[["uint",3],["multihash",3]],[["result",4],["peerid",3],["multihash",3]]]],[11,"random","","Generates a random peer ID from a cryptographically …",20,[[],["peerid",3]]],[11,"into_bytes","","Returns a raw bytes representation of this <code>PeerId</code>.",20,[[],[["global",3],["vec",3]]]],[11,"as_bytes","","Returns a raw bytes representation of this <code>PeerId</code>.",20,[[]]],[11,"to_base58","","Returns a base-58 encoded string of this <code>PeerId</code>.",20,[[],["string",3]]],[11,"is_public_key","","Checks whether the public key passed as parameter matches …",20,[[["publickey",4]],["option",4]]]],"p":[[4,"Error"],[3,"PubSub"],[3,"Message"],[8,"PubSub"],[8,"Datalog"],[8,"DatalogEventTypeRegistry"],[8,"RecordCallExt"],[3,"NewRecordEvent"],[8,"NewRecordEventExt"],[3,"EreaseCall"],[8,"EreaseCallExt"],[3,"ErasedEvent"],[8,"ErasedEventExt"],[8,"DatalogStoreExt"],[8,"Launch"],[8,"LaunchEventTypeRegistry"],[8,"LaunchCallExt"],[3,"NewLaunchEvent"],[8,"NewLaunchEventExt"],[3,"Multiaddr"],[3,"PeerId"],[3,"DiscoveryMessage"],[3,"RecordCall"],[3,"DatalogStore"],[3,"LaunchCall"],[3,"Robonomics"]]},\
"substrate_ros_api":{"doc":"","i":[[3,"SystemInfo","substrate_ros_api","Running node\'s static details.",null,null],[12,"impl_name","","Implementation name.",0,null],[12,"impl_version","","Implementation version.",0,null],[12,"chain_name","","Chain name.",0,null],[12,"properties","","A custom set of properties defined in the chain spec.",0,null],[12,"chain_type","","The type of this chain.",0,null],[0,"author","","",null,null],[5,"start_services","substrate_ros_api::author","",null,[[],[["result",4],["vec",3],["error",3]]]],[3,"Author","","Authoring API",null,null],[11,"new","","Create new instance of Authoring API.",1,[[["arc",3],["synccryptostoreptr",6],["arc",3]]]],[0,"chain","substrate_ros_api","",null,null],[5,"start_publishers","substrate_ros_api::chain","",null,[[],[["result",4],["error",3]]]],[5,"start_services","","",null,[[],[["result",4],["vec",3],["error",3]]]],[3,"FullChain","","Full node chain API.",null,null],[11,"unwrap_or_best","","",2,[[["option",4]]]],[11,"new","","",2,[[["arc",3]]]],[0,"state","substrate_ros_api","",null,null],[5,"start_services","substrate_ros_api::state","",null,[[],[["result",4],["vec",3],["error",3]]]],[3,"FullState","","Chain state API",null,null],[11,"unwrap_or_best","","",3,[[["option",4]]]],[11,"new","","",3,[[["arc",3]]]],[0,"system","substrate_ros_api","",null,null],[3,"SystemInfo","substrate_ros_api::system","Running node\'s static details.",null,null],[12,"impl_name","","Implementation name.",0,null],[12,"impl_version","","Implementation version.",0,null],[12,"chain_name","","Chain name.",0,null],[12,"properties","","A custom set of properties defined in the chain spec.",0,null],[12,"chain_type","","The type of this chain.",0,null],[5,"start_publishers","","",null,[[],[["result",4],["error",3]]]],[5,"start_services","","",null,[[],[["result",4],["vec",3],["error",3]]]],[3,"System","","Substrate system API.",null,null],[11,"new","","",4,[[["networkservice",3],["systeminfo",3],["arc",3]]]],[5,"start","substrate_ros_api","",null,[[["arc",3],["arc",3],["arc",3],["networkservice",3],["synccryptostoreptr",6],["systeminfo",3]],[["result",4],["error",3]]]],[11,"from","substrate_ros_api::system","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"unchecked_into","","",0,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[]]],[11,"unique_saturated_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"__clone_box","","",0,[[["private",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","substrate_ros_api::author","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"unchecked_into","","",1,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[]]],[11,"unique_saturated_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"__clone_box","","",1,[[["private",3]]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","substrate_ros_api::chain","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"unchecked_into","","",2,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[]]],[11,"unique_saturated_into","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"__clone_box","","",2,[[["private",3]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","substrate_ros_api::state","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"unchecked_into","","",3,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[]]],[11,"unique_saturated_into","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"__clone_box","","",3,[[["private",3]]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","substrate_ros_api::system","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"unchecked_into","","",4,[[]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[]]],[11,"unique_saturated_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"__clone_box","","",4,[[["private",3]]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"clone","","",0,[[],["systeminfo",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","substrate_ros_api::author","",1,[[]]],[11,"clone","substrate_ros_api::chain","",2,[[]]],[11,"clone","substrate_ros_api::state","",3,[[]]],[11,"clone","substrate_ros_api::system","",4,[[],["system",3]]],[11,"import_notification_stream","substrate_ros_api::chain","",2,[[],["importnotifications",6]]],[11,"finality_notification_stream","","",2,[[],["finalitynotifications",6]]],[11,"storage_changes_notification_stream","","",2,[[["option",4],["option",4]],[["storageeventstream",6],["result",6]]]]],"p":[[3,"SystemInfo"],[3,"Author"],[3,"FullChain"],[3,"FullState"],[3,"System"]]},\
"substrate_ros_msgs":{"doc":"","i":[[0,"std_msgs","substrate_ros_msgs","",null,null],[3,"Bool","substrate_ros_msgs::std_msgs","",null,null],[12,"data","","",0,null],[3,"Time","","",null,null],[12,"data","","",1,null],[3,"UInt64","","",null,null],[12,"data","","",2,null],[3,"String","","",null,null],[12,"data","","",3,null],[0,"std_srvs","substrate_ros_msgs","",null,null],[3,"TriggerReq","substrate_ros_msgs::std_srvs","",null,null],[3,"TriggerRes","","",null,null],[12,"success","","",4,null],[12,"message","","",4,null],[3,"Trigger","","",null,null],[0,"substrate_ros_msgs","substrate_ros_msgs","",null,null],[3,"GetFinalizedHeadRes","substrate_ros_msgs::substrate_ros_msgs","",null,null],[12,"hash","","",5,null],[3,"GetBlockHashReq","","",null,null],[12,"number","","",6,null],[3,"SubmitExtrinsicReq","","",null,null],[12,"extrinsic","","",7,null],[3,"StorageHashReq","","",null,null],[12,"block","","",8,null],[12,"key","","",8,null],[3,"GetBlockRes","","",null,null],[12,"block_json","","",9,null],[3,"GetBestHeadRes","","",null,null],[12,"hash","","",10,null],[3,"GetBlockReq","","",null,null],[12,"hash","","",11,null],[3,"StateCallRes","","",null,null],[12,"data","","",12,null],[3,"ExHash","","",null,null],[12,"data","","",13,null],[3,"RawExtrinsic","","",null,null],[12,"data","","",14,null],[3,"SystemHealthRes","","",null,null],[12,"info","","",15,null],[3,"SystemHealthReq","","",null,null],[3,"StorageQueryRes","","",null,null],[12,"data","","",16,null],[3,"StorageKey","","",null,null],[12,"data","","",17,null],[3,"StorageSizeReq","","",null,null],[12,"block","","",18,null],[12,"key","","",18,null],[3,"GetFinalizedHeadReq","","",null,null],[3,"SubmitExtrinsicRes","","",null,null],[12,"hash","","",19,null],[3,"SystemHealthInfo","","",null,null],[12,"peers","","",20,null],[12,"is_syncing","","",20,null],[3,"GetBlockHeaderRes","","",null,null],[12,"header_json","","",21,null],[3,"PendingExtrinsicsRes","","",null,null],[12,"extrinsics","","",22,null],[3,"PendingExtrinsicsReq","","",null,null],[3,"StateCallReq","","",null,null],[12,"method","","",23,null],[12,"data","","",23,null],[12,"block","","",23,null],[3,"StorageSizeRes","","",null,null],[12,"size","","",24,null],[3,"GetBlockHeaderReq","","",null,null],[12,"hash","","",25,null],[3,"RemoveExtrinsicReq","","",null,null],[12,"extrinsics","","",26,null],[3,"StorageKeysReq","","",null,null],[12,"block","","",27,null],[12,"prefix","","",27,null],[3,"StorageQueryReq","","",null,null],[12,"block","","",28,null],[12,"key","","",28,null],[3,"RemoveExtrinsicRes","","",null,null],[12,"extrinsics","","",29,null],[3,"GetBlockHashRes","","",null,null],[12,"hash","","",30,null],[3,"StorageKeysRes","","",null,null],[12,"keys","","",31,null],[3,"GetBestHeadReq","","",null,null],[3,"BlockHash","","",null,null],[12,"data","","",32,null],[3,"StorageHashRes","","",null,null],[12,"hash","","",33,null],[3,"RemoveExtrinsic","","",null,null],[3,"StorageQuery","","",null,null],[3,"StorageHash","","",null,null],[3,"PendingExtrinsics","","",null,null],[3,"StorageKeys","","",null,null],[3,"SystemHealth","","",null,null],[3,"SubmitExtrinsic","","",null,null],[3,"GetFinalizedHead","","",null,null],[3,"StateCall","","",null,null],[3,"StorageSize","","",null,null],[3,"GetBestHead","","",null,null],[3,"GetBlockHash","","",null,null],[3,"GetBlock","","",null,null],[3,"GetBlockHeader","","",null,null],[11,"from","substrate_ros_msgs::std_msgs","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","substrate_ros_msgs::std_srvs","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","substrate_ros_msgs::substrate_ros_msgs","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"clone","substrate_ros_msgs::std_msgs","",0,[[],["bool",3]]],[11,"clone","","",1,[[],["time",3]]],[11,"clone","","",2,[[],["uint64",3]]],[11,"clone","","",3,[[],["string",3]]],[11,"clone","substrate_ros_msgs::std_srvs","",34,[[],["triggerreq",3]]],[11,"clone","","",4,[[],["triggerres",3]]],[11,"clone","","",35,[[],["trigger",3]]],[11,"clone","substrate_ros_msgs::substrate_ros_msgs","",5,[[],["getfinalizedheadres",3]]],[11,"clone","","",6,[[],["getblockhashreq",3]]],[11,"clone","","",7,[[],["submitextrinsicreq",3]]],[11,"clone","","",8,[[],["storagehashreq",3]]],[11,"clone","","",9,[[],["getblockres",3]]],[11,"clone","","",10,[[],["getbestheadres",3]]],[11,"clone","","",11,[[],["getblockreq",3]]],[11,"clone","","",12,[[],["statecallres",3]]],[11,"clone","","",13,[[],["exhash",3]]],[11,"clone","","",14,[[],["rawextrinsic",3]]],[11,"clone","","",15,[[],["systemhealthres",3]]],[11,"clone","","",36,[[],["systemhealthreq",3]]],[11,"clone","","",16,[[],["storagequeryres",3]]],[11,"clone","","",17,[[],["storagekey",3]]],[11,"clone","","",18,[[],["storagesizereq",3]]],[11,"clone","","",37,[[],["getfinalizedheadreq",3]]],[11,"clone","","",19,[[],["submitextrinsicres",3]]],[11,"clone","","",20,[[],["systemhealthinfo",3]]],[11,"clone","","",21,[[],["getblockheaderres",3]]],[11,"clone","","",22,[[],["pendingextrinsicsres",3]]],[11,"clone","","",38,[[],["pendingextrinsicsreq",3]]],[11,"clone","","",23,[[],["statecallreq",3]]],[11,"clone","","",24,[[],["storagesizeres",3]]],[11,"clone","","",25,[[],["getblockheaderreq",3]]],[11,"clone","","",26,[[],["removeextrinsicreq",3]]],[11,"clone","","",27,[[],["storagekeysreq",3]]],[11,"clone","","",28,[[],["storagequeryreq",3]]],[11,"clone","","",29,[[],["removeextrinsicres",3]]],[11,"clone","","",30,[[],["getblockhashres",3]]],[11,"clone","","",31,[[],["storagekeysres",3]]],[11,"clone","","",39,[[],["getbestheadreq",3]]],[11,"clone","","",32,[[],["blockhash",3]]],[11,"clone","","",33,[[],["storagehashres",3]]],[11,"clone","","",40,[[],["removeextrinsic",3]]],[11,"clone","","",41,[[],["storagequery",3]]],[11,"clone","","",42,[[],["storagehash",3]]],[11,"clone","","",43,[[],["pendingextrinsics",3]]],[11,"clone","","",44,[[],["storagekeys",3]]],[11,"clone","","",45,[[],["systemhealth",3]]],[11,"clone","","",46,[[],["submitextrinsic",3]]],[11,"clone","","",47,[[],["getfinalizedhead",3]]],[11,"clone","","",48,[[],["statecall",3]]],[11,"clone","","",49,[[],["storagesize",3]]],[11,"clone","","",50,[[],["getbesthead",3]]],[11,"clone","","",51,[[],["getblockhash",3]]],[11,"clone","","",52,[[],["getblock",3]]],[11,"clone","","",53,[[],["getblockheader",3]]],[11,"default","substrate_ros_msgs::std_msgs","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","substrate_ros_msgs::std_srvs","",34,[[]]],[11,"default","","",4,[[]]],[11,"default","","",35,[[],["trigger",3]]],[11,"default","substrate_ros_msgs::substrate_ros_msgs","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",36,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",37,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",38,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",39,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",40,[[],["removeextrinsic",3]]],[11,"default","","",41,[[],["storagequery",3]]],[11,"default","","",42,[[],["storagehash",3]]],[11,"default","","",43,[[],["pendingextrinsics",3]]],[11,"default","","",44,[[],["storagekeys",3]]],[11,"default","","",45,[[],["systemhealth",3]]],[11,"default","","",46,[[],["submitextrinsic",3]]],[11,"default","","",47,[[],["getfinalizedhead",3]]],[11,"default","","",48,[[],["statecall",3]]],[11,"default","","",49,[[],["storagesize",3]]],[11,"default","","",50,[[],["getbesthead",3]]],[11,"default","","",51,[[],["getblockhash",3]]],[11,"default","","",52,[[],["getblock",3]]],[11,"default","","",53,[[],["getblockheader",3]]],[11,"eq","substrate_ros_msgs::std_msgs","",0,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[]]],[11,"eq","substrate_ros_msgs::std_srvs","",34,[[]]],[11,"eq","","",4,[[]]],[11,"eq","","",35,[[["trigger",3]]]],[11,"eq","substrate_ros_msgs::substrate_ros_msgs","",5,[[]]],[11,"eq","","",6,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",8,[[]]],[11,"eq","","",9,[[]]],[11,"eq","","",10,[[]]],[11,"eq","","",11,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",13,[[]]],[11,"eq","","",14,[[]]],[11,"eq","","",15,[[]]],[11,"eq","","",36,[[]]],[11,"eq","","",16,[[]]],[11,"eq","","",17,[[]]],[11,"eq","","",18,[[]]],[11,"eq","","",37,[[]]],[11,"eq","","",19,[[]]],[11,"eq","","",20,[[]]],[11,"eq","","",21,[[]]],[11,"eq","","",22,[[]]],[11,"eq","","",38,[[]]],[11,"eq","","",23,[[]]],[11,"eq","","",24,[[]]],[11,"eq","","",25,[[]]],[11,"eq","","",26,[[]]],[11,"eq","","",27,[[]]],[11,"eq","","",28,[[]]],[11,"eq","","",29,[[]]],[11,"eq","","",30,[[]]],[11,"eq","","",31,[[]]],[11,"eq","","",39,[[]]],[11,"eq","","",32,[[]]],[11,"eq","","",33,[[]]],[11,"eq","","",40,[[["removeextrinsic",3]]]],[11,"eq","","",41,[[["storagequery",3]]]],[11,"eq","","",42,[[["storagehash",3]]]],[11,"eq","","",43,[[["pendingextrinsics",3]]]],[11,"eq","","",44,[[["storagekeys",3]]]],[11,"eq","","",45,[[["systemhealth",3]]]],[11,"eq","","",46,[[["submitextrinsic",3]]]],[11,"eq","","",47,[[["getfinalizedhead",3]]]],[11,"eq","","",48,[[["statecall",3]]]],[11,"eq","","",49,[[["storagesize",3]]]],[11,"eq","","",50,[[["getbesthead",3]]]],[11,"eq","","",51,[[["getblockhash",3]]]],[11,"eq","","",52,[[["getblock",3]]]],[11,"eq","","",53,[[["getblockheader",3]]]],[11,"fmt","substrate_ros_msgs::std_msgs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","substrate_ros_msgs::std_srvs","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","substrate_ros_msgs::substrate_ros_msgs","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"msg_definition","substrate_ros_msgs::std_msgs","",0,[[],["string",3]]],[11,"md5sum","","",0,[[],["string",3]]],[11,"msg_type","","",0,[[],["string",3]]],[11,"msg_definition","","",1,[[],["string",3]]],[11,"md5sum","","",1,[[],["string",3]]],[11,"msg_type","","",1,[[],["string",3]]],[11,"msg_definition","","",2,[[],["string",3]]],[11,"md5sum","","",2,[[],["string",3]]],[11,"msg_type","","",2,[[],["string",3]]],[11,"msg_definition","","",3,[[],["string",3]]],[11,"md5sum","","",3,[[],["string",3]]],[11,"msg_type","","",3,[[],["string",3]]],[11,"msg_definition","substrate_ros_msgs::std_srvs","",34,[[],["string",3]]],[11,"md5sum","","",34,[[],["string",3]]],[11,"msg_type","","",34,[[],["string",3]]],[11,"msg_definition","","",4,[[],["string",3]]],[11,"md5sum","","",4,[[],["string",3]]],[11,"msg_type","","",4,[[],["string",3]]],[11,"msg_definition","","",35,[[],["string",3]]],[11,"md5sum","","",35,[[],["string",3]]],[11,"msg_type","","",35,[[],["string",3]]],[11,"msg_definition","substrate_ros_msgs::substrate_ros_msgs","",5,[[],["string",3]]],[11,"md5sum","","",5,[[],["string",3]]],[11,"msg_type","","",5,[[],["string",3]]],[11,"msg_definition","","",6,[[],["string",3]]],[11,"md5sum","","",6,[[],["string",3]]],[11,"msg_type","","",6,[[],["string",3]]],[11,"msg_definition","","",7,[[],["string",3]]],[11,"md5sum","","",7,[[],["string",3]]],[11,"msg_type","","",7,[[],["string",3]]],[11,"msg_definition","","",8,[[],["string",3]]],[11,"md5sum","","",8,[[],["string",3]]],[11,"msg_type","","",8,[[],["string",3]]],[11,"msg_definition","","",9,[[],["string",3]]],[11,"md5sum","","",9,[[],["string",3]]],[11,"msg_type","","",9,[[],["string",3]]],[11,"msg_definition","","",10,[[],["string",3]]],[11,"md5sum","","",10,[[],["string",3]]],[11,"msg_type","","",10,[[],["string",3]]],[11,"msg_definition","","",11,[[],["string",3]]],[11,"md5sum","","",11,[[],["string",3]]],[11,"msg_type","","",11,[[],["string",3]]],[11,"msg_definition","","",12,[[],["string",3]]],[11,"md5sum","","",12,[[],["string",3]]],[11,"msg_type","","",12,[[],["string",3]]],[11,"msg_definition","","",13,[[],["string",3]]],[11,"md5sum","","",13,[[],["string",3]]],[11,"msg_type","","",13,[[],["string",3]]],[11,"msg_definition","","",14,[[],["string",3]]],[11,"md5sum","","",14,[[],["string",3]]],[11,"msg_type","","",14,[[],["string",3]]],[11,"msg_definition","","",15,[[],["string",3]]],[11,"md5sum","","",15,[[],["string",3]]],[11,"msg_type","","",15,[[],["string",3]]],[11,"msg_definition","","",36,[[],["string",3]]],[11,"md5sum","","",36,[[],["string",3]]],[11,"msg_type","","",36,[[],["string",3]]],[11,"msg_definition","","",16,[[],["string",3]]],[11,"md5sum","","",16,[[],["string",3]]],[11,"msg_type","","",16,[[],["string",3]]],[11,"msg_definition","","",17,[[],["string",3]]],[11,"md5sum","","",17,[[],["string",3]]],[11,"msg_type","","",17,[[],["string",3]]],[11,"msg_definition","","",18,[[],["string",3]]],[11,"md5sum","","",18,[[],["string",3]]],[11,"msg_type","","",18,[[],["string",3]]],[11,"msg_definition","","",37,[[],["string",3]]],[11,"md5sum","","",37,[[],["string",3]]],[11,"msg_type","","",37,[[],["string",3]]],[11,"msg_definition","","",19,[[],["string",3]]],[11,"md5sum","","",19,[[],["string",3]]],[11,"msg_type","","",19,[[],["string",3]]],[11,"msg_definition","","",20,[[],["string",3]]],[11,"md5sum","","",20,[[],["string",3]]],[11,"msg_type","","",20,[[],["string",3]]],[11,"msg_definition","","",21,[[],["string",3]]],[11,"md5sum","","",21,[[],["string",3]]],[11,"msg_type","","",21,[[],["string",3]]],[11,"msg_definition","","",22,[[],["string",3]]],[11,"md5sum","","",22,[[],["string",3]]],[11,"msg_type","","",22,[[],["string",3]]],[11,"msg_definition","","",38,[[],["string",3]]],[11,"md5sum","","",38,[[],["string",3]]],[11,"msg_type","","",38,[[],["string",3]]],[11,"msg_definition","","",23,[[],["string",3]]],[11,"md5sum","","",23,[[],["string",3]]],[11,"msg_type","","",23,[[],["string",3]]],[11,"msg_definition","","",24,[[],["string",3]]],[11,"md5sum","","",24,[[],["string",3]]],[11,"msg_type","","",24,[[],["string",3]]],[11,"msg_definition","","",25,[[],["string",3]]],[11,"md5sum","","",25,[[],["string",3]]],[11,"msg_type","","",25,[[],["string",3]]],[11,"msg_definition","","",26,[[],["string",3]]],[11,"md5sum","","",26,[[],["string",3]]],[11,"msg_type","","",26,[[],["string",3]]],[11,"msg_definition","","",27,[[],["string",3]]],[11,"md5sum","","",27,[[],["string",3]]],[11,"msg_type","","",27,[[],["string",3]]],[11,"msg_definition","","",28,[[],["string",3]]],[11,"md5sum","","",28,[[],["string",3]]],[11,"msg_type","","",28,[[],["string",3]]],[11,"msg_definition","","",29,[[],["string",3]]],[11,"md5sum","","",29,[[],["string",3]]],[11,"msg_type","","",29,[[],["string",3]]],[11,"msg_definition","","",30,[[],["string",3]]],[11,"md5sum","","",30,[[],["string",3]]],[11,"msg_type","","",30,[[],["string",3]]],[11,"msg_definition","","",31,[[],["string",3]]],[11,"md5sum","","",31,[[],["string",3]]],[11,"msg_type","","",31,[[],["string",3]]],[11,"msg_definition","","",39,[[],["string",3]]],[11,"md5sum","","",39,[[],["string",3]]],[11,"msg_type","","",39,[[],["string",3]]],[11,"msg_definition","","",32,[[],["string",3]]],[11,"md5sum","","",32,[[],["string",3]]],[11,"msg_type","","",32,[[],["string",3]]],[11,"msg_definition","","",33,[[],["string",3]]],[11,"md5sum","","",33,[[],["string",3]]],[11,"msg_type","","",33,[[],["string",3]]],[11,"msg_definition","","",40,[[],["string",3]]],[11,"md5sum","","",40,[[],["string",3]]],[11,"msg_type","","",40,[[],["string",3]]],[11,"msg_definition","","",41,[[],["string",3]]],[11,"md5sum","","",41,[[],["string",3]]],[11,"msg_type","","",41,[[],["string",3]]],[11,"msg_definition","","",42,[[],["string",3]]],[11,"md5sum","","",42,[[],["string",3]]],[11,"msg_type","","",42,[[],["string",3]]],[11,"msg_definition","","",43,[[],["string",3]]],[11,"md5sum","","",43,[[],["string",3]]],[11,"msg_type","","",43,[[],["string",3]]],[11,"msg_definition","","",44,[[],["string",3]]],[11,"md5sum","","",44,[[],["string",3]]],[11,"msg_type","","",44,[[],["string",3]]],[11,"msg_definition","","",45,[[],["string",3]]],[11,"md5sum","","",45,[[],["string",3]]],[11,"msg_type","","",45,[[],["string",3]]],[11,"msg_definition","","",46,[[],["string",3]]],[11,"md5sum","","",46,[[],["string",3]]],[11,"msg_type","","",46,[[],["string",3]]],[11,"msg_definition","","",47,[[],["string",3]]],[11,"md5sum","","",47,[[],["string",3]]],[11,"msg_type","","",47,[[],["string",3]]],[11,"msg_definition","","",48,[[],["string",3]]],[11,"md5sum","","",48,[[],["string",3]]],[11,"msg_type","","",48,[[],["string",3]]],[11,"msg_definition","","",49,[[],["string",3]]],[11,"md5sum","","",49,[[],["string",3]]],[11,"msg_type","","",49,[[],["string",3]]],[11,"msg_definition","","",50,[[],["string",3]]],[11,"md5sum","","",50,[[],["string",3]]],[11,"msg_type","","",50,[[],["string",3]]],[11,"msg_definition","","",51,[[],["string",3]]],[11,"md5sum","","",51,[[],["string",3]]],[11,"msg_type","","",51,[[],["string",3]]],[11,"msg_definition","","",52,[[],["string",3]]],[11,"md5sum","","",52,[[],["string",3]]],[11,"msg_type","","",52,[[],["string",3]]],[11,"msg_definition","","",53,[[],["string",3]]],[11,"md5sum","","",53,[[],["string",3]]],[11,"msg_type","","",53,[[],["string",3]]],[11,"encode","substrate_ros_msgs::std_msgs","",0,[[["write",8]],["result",6]]],[11,"decode","","",0,[[["read",8]],["result",6]]],[11,"encode","","",1,[[["write",8]],["result",6]]],[11,"decode","","",1,[[["read",8]],["result",6]]],[11,"encode","","",2,[[["write",8]],["result",6]]],[11,"decode","","",2,[[["read",8]],["result",6]]],[11,"encode","","",3,[[["write",8]],["result",6]]],[11,"decode","","",3,[[["read",8]],["result",6]]],[11,"encode","substrate_ros_msgs::std_srvs","",34,[[["write",8]],["result",6]]],[11,"decode","","",34,[[["read",8]],["result",6]]],[11,"encode","","",4,[[["write",8]],["result",6]]],[11,"decode","","",4,[[["read",8]],["result",6]]],[11,"encode","","",35,[[["write",8]],["result",6]]],[11,"decode","","",35,[[["read",8]],["result",6]]],[11,"encode","substrate_ros_msgs::substrate_ros_msgs","",5,[[["write",8]],["result",6]]],[11,"decode","","",5,[[["read",8]],["result",6]]],[11,"encode","","",6,[[["write",8]],["result",6]]],[11,"decode","","",6,[[["read",8]],["result",6]]],[11,"encode","","",7,[[["write",8]],["result",6]]],[11,"decode","","",7,[[["read",8]],["result",6]]],[11,"encode","","",8,[[["write",8]],["result",6]]],[11,"decode","","",8,[[["read",8]],["result",6]]],[11,"encode","","",9,[[["write",8]],["result",6]]],[11,"decode","","",9,[[["read",8]],["result",6]]],[11,"encode","","",10,[[["write",8]],["result",6]]],[11,"decode","","",10,[[["read",8]],["result",6]]],[11,"encode","","",11,[[["write",8]],["result",6]]],[11,"decode","","",11,[[["read",8]],["result",6]]],[11,"encode","","",12,[[["write",8]],["result",6]]],[11,"decode","","",12,[[["read",8]],["result",6]]],[11,"encode","","",13,[[["write",8]],["result",6]]],[11,"decode","","",13,[[["read",8]],["result",6]]],[11,"encode","","",14,[[["write",8]],["result",6]]],[11,"decode","","",14,[[["read",8]],["result",6]]],[11,"encode","","",15,[[["write",8]],["result",6]]],[11,"decode","","",15,[[["read",8]],["result",6]]],[11,"encode","","",36,[[["write",8]],["result",6]]],[11,"decode","","",36,[[["read",8]],["result",6]]],[11,"encode","","",16,[[["write",8]],["result",6]]],[11,"decode","","",16,[[["read",8]],["result",6]]],[11,"encode","","",17,[[["write",8]],["result",6]]],[11,"decode","","",17,[[["read",8]],["result",6]]],[11,"encode","","",18,[[["write",8]],["result",6]]],[11,"decode","","",18,[[["read",8]],["result",6]]],[11,"encode","","",37,[[["write",8]],["result",6]]],[11,"decode","","",37,[[["read",8]],["result",6]]],[11,"encode","","",19,[[["write",8]],["result",6]]],[11,"decode","","",19,[[["read",8]],["result",6]]],[11,"encode","","",20,[[["write",8]],["result",6]]],[11,"decode","","",20,[[["read",8]],["result",6]]],[11,"encode","","",21,[[["write",8]],["result",6]]],[11,"decode","","",21,[[["read",8]],["result",6]]],[11,"encode","","",22,[[["write",8]],["result",6]]],[11,"decode","","",22,[[["read",8]],["result",6]]],[11,"encode","","",38,[[["write",8]],["result",6]]],[11,"decode","","",38,[[["read",8]],["result",6]]],[11,"encode","","",23,[[["write",8]],["result",6]]],[11,"decode","","",23,[[["read",8]],["result",6]]],[11,"encode","","",24,[[["write",8]],["result",6]]],[11,"decode","","",24,[[["read",8]],["result",6]]],[11,"encode","","",25,[[["write",8]],["result",6]]],[11,"decode","","",25,[[["read",8]],["result",6]]],[11,"encode","","",26,[[["write",8]],["result",6]]],[11,"decode","","",26,[[["read",8]],["result",6]]],[11,"encode","","",27,[[["write",8]],["result",6]]],[11,"decode","","",27,[[["read",8]],["result",6]]],[11,"encode","","",28,[[["write",8]],["result",6]]],[11,"decode","","",28,[[["read",8]],["result",6]]],[11,"encode","","",29,[[["write",8]],["result",6]]],[11,"decode","","",29,[[["read",8]],["result",6]]],[11,"encode","","",30,[[["write",8]],["result",6]]],[11,"decode","","",30,[[["read",8]],["result",6]]],[11,"encode","","",31,[[["write",8]],["result",6]]],[11,"decode","","",31,[[["read",8]],["result",6]]],[11,"encode","","",39,[[["write",8]],["result",6]]],[11,"decode","","",39,[[["read",8]],["result",6]]],[11,"encode","","",32,[[["write",8]],["result",6]]],[11,"decode","","",32,[[["read",8]],["result",6]]],[11,"encode","","",33,[[["write",8]],["result",6]]],[11,"decode","","",33,[[["read",8]],["result",6]]],[11,"encode","","",40,[[["write",8]],["result",6]]],[11,"decode","","",40,[[["read",8]],["result",6]]],[11,"encode","","",41,[[["write",8]],["result",6]]],[11,"decode","","",41,[[["read",8]],["result",6]]],[11,"encode","","",42,[[["write",8]],["result",6]]],[11,"decode","","",42,[[["read",8]],["result",6]]],[11,"encode","","",43,[[["write",8]],["result",6]]],[11,"decode","","",43,[[["read",8]],["result",6]]],[11,"encode","","",44,[[["write",8]],["result",6]]],[11,"decode","","",44,[[["read",8]],["result",6]]],[11,"encode","","",45,[[["write",8]],["result",6]]],[11,"decode","","",45,[[["read",8]],["result",6]]],[11,"encode","","",46,[[["write",8]],["result",6]]],[11,"decode","","",46,[[["read",8]],["result",6]]],[11,"encode","","",47,[[["write",8]],["result",6]]],[11,"decode","","",47,[[["read",8]],["result",6]]],[11,"encode","","",48,[[["write",8]],["result",6]]],[11,"decode","","",48,[[["read",8]],["result",6]]],[11,"encode","","",49,[[["write",8]],["result",6]]],[11,"decode","","",49,[[["read",8]],["result",6]]],[11,"encode","","",50,[[["write",8]],["result",6]]],[11,"decode","","",50,[[["read",8]],["result",6]]],[11,"encode","","",51,[[["write",8]],["result",6]]],[11,"decode","","",51,[[["read",8]],["result",6]]],[11,"encode","","",52,[[["write",8]],["result",6]]],[11,"decode","","",52,[[["read",8]],["result",6]]],[11,"encode","","",53,[[["write",8]],["result",6]]],[11,"decode","","",53,[[["read",8]],["result",6]]]],"p":[[3,"Bool"],[3,"Time"],[3,"UInt64"],[3,"String"],[3,"TriggerRes"],[3,"GetFinalizedHeadRes"],[3,"GetBlockHashReq"],[3,"SubmitExtrinsicReq"],[3,"StorageHashReq"],[3,"GetBlockRes"],[3,"GetBestHeadRes"],[3,"GetBlockReq"],[3,"StateCallRes"],[3,"ExHash"],[3,"RawExtrinsic"],[3,"SystemHealthRes"],[3,"StorageQueryRes"],[3,"StorageKey"],[3,"StorageSizeReq"],[3,"SubmitExtrinsicRes"],[3,"SystemHealthInfo"],[3,"GetBlockHeaderRes"],[3,"PendingExtrinsicsRes"],[3,"StateCallReq"],[3,"StorageSizeRes"],[3,"GetBlockHeaderReq"],[3,"RemoveExtrinsicReq"],[3,"StorageKeysReq"],[3,"StorageQueryReq"],[3,"RemoveExtrinsicRes"],[3,"GetBlockHashRes"],[3,"StorageKeysRes"],[3,"BlockHash"],[3,"StorageHashRes"],[3,"TriggerReq"],[3,"Trigger"],[3,"SystemHealthReq"],[3,"GetFinalizedHeadReq"],[3,"PendingExtrinsicsReq"],[3,"GetBestHeadReq"],[3,"RemoveExtrinsic"],[3,"StorageQuery"],[3,"StorageHash"],[3,"PendingExtrinsics"],[3,"StorageKeys"],[3,"SystemHealth"],[3,"SubmitExtrinsic"],[3,"GetFinalizedHead"],[3,"StateCall"],[3,"StorageSize"],[3,"GetBestHead"],[3,"GetBlockHash"],[3,"GetBlock"],[3,"GetBlockHeader"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);