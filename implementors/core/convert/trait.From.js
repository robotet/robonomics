(function() {var implementors = {};
implementors["node_bench"] = [{"text":"impl From&lt;OpaqueExtrinsic&gt; for PoolTransaction","synthetic":false,"types":[]}];
implementors["node_runtime"] = [{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime, ()&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawOrigin&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for OriginCaller","synthetic":false,"types":[]},{"text":"impl From&lt;RawOrigin&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;OriginCaller&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;Option&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime, ()&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]}];
implementors["pallet_robonomics_datalog"] = [{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Event&lt;T&gt;&gt; for ()","synthetic":false,"types":[]}];
implementors["pallet_robonomics_datalog_xcm"] = [{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Event&lt;T&gt;&gt; for ()","synthetic":false,"types":[]}];
implementors["pallet_robonomics_digital_twin"] = [{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Event&lt;T&gt;&gt; for ()","synthetic":false,"types":[]}];
implementors["pallet_robonomics_launch"] = [{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Event&lt;T&gt;&gt; for ()","synthetic":false,"types":[]}];
implementors["pallet_robonomics_launch_xcm"] = [{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Event&lt;T&gt;&gt; for ()","synthetic":false,"types":[]}];
implementors["pallet_robonomics_liability"] = [{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Error&lt;T&gt;&gt; for &amp;'static str","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Error&lt;T&gt;&gt; for DispatchError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Event&lt;T&gt;&gt; for ()","synthetic":false,"types":[]}];
implementors["pallet_robonomics_rws"] = [{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Error&lt;T&gt;&gt; for &amp;'static str","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Error&lt;T&gt;&gt; for DispatchError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; From&lt;Event&lt;T&gt;&gt; for ()","synthetic":false,"types":[]}];
implementors["parachain_runtime"] = [{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;Runtime as Config&gt;::AccountId, &lt;&lt;Runtime as Config&gt;::Currency as Currency&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime, ()&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;Runtime as Config&gt;::Hash&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;Event&lt;Runtime&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;Runtime as Config&gt;::Hash, &lt;Runtime as Config&gt;::AccountId, Instance1&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;&lt;Runtime as Config&gt;::Currency as Currency&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt;::Balance, &lt;Runtime as Config&gt;::AccountId&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;Runtime as Config&gt;::BlockNumber&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;&lt;Runtime as Config&lt;DefaultInstance&gt;&gt;::Currency as Currency&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt;::Balance, &lt;Runtime as Config&gt;::AccountId, DefaultInstance&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;&lt;Runtime as Config&lt;DefaultInstance&gt;&gt;::Currency as Currency&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt;::Balance, &lt;Runtime as Config&gt;::AccountId&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;&lt;Runtime as Config&lt;DefaultInstance&gt;&gt;::Currency as Currency&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt;::Balance, &lt;Runtime as Config&gt;::AccountId, &lt;Runtime as Config&gt;::Hash&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawEvent&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;RawOrigin&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for OriginCaller","synthetic":false,"types":[]},{"text":"impl From&lt;RawOrigin&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;OriginCaller&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;Option&lt;&lt;Runtime as Config&gt;::AccountId&gt;&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;Origin&gt; for OriginCaller","synthetic":false,"types":[]},{"text":"impl From&lt;Origin&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;RawOrigin&lt;&lt;Runtime as Config&gt;::AccountId, Instance1&gt;&gt; for OriginCaller","synthetic":false,"types":[]},{"text":"impl From&lt;RawOrigin&lt;&lt;Runtime as Config&gt;::AccountId, Instance1&gt;&gt; for Origin","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime, ()&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Pallet&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime, Instance1&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime, DefaultInstance&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]},{"text":"impl From&lt;&lt;Module&lt;Runtime&gt; as Callable&lt;Runtime&gt;&gt;::Call&gt; for Call","synthetic":false,"types":[]}];
implementors["robonomics_cli"] = [{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Error","synthetic":false,"types":[]}];
implementors["robonomics_io"] = [{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;SecretStringError&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;SendError&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Error","synthetic":false,"types":[]}];
implementors["robonomics_protocol"] = [{"text":"impl From&lt;()&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;TransportError&lt;Error&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;ConnectionLimit&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Box&lt;ErrorKind, Global&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Error","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()